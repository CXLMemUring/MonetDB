# ChangeLog file for sql
# This file is updated with Maddlog

* Tue Dec  5 2023 Lucas Pereira <lucas.pereira@monetdbsolutions.com>
- Introduction of table returning function `persist_unlogged(schema
  string, table string)` that attempts to persist data in disk if
  "schema"."table" is unlogged table in insert only mode.  If persist
  attempt is successful, the count of the persisted rows is returned,
  otherwise the count is 0.

* Thu Aug 24 2023 Martin van Dinther <martin.van.dinther@monetdbsolutions.com>
- Added ISO/IEC 9075-11 SQL/Schemata (SQL:2011) with SQL system views:
   information_schema.schemata
   information_schema.tables
   information_schema.views
   information_schema.columns
   information_schema.character_sets
   information_schema.check_constraints
   information_schema.table_constraints
   information_schema.referential_constraints
   information_schema.routines
   information_schema.parameters
   information_schema.sequences
  For details see
  https://www.monetdb.org/documentation/user-guide/sql-catalog/information_schema/

  Most views have been extended (after the standard columns) with MonetDB
  specific information columns such as schema_id, table_id, column_id, etc.
  This simplifies filtering and joins with system tables/views in sys schema
  when needed.

  Note: MonetDB does NOT support catalog qualifiers in object names, so all the
  CATALOG columns in these information_schema views will always return NULL.

* Mon Aug 21 2023 Niels Nes <niels.nes@monetdbsolutions.com>
- Added support for generated column syntax:
   GENERATED BY DEFAULT AS IDENTITY ...
  This allows the user to override the default generated sequence value
  during inserts.

* Fri Jul 7 2023 Niels Nes <niels.nes@monetdbsolutions.com>
- Added SQL support for: <result offset clause> and <fetch first clause>
  in  <query expression> ::=
      [ <with clause> ] <query expression body>
      [ <order by clause> ]
      [ <result offset clause> ]
      [ <fetch first clause> ]
      [ <sample clause> ]

  <result offset clause> ::=
     OFFSET <offset row count> [ {ROW|ROWS} ]

  <fetch first clause> ::=
     FETCH {FIRST|NEXT} <fetch first row count> {ROW|ROWS} ONLY

