stdout of test 'duplicates-not-eliminated-long-CASE-stmt.Bug-6697` in directory 'sql/test/BugTracker-2019` itself:


# 14:08:13 >  
# 14:08:13 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33481" "--set" "mapi_usock=/var/tmp/mtest-8696/.s.monetdb.33481" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 14:08:13 >  

# MonetDB 5 server v11.34.0 (hg id: 29627d20d2e0)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:33481/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8696/.s.monetdb.33481
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 14:08:13 >  
# 14:08:13 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8696" "--port=33481"
# 14:08:13 >  

#CREATE TABLE IF NOT EXISTS "task" (
#"sys_class_name" VARCHAR(80),
#"priority" BIGINT,
#"sys_created_on" TIMESTAMP
#);
#explain SELECT  sys.timestamp_to_str(case when task0."sys_created_on" >= '1999-10-31 09:00:00' and task0."sys_created_on" < '2000-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2000-04-02 10:00:00' and task0."sys_created_on" < '2000-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2000-10-29 09:00:00' and task0."sys_created_on" < '2001-04-01 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2001-04-01 10:00:00' and task0."sys_created_on" < '2001-10-28 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2001-10-28 09:00:00' and task0."sys_created_on" < '2002-04-07 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2002-04-07 10:00:00' and task0."sys_created_on" < '2002-10-27 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2002-10-27 09:00:00' and task0."sys_created_on" < '2003-04-06 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2003-04-06 10:00:00' and task0."sys_created_on" < '2003-10-26 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2003-10-26 09:00:00' and task0."sys_created_on" < '2004-04-04 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2004-04-04 10:00:00' and task0."sys_created_on" < '2004-10-31 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2004-10-31 09:00:00' and task0."sys_created_on" < '2005-04-03 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2005-04-03 10:00:00' and task0."sys_created_on" < '2005-10-30 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2005-10-30 09:00:00' and task0."sys_created_on" < '2006-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2006-04-02 10:00:00' and task0."sys_created_on" < '2006-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2006-10-29 09:00:00' and task0."sys_created_on" < '2007-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2007-03-11 10:00:00' and task0."sys_created_on" < '2007-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2007-11-04 09:00:00' and task0."sys_created_on" < '2008-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2008-03-09 10:00:00' and task0."sys_created_on" < '2008-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2008-11-02 09:00:00' and task0."sys_created_on" < '2009-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2009-03-08 10:00:00' and task0."sys_created_on" < '2009-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2009-11-01 09:00:00' and task0."sys_created_on" < '2010-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2010-03-14 10:00:00' and task0."sys_created_on" < '2010-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2010-11-07 09:00:00' and task0."sys_created_on" < '2011-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2011-03-13 10:00:00' and task0."sys_created_on" < '2011-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2011-11-06 09:00:00' and task0."sys_created_on" < '2012-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2012-03-11 10:00:00' and task0."sys_created_on" < '2012-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2012-11-04 09:00:00' and task0."sys_created_on" < '2013-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2013-03-10 10:00:00' and task0."sys_created_on" < '2013-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2013-11-03 09:00:00' and task0."sys_created_on" < '2014-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2014-03-09 10:00:00' and task0."sys_created_on" < '2014-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2014-11-02 09:00:00' and task0."sys_created_on" < '2015-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2015-03-08 10:00:00' and task0."sys_created_on" < '2015-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2015-11-01 09:00:00' and task0."sys_created_on" < '2016-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2016-03-13 10:00:00' and task0."sys_created_on" < '2016-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2016-11-06 09:00:00' and task0."sys_created_on" < '2017-03-12 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2017-03-12 10:00:00' and task0."sys_created_on" < '2017-11-05 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2017-11-05 09:00:00' and task0."sys_created_on" < '2018-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2018-03-11 10:00:00' and task0."sys_created_on" < '2018-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2018-11-04 09:00:00' and task0."sys_created_on" < '2019-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2019-03-10 10:00:00' and task0."sys_created_on" < '2019-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2019-11-03 09:00:00' and task0."sys_created_on" < '2020-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2020-03-08 10:00:00' and task0."sys_created_on" < '2020-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2020-11-01 09:00:00' and task0."sys_created_on" < '2021-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2021-03-14 10:00:00' and task0."sys_created_on" < '2021-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2021-11-07 09:00:00' and task0."sys_created_on" < '2022-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2022-03-13 10:00:00' and task0."sys_created_on" < '2022-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second else task0."sys_created_on" + interval '-28800' second end,'%Y') AS yearref FROM task task0 WHERE task0."sys_class_name" = 'incident' AND task0."priority" IS NOT NULL ;
% .explain # table_name
% mal # name
% clob # type
% 1023 # length
function user.main():void;
    X_1:void := querylog.define("explain select sys.timestamp_to_str(case when task0.\"sys_created_on\" >= \\'1999-10-31 09:00:00\\' and task0.\"sys_created_on\" < \\'2000-04-02 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2000-04-02 10:00:00\\' and task0.\"sys_created_on\" < \\'2000-10-29 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2000-10-29 09:00:00\\' and task0.\"sys_created_on\" < \\'2001-04-01 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2001-04-01 10:00:00\\' and task0.\"sys_created_on\" < \\'2001-10-28 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2001-10-28 09:00:00\\' and task0.\"sys_created_on\" < \\'2002-04-07 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2002-04-07 10:00:00\\' and t
barrier X_1088:bit := language.dataflow();
    X_38:bat[:str] := bat.new(nil:str);
    X_51:bat[:timestamp] := algebra.project(X_38:bat[:str], nil:timestamp);
    X_40:bat[:timestamp] := bat.new(nil:timestamp);
    X_46:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "1999-10-31 09:00:00.000000":timestamp, "2000-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    C_53:bat[:cnd] := algebra.thetaselect(X_46:bat[:bit], true:bit, "==":str);
    X_56:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng);
    X_59:bat[:timestamp] := algebra.projection(C_53:bat[:cnd], X_56:bat[:timestamp]);
    X_60:bat[:timestamp] := bat.replace(X_51:bat[:timestamp], C_53:bat[:cnd], X_59:bat[:timestamp], true:bit);
    C_61:bat[:oid] := bat.mirror(X_38:bat[:str]);
    C_62:bat[:cnd] := algebra.difference(C_61:bat[:oid], C_53:bat[:cnd], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_66:bat[:oid] := algebra.projection(C_62:bat[:cnd], C_61:bat[:oid]);
    X_70:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2000-04-02 10:00:00.000000":timestamp, "2000-10-29 09:00:00.000000":timestamp, C_66:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_73:bat[:cnd] := algebra.thetaselect(X_70:bat[:bit], true:bit, "==":str);
    C_75:bat[:oid] := algebra.projection(C_73:bat[:cnd], C_66:bat[:oid]);
    X_78:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng);
    X_79:bat[:timestamp] := algebra.projection(C_75:bat[:oid], X_78:bat[:timestamp]);
    X_80:bat[:timestamp] := bat.replace(X_60:bat[:timestamp], C_75:bat[:oid], X_79:bat[:timestamp], true:bit);
    C_81:bat[:cnd] := algebra.difference(C_66:bat[:oid], C_75:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_84:bat[:oid] := algebra.projection(C_81:bat[:cnd], C_66:bat[:oid]);
    X_89:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2000-10-29 09:00:00.000000":timestamp, "2001-04-01 10:00:00.000000":timestamp, C_84:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_91:bat[:cnd] := algebra.thetaselect(X_89:bat[:bit], true:bit, "==":str);
    C_92:bat[:oid] := algebra.projection(C_91:bat[:cnd], C_84:bat[:oid]);
    X_98:bat[:timestamp] := algebra.projection(C_92:bat[:oid], X_56:bat[:timestamp]);
    X_99:bat[:timestamp] := bat.replace(X_80:bat[:timestamp], C_92:bat[:oid], X_98:bat[:timestamp], true:bit);
    C_100:bat[:cnd] := algebra.difference(C_84:bat[:oid], C_92:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_104:bat[:oid] := algebra.projection(C_100:bat[:cnd], C_84:bat[:oid]);
    X_108:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2001-04-01 10:00:00.000000":timestamp, "2001-10-28 09:00:00.000000":timestamp, C_104:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_111:bat[:cnd] := algebra.thetaselect(X_108:bat[:bit], true:bit, "==":str);
    C_113:bat[:oid] := algebra.projection(C_111:bat[:cnd], C_104:bat[:oid]);
    X_117:bat[:timestamp] := algebra.projection(C_113:bat[:oid], X_78:bat[:timestamp]);
    X_118:bat[:timestamp] := bat.replace(X_99:bat[:timestamp], C_113:bat[:oid], X_117:bat[:timestamp], true:bit);
    C_119:bat[:cnd] := algebra.difference(C_104:bat[:oid], C_113:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_122:bat[:oid] := algebra.projection(C_119:bat[:cnd], C_104:bat[:oid]);
    X_127:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2001-10-28 09:00:00.000000":timestamp, "2002-04-07 10:00:00.000000":timestamp, C_122:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_129:bat[:cnd] := algebra.thetaselect(X_127:bat[:bit], true:bit, "==":str);
    C_130:bat[:oid] := algebra.projection(C_129:bat[:cnd], C_122:bat[:oid]);
    X_136:bat[:timestamp] := algebra.projection(C_130:bat[:oid], X_56:bat[:timestamp]);
    X_137:bat[:timestamp] := bat.replace(X_118:bat[:timestamp], C_130:bat[:oid], X_136:bat[:timestamp], true:bit);
    C_138:bat[:cnd] := algebra.difference(C_122:bat[:oid], C_130:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_142:bat[:oid] := algebra.projection(C_138:bat[:cnd], C_122:bat[:oid]);
    X_146:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2002-04-07 10:00:00.000000":timestamp, "2002-10-27 09:00:00.000000":timestamp, C_142:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_149:bat[:cnd] := algebra.thetaselect(X_146:bat[:bit], true:bit, "==":str);
    C_151:bat[:oid] := algebra.projection(C_149:bat[:cnd], C_142:bat[:oid]);
    X_155:bat[:timestamp] := algebra.projection(C_151:bat[:oid], X_78:bat[:timestamp]);
    X_156:bat[:timestamp] := bat.replace(X_137:bat[:timestamp], C_151:bat[:oid], X_155:bat[:timestamp], true:bit);
    C_157:bat[:cnd] := algebra.difference(C_142:bat[:oid], C_151:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_160:bat[:oid] := algebra.projection(C_157:bat[:cnd], C_142:bat[:oid]);
    X_165:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2002-10-27 09:00:00.000000":timestamp, "2003-04-06 10:00:00.000000":timestamp, C_160:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_167:bat[:cnd] := algebra.thetaselect(X_165:bat[:bit], true:bit, "==":str);
    C_168:bat[:oid] := algebra.projection(C_167:bat[:cnd], C_160:bat[:oid]);
    X_174:bat[:timestamp] := algebra.projection(C_168:bat[:oid], X_56:bat[:timestamp]);
    X_175:bat[:timestamp] := bat.replace(X_156:bat[:timestamp], C_168:bat[:oid], X_174:bat[:timestamp], true:bit);
    C_176:bat[:cnd] := algebra.difference(C_160:bat[:oid], C_168:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_180:bat[:oid] := algebra.projection(C_176:bat[:cnd], C_160:bat[:oid]);
    X_184:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2003-04-06 10:00:00.000000":timestamp, "2003-10-26 09:00:00.000000":timestamp, C_180:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_187:bat[:cnd] := algebra.thetaselect(X_184:bat[:bit], true:bit, "==":str);
    C_189:bat[:oid] := algebra.projection(C_187:bat[:cnd], C_180:bat[:oid]);
    X_193:bat[:timestamp] := algebra.projection(C_189:bat[:oid], X_78:bat[:timestamp]);
    X_194:bat[:timestamp] := bat.replace(X_175:bat[:timestamp], C_189:bat[:oid], X_193:bat[:timestamp], true:bit);
    C_195:bat[:cnd] := algebra.difference(C_180:bat[:oid], C_189:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_198:bat[:oid] := algebra.projection(C_195:bat[:cnd], C_180:bat[:oid]);
    X_203:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2003-10-26 09:00:00.000000":timestamp, "2004-04-04 10:00:00.000000":timestamp, C_198:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_205:bat[:cnd] := algebra.thetaselect(X_203:bat[:bit], true:bit, "==":str);
    C_206:bat[:oid] := algebra.projection(C_205:bat[:cnd], C_198:bat[:oid]);
    X_212:bat[:timestamp] := algebra.projection(C_206:bat[:oid], X_56:bat[:timestamp]);
    X_213:bat[:timestamp] := bat.replace(X_194:bat[:timestamp], C_206:bat[:oid], X_212:bat[:timestamp], true:bit);
    C_214:bat[:cnd] := algebra.difference(C_198:bat[:oid], C_206:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_218:bat[:oid] := algebra.projection(C_214:bat[:cnd], C_198:bat[:oid]);
    X_222:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2004-04-04 10:00:00.000000":timestamp, "2004-10-31 09:00:00.000000":timestamp, C_218:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_225:bat[:cnd] := algebra.thetaselect(X_222:bat[:bit], true:bit, "==":str);
    C_227:bat[:oid] := algebra.projection(C_225:bat[:cnd], C_218:bat[:oid]);
    X_231:bat[:timestamp] := algebra.projection(C_227:bat[:oid], X_78:bat[:timestamp]);
    X_232:bat[:timestamp] := bat.replace(X_213:bat[:timestamp], C_227:bat[:oid], X_231:bat[:timestamp], true:bit);
    C_233:bat[:cnd] := algebra.difference(C_218:bat[:oid], C_227:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_236:bat[:oid] := algebra.projection(C_233:bat[:cnd], C_218:bat[:oid]);
    X_241:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2004-10-31 09:00:00.000000":timestamp, "2005-04-03 10:00:00.000000":timestamp, C_236:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_243:bat[:cnd] := algebra.thetaselect(X_241:bat[:bit], true:bit, "==":str);
    C_244:bat[:oid] := algebra.projection(C_243:bat[:cnd], C_236:bat[:oid]);
    X_250:bat[:timestamp] := algebra.projection(C_244:bat[:oid], X_56:bat[:timestamp]);
    X_251:bat[:timestamp] := bat.replace(X_232:bat[:timestamp], C_244:bat[:oid], X_250:bat[:timestamp], true:bit);
    C_252:bat[:cnd] := algebra.difference(C_236:bat[:oid], C_244:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_256:bat[:oid] := algebra.projection(C_252:bat[:cnd], C_236:bat[:oid]);
    X_260:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2005-04-03 10:00:00.000000":timestamp, "2005-10-30 09:00:00.000000":timestamp, C_256:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_263:bat[:cnd] := algebra.thetaselect(X_260:bat[:bit], true:bit, "==":str);
    C_265:bat[:oid] := algebra.projection(C_263:bat[:cnd], C_256:bat[:oid]);
    X_269:bat[:timestamp] := algebra.projection(C_265:bat[:oid], X_78:bat[:timestamp]);
    X_270:bat[:timestamp] := bat.replace(X_251:bat[:timestamp], C_265:bat[:oid], X_269:bat[:timestamp], true:bit);
    C_271:bat[:cnd] := algebra.difference(C_256:bat[:oid], C_265:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_274:bat[:oid] := algebra.projection(C_271:bat[:cnd], C_256:bat[:oid]);
    X_279:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2005-10-30 09:00:00.000000":timestamp, "2006-04-02 10:00:00.000000":timestamp, C_274:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_281:bat[:cnd] := algebra.thetaselect(X_279:bat[:bit], true:bit, "==":str);
    C_282:bat[:oid] := algebra.projection(C_281:bat[:cnd], C_274:bat[:oid]);
    X_288:bat[:timestamp] := algebra.projection(C_282:bat[:oid], X_56:bat[:timestamp]);
    X_289:bat[:timestamp] := bat.replace(X_270:bat[:timestamp], C_282:bat[:oid], X_288:bat[:timestamp], true:bit);
    C_290:bat[:cnd] := algebra.difference(C_274:bat[:oid], C_282:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_294:bat[:oid] := algebra.projection(C_290:bat[:cnd], C_274:bat[:oid]);
    X_298:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2006-04-02 10:00:00.000000":timestamp, "2006-10-29 09:00:00.000000":timestamp, C_294:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_301:bat[:cnd] := algebra.thetaselect(X_298:bat[:bit], true:bit, "==":str);
    C_303:bat[:oid] := algebra.projection(C_301:bat[:cnd], C_294:bat[:oid]);
    X_307:bat[:timestamp] := algebra.projection(C_303:bat[:oid], X_78:bat[:timestamp]);
    X_308:bat[:timestamp] := bat.replace(X_289:bat[:timestamp], C_303:bat[:oid], X_307:bat[:timestamp], true:bit);
    C_309:bat[:cnd] := algebra.difference(C_294:bat[:oid], C_303:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_312:bat[:oid] := algebra.projection(C_309:bat[:cnd], C_294:bat[:oid]);
    X_317:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2006-10-29 09:00:00.000000":timestamp, "2007-03-11 10:00:00.000000":timestamp, C_312:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_319:bat[:cnd] := algebra.thetaselect(X_317:bat[:bit], true:bit, "==":str);
    C_320:bat[:oid] := algebra.projection(C_319:bat[:cnd], C_312:bat[:oid]);
    X_326:bat[:timestamp] := algebra.projection(C_320:bat[:oid], X_56:bat[:timestamp]);
    X_327:bat[:timestamp] := bat.replace(X_308:bat[:timestamp], C_320:bat[:oid], X_326:bat[:timestamp], true:bit);
    C_328:bat[:cnd] := algebra.difference(C_312:bat[:oid], C_320:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_332:bat[:oid] := algebra.projection(C_328:bat[:cnd], C_312:bat[:oid]);
    X_336:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2007-03-11 10:00:00.000000":timestamp, "2007-11-04 09:00:00.000000":timestamp, C_332:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_339:bat[:cnd] := algebra.thetaselect(X_336:bat[:bit], true:bit, "==":str);
    C_341:bat[:oid] := algebra.projection(C_339:bat[:cnd], C_332:bat[:oid]);
    X_345:bat[:timestamp] := algebra.projection(C_341:bat[:oid], X_78:bat[:timestamp]);
    X_346:bat[:timestamp] := bat.replace(X_327:bat[:timestamp], C_341:bat[:oid], X_345:bat[:timestamp], true:bit);
    C_347:bat[:cnd] := algebra.difference(C_332:bat[:oid], C_341:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_350:bat[:oid] := algebra.projection(C_347:bat[:cnd], C_332:bat[:oid]);
    X_355:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2007-11-04 09:00:00.000000":timestamp, "2008-03-09 10:00:00.000000":timestamp, C_350:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_357:bat[:cnd] := algebra.thetaselect(X_355:bat[:bit], true:bit, "==":str);
    C_358:bat[:oid] := algebra.projection(C_357:bat[:cnd], C_350:bat[:oid]);
    X_364:bat[:timestamp] := algebra.projection(C_358:bat[:oid], X_56:bat[:timestamp]);
    X_365:bat[:timestamp] := bat.replace(X_346:bat[:timestamp], C_358:bat[:oid], X_364:bat[:timestamp], true:bit);
    C_366:bat[:cnd] := algebra.difference(C_350:bat[:oid], C_358:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_370:bat[:oid] := algebra.projection(C_366:bat[:cnd], C_350:bat[:oid]);
    X_374:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2008-03-09 10:00:00.000000":timestamp, "2008-11-02 09:00:00.000000":timestamp, C_370:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_377:bat[:cnd] := algebra.thetaselect(X_374:bat[:bit], true:bit, "==":str);
    C_379:bat[:oid] := algebra.projection(C_377:bat[:cnd], C_370:bat[:oid]);
    X_383:bat[:timestamp] := algebra.projection(C_379:bat[:oid], X_78:bat[:timestamp]);
    X_384:bat[:timestamp] := bat.replace(X_365:bat[:timestamp], C_379:bat[:oid], X_383:bat[:timestamp], true:bit);
    C_385:bat[:cnd] := algebra.difference(C_370:bat[:oid], C_379:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_388:bat[:oid] := algebra.projection(C_385:bat[:cnd], C_370:bat[:oid]);
    X_393:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2008-11-02 09:00:00.000000":timestamp, "2009-03-08 10:00:00.000000":timestamp, C_388:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_395:bat[:cnd] := algebra.thetaselect(X_393:bat[:bit], true:bit, "==":str);
    C_396:bat[:oid] := algebra.projection(C_395:bat[:cnd], C_388:bat[:oid]);
    X_402:bat[:timestamp] := algebra.projection(C_396:bat[:oid], X_56:bat[:timestamp]);
    X_403:bat[:timestamp] := bat.replace(X_384:bat[:timestamp], C_396:bat[:oid], X_402:bat[:timestamp], true:bit);
    C_404:bat[:cnd] := algebra.difference(C_388:bat[:oid], C_396:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_408:bat[:oid] := algebra.projection(C_404:bat[:cnd], C_388:bat[:oid]);
    X_412:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2009-03-08 10:00:00.000000":timestamp, "2009-11-01 09:00:00.000000":timestamp, C_408:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_415:bat[:cnd] := algebra.thetaselect(X_412:bat[:bit], true:bit, "==":str);
    C_417:bat[:oid] := algebra.projection(C_415:bat[:cnd], C_408:bat[:oid]);
    X_421:bat[:timestamp] := algebra.projection(C_417:bat[:oid], X_78:bat[:timestamp]);
    X_422:bat[:timestamp] := bat.replace(X_403:bat[:timestamp], C_417:bat[:oid], X_421:bat[:timestamp], true:bit);
    C_423:bat[:cnd] := algebra.difference(C_408:bat[:oid], C_417:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_426:bat[:oid] := algebra.projection(C_423:bat[:cnd], C_408:bat[:oid]);
    X_431:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2009-11-01 09:00:00.000000":timestamp, "2010-03-14 10:00:00.000000":timestamp, C_426:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_433:bat[:cnd] := algebra.thetaselect(X_431:bat[:bit], true:bit, "==":str);
    C_434:bat[:oid] := algebra.projection(C_433:bat[:cnd], C_426:bat[:oid]);
    X_440:bat[:timestamp] := algebra.projection(C_434:bat[:oid], X_56:bat[:timestamp]);
    X_441:bat[:timestamp] := bat.replace(X_422:bat[:timestamp], C_434:bat[:oid], X_440:bat[:timestamp], true:bit);
    C_442:bat[:cnd] := algebra.difference(C_426:bat[:oid], C_434:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_446:bat[:oid] := algebra.projection(C_442:bat[:cnd], C_426:bat[:oid]);
    X_450:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2010-03-14 10:00:00.000000":timestamp, "2010-11-07 09:00:00.000000":timestamp, C_446:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_453:bat[:cnd] := algebra.thetaselect(X_450:bat[:bit], true:bit, "==":str);
    C_455:bat[:oid] := algebra.projection(C_453:bat[:cnd], C_446:bat[:oid]);
    X_459:bat[:timestamp] := algebra.projection(C_455:bat[:oid], X_78:bat[:timestamp]);
    X_460:bat[:timestamp] := bat.replace(X_441:bat[:timestamp], C_455:bat[:oid], X_459:bat[:timestamp], true:bit);
    C_461:bat[:cnd] := algebra.difference(C_446:bat[:oid], C_455:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_464:bat[:oid] := algebra.projection(C_461:bat[:cnd], C_446:bat[:oid]);
    X_469:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2010-11-07 09:00:00.000000":timestamp, "2011-03-13 10:00:00.000000":timestamp, C_464:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_471:bat[:cnd] := algebra.thetaselect(X_469:bat[:bit], true:bit, "==":str);
    C_472:bat[:oid] := algebra.projection(C_471:bat[:cnd], C_464:bat[:oid]);
    X_478:bat[:timestamp] := algebra.projection(C_472:bat[:oid], X_56:bat[:timestamp]);
    X_479:bat[:timestamp] := bat.replace(X_460:bat[:timestamp], C_472:bat[:oid], X_478:bat[:timestamp], true:bit);
    C_480:bat[:cnd] := algebra.difference(C_464:bat[:oid], C_472:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_484:bat[:oid] := algebra.projection(C_480:bat[:cnd], C_464:bat[:oid]);
    X_488:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2011-03-13 10:00:00.000000":timestamp, "2011-11-06 09:00:00.000000":timestamp, C_484:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_491:bat[:cnd] := algebra.thetaselect(X_488:bat[:bit], true:bit, "==":str);
    C_493:bat[:oid] := algebra.projection(C_491:bat[:cnd], C_484:bat[:oid]);
    X_497:bat[:timestamp] := algebra.projection(C_493:bat[:oid], X_78:bat[:timestamp]);
    X_498:bat[:timestamp] := bat.replace(X_479:bat[:timestamp], C_493:bat[:oid], X_497:bat[:timestamp], true:bit);
    C_499:bat[:cnd] := algebra.difference(C_484:bat[:oid], C_493:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_502:bat[:oid] := algebra.projection(C_499:bat[:cnd], C_484:bat[:oid]);
    X_507:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2011-11-06 09:00:00.000000":timestamp, "2012-03-11 10:00:00.000000":timestamp, C_502:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_509:bat[:cnd] := algebra.thetaselect(X_507:bat[:bit], true:bit, "==":str);
    C_510:bat[:oid] := algebra.projection(C_509:bat[:cnd], C_502:bat[:oid]);
    X_516:bat[:timestamp] := algebra.projection(C_510:bat[:oid], X_56:bat[:timestamp]);
    X_517:bat[:timestamp] := bat.replace(X_498:bat[:timestamp], C_510:bat[:oid], X_516:bat[:timestamp], true:bit);
    C_518:bat[:cnd] := algebra.difference(C_502:bat[:oid], C_510:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_522:bat[:oid] := algebra.projection(C_518:bat[:cnd], C_502:bat[:oid]);
    X_526:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2012-03-11 10:00:00.000000":timestamp, "2012-11-04 09:00:00.000000":timestamp, C_522:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_529:bat[:cnd] := algebra.thetaselect(X_526:bat[:bit], true:bit, "==":str);
    C_531:bat[:oid] := algebra.projection(C_529:bat[:cnd], C_522:bat[:oid]);
    X_535:bat[:timestamp] := algebra.projection(C_531:bat[:oid], X_78:bat[:timestamp]);
    X_536:bat[:timestamp] := bat.replace(X_517:bat[:timestamp], C_531:bat[:oid], X_535:bat[:timestamp], true:bit);
    C_537:bat[:cnd] := algebra.difference(C_522:bat[:oid], C_531:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_540:bat[:oid] := algebra.projection(C_537:bat[:cnd], C_522:bat[:oid]);
    X_545:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2012-11-04 09:00:00.000000":timestamp, "2013-03-10 10:00:00.000000":timestamp, C_540:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_547:bat[:cnd] := algebra.thetaselect(X_545:bat[:bit], true:bit, "==":str);
    C_548:bat[:oid] := algebra.projection(C_547:bat[:cnd], C_540:bat[:oid]);
    X_554:bat[:timestamp] := algebra.projection(C_548:bat[:oid], X_56:bat[:timestamp]);
    X_555:bat[:timestamp] := bat.replace(X_536:bat[:timestamp], C_548:bat[:oid], X_554:bat[:timestamp], true:bit);
    C_556:bat[:cnd] := algebra.difference(C_540:bat[:oid], C_548:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_560:bat[:oid] := algebra.projection(C_556:bat[:cnd], C_540:bat[:oid]);
    X_564:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2013-03-10 10:00:00.000000":timestamp, "2013-11-03 09:00:00.000000":timestamp, C_560:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_567:bat[:cnd] := algebra.thetaselect(X_564:bat[:bit], true:bit, "==":str);
    C_569:bat[:oid] := algebra.projection(C_567:bat[:cnd], C_560:bat[:oid]);
    X_573:bat[:timestamp] := algebra.projection(C_569:bat[:oid], X_78:bat[:timestamp]);
    X_574:bat[:timestamp] := bat.replace(X_555:bat[:timestamp], C_569:bat[:oid], X_573:bat[:timestamp], true:bit);
    C_575:bat[:cnd] := algebra.difference(C_560:bat[:oid], C_569:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_578:bat[:oid] := algebra.projection(C_575:bat[:cnd], C_560:bat[:oid]);
    X_583:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2013-11-03 09:00:00.000000":timestamp, "2014-03-09 10:00:00.000000":timestamp, C_578:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_585:bat[:cnd] := algebra.thetaselect(X_583:bat[:bit], true:bit, "==":str);
    C_586:bat[:oid] := algebra.projection(C_585:bat[:cnd], C_578:bat[:oid]);
    X_592:bat[:timestamp] := algebra.projection(C_586:bat[:oid], X_56:bat[:timestamp]);
    X_593:bat[:timestamp] := bat.replace(X_574:bat[:timestamp], C_586:bat[:oid], X_592:bat[:timestamp], true:bit);
    C_594:bat[:cnd] := algebra.difference(C_578:bat[:oid], C_586:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_598:bat[:oid] := algebra.projection(C_594:bat[:cnd], C_578:bat[:oid]);
    X_602:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2014-03-09 10:00:00.000000":timestamp, "2014-11-02 09:00:00.000000":timestamp, C_598:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_605:bat[:cnd] := algebra.thetaselect(X_602:bat[:bit], true:bit, "==":str);
    C_607:bat[:oid] := algebra.projection(C_605:bat[:cnd], C_598:bat[:oid]);
    X_611:bat[:timestamp] := algebra.projection(C_607:bat[:oid], X_78:bat[:timestamp]);
    X_612:bat[:timestamp] := bat.replace(X_593:bat[:timestamp], C_607:bat[:oid], X_611:bat[:timestamp], true:bit);
    C_613:bat[:cnd] := algebra.difference(C_598:bat[:oid], C_607:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_616:bat[:oid] := algebra.projection(C_613:bat[:cnd], C_598:bat[:oid]);
    X_621:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2014-11-02 09:00:00.000000":timestamp, "2015-03-08 10:00:00.000000":timestamp, C_616:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_623:bat[:cnd] := algebra.thetaselect(X_621:bat[:bit], true:bit, "==":str);
    C_624:bat[:oid] := algebra.projection(C_623:bat[:cnd], C_616:bat[:oid]);
    X_630:bat[:timestamp] := algebra.projection(C_624:bat[:oid], X_56:bat[:timestamp]);
    X_631:bat[:timestamp] := bat.replace(X_612:bat[:timestamp], C_624:bat[:oid], X_630:bat[:timestamp], true:bit);
    C_632:bat[:cnd] := algebra.difference(C_616:bat[:oid], C_624:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_636:bat[:oid] := algebra.projection(C_632:bat[:cnd], C_616:bat[:oid]);
    X_640:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2015-03-08 10:00:00.000000":timestamp, "2015-11-01 09:00:00.000000":timestamp, C_636:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_643:bat[:cnd] := algebra.thetaselect(X_640:bat[:bit], true:bit, "==":str);
    C_645:bat[:oid] := algebra.projection(C_643:bat[:cnd], C_636:bat[:oid]);
    X_649:bat[:timestamp] := algebra.projection(C_645:bat[:oid], X_78:bat[:timestamp]);
    X_650:bat[:timestamp] := bat.replace(X_631:bat[:timestamp], C_645:bat[:oid], X_649:bat[:timestamp], true:bit);
    C_651:bat[:cnd] := algebra.difference(C_636:bat[:oid], C_645:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_654:bat[:oid] := algebra.projection(C_651:bat[:cnd], C_636:bat[:oid]);
    X_659:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2015-11-01 09:00:00.000000":timestamp, "2016-03-13 10:00:00.000000":timestamp, C_654:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_661:bat[:cnd] := algebra.thetaselect(X_659:bat[:bit], true:bit, "==":str);
    C_662:bat[:oid] := algebra.projection(C_661:bat[:cnd], C_654:bat[:oid]);
    X_668:bat[:timestamp] := algebra.projection(C_662:bat[:oid], X_56:bat[:timestamp]);
    X_669:bat[:timestamp] := bat.replace(X_650:bat[:timestamp], C_662:bat[:oid], X_668:bat[:timestamp], true:bit);
    C_670:bat[:cnd] := algebra.difference(C_654:bat[:oid], C_662:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_674:bat[:oid] := algebra.projection(C_670:bat[:cnd], C_654:bat[:oid]);
    X_678:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2016-03-13 10:00:00.000000":timestamp, "2016-11-06 09:00:00.000000":timestamp, C_674:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_681:bat[:cnd] := algebra.thetaselect(X_678:bat[:bit], true:bit, "==":str);
    C_683:bat[:oid] := algebra.projection(C_681:bat[:cnd], C_674:bat[:oid]);
    X_687:bat[:timestamp] := algebra.projection(C_683:bat[:oid], X_78:bat[:timestamp]);
    X_688:bat[:timestamp] := bat.replace(X_669:bat[:timestamp], C_683:bat[:oid], X_687:bat[:timestamp], true:bit);
    C_689:bat[:cnd] := algebra.difference(C_674:bat[:oid], C_683:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_692:bat[:oid] := algebra.projection(C_689:bat[:cnd], C_674:bat[:oid]);
    X_697:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2016-11-06 09:00:00.000000":timestamp, "2017-03-12 10:00:00.000000":timestamp, C_692:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_699:bat[:cnd] := algebra.thetaselect(X_697:bat[:bit], true:bit, "==":str);
    C_700:bat[:oid] := algebra.projection(C_699:bat[:cnd], C_692:bat[:oid]);
    X_706:bat[:timestamp] := algebra.projection(C_700:bat[:oid], X_56:bat[:timestamp]);
    X_707:bat[:timestamp] := bat.replace(X_688:bat[:timestamp], C_700:bat[:oid], X_706:bat[:timestamp], true:bit);
    C_708:bat[:cnd] := algebra.difference(C_692:bat[:oid], C_700:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_712:bat[:oid] := algebra.projection(C_708:bat[:cnd], C_692:bat[:oid]);
    X_716:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2017-03-12 10:00:00.000000":timestamp, "2017-11-05 09:00:00.000000":timestamp, C_712:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_719:bat[:cnd] := algebra.thetaselect(X_716:bat[:bit], true:bit, "==":str);
    C_721:bat[:oid] := algebra.projection(C_719:bat[:cnd], C_712:bat[:oid]);
    X_725:bat[:timestamp] := algebra.projection(C_721:bat[:oid], X_78:bat[:timestamp]);
    X_726:bat[:timestamp] := bat.replace(X_707:bat[:timestamp], C_721:bat[:oid], X_725:bat[:timestamp], true:bit);
    C_727:bat[:cnd] := algebra.difference(C_712:bat[:oid], C_721:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_730:bat[:oid] := algebra.projection(C_727:bat[:cnd], C_712:bat[:oid]);
    X_735:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2017-11-05 09:00:00.000000":timestamp, "2018-03-11 10:00:00.000000":timestamp, C_730:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_737:bat[:cnd] := algebra.thetaselect(X_735:bat[:bit], true:bit, "==":str);
    C_738:bat[:oid] := algebra.projection(C_737:bat[:cnd], C_730:bat[:oid]);
    X_744:bat[:timestamp] := algebra.projection(C_738:bat[:oid], X_56:bat[:timestamp]);
    X_745:bat[:timestamp] := bat.replace(X_726:bat[:timestamp], C_738:bat[:oid], X_744:bat[:timestamp], true:bit);
    C_746:bat[:cnd] := algebra.difference(C_730:bat[:oid], C_738:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_750:bat[:oid] := algebra.projection(C_746:bat[:cnd], C_730:bat[:oid]);
    X_754:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2018-03-11 10:00:00.000000":timestamp, "2018-11-04 09:00:00.000000":timestamp, C_750:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_757:bat[:cnd] := algebra.thetaselect(X_754:bat[:bit], true:bit, "==":str);
    C_759:bat[:oid] := algebra.projection(C_757:bat[:cnd], C_750:bat[:oid]);
    X_763:bat[:timestamp] := algebra.projection(C_759:bat[:oid], X_78:bat[:timestamp]);
    X_764:bat[:timestamp] := bat.replace(X_745:bat[:timestamp], C_759:bat[:oid], X_763:bat[:timestamp], true:bit);
    C_765:bat[:cnd] := algebra.difference(C_750:bat[:oid], C_759:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_768:bat[:oid] := algebra.projection(C_765:bat[:cnd], C_750:bat[:oid]);
    X_773:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2018-11-04 09:00:00.000000":timestamp, "2019-03-10 10:00:00.000000":timestamp, C_768:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_775:bat[:cnd] := algebra.thetaselect(X_773:bat[:bit], true:bit, "==":str);
    C_776:bat[:oid] := algebra.projection(C_775:bat[:cnd], C_768:bat[:oid]);
    X_782:bat[:timestamp] := algebra.projection(C_776:bat[:oid], X_56:bat[:timestamp]);
    X_783:bat[:timestamp] := bat.replace(X_764:bat[:timestamp], C_776:bat[:oid], X_782:bat[:timestamp], true:bit);
    C_784:bat[:cnd] := algebra.difference(C_768:bat[:oid], C_776:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_788:bat[:oid] := algebra.projection(C_784:bat[:cnd], C_768:bat[:oid]);
    X_792:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2019-03-10 10:00:00.000000":timestamp, "2019-11-03 09:00:00.000000":timestamp, C_788:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_795:bat[:cnd] := algebra.thetaselect(X_792:bat[:bit], true:bit, "==":str);
    C_797:bat[:oid] := algebra.projection(C_795:bat[:cnd], C_788:bat[:oid]);
    X_801:bat[:timestamp] := algebra.projection(C_797:bat[:oid], X_78:bat[:timestamp]);
    X_802:bat[:timestamp] := bat.replace(X_783:bat[:timestamp], C_797:bat[:oid], X_801:bat[:timestamp], true:bit);
    C_803:bat[:cnd] := algebra.difference(C_788:bat[:oid], C_797:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_806:bat[:oid] := algebra.projection(C_803:bat[:cnd], C_788:bat[:oid]);
    X_811:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2019-11-03 09:00:00.000000":timestamp, "2020-03-08 10:00:00.000000":timestamp, C_806:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_813:bat[:cnd] := algebra.thetaselect(X_811:bat[:bit], true:bit, "==":str);
    C_814:bat[:oid] := algebra.projection(C_813:bat[:cnd], C_806:bat[:oid]);
    X_820:bat[:timestamp] := algebra.projection(C_814:bat[:oid], X_56:bat[:timestamp]);
    X_821:bat[:timestamp] := bat.replace(X_802:bat[:timestamp], C_814:bat[:oid], X_820:bat[:timestamp], true:bit);
    C_822:bat[:cnd] := algebra.difference(C_806:bat[:oid], C_814:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_826:bat[:oid] := algebra.projection(C_822:bat[:cnd], C_806:bat[:oid]);
    X_830:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2020-03-08 10:00:00.000000":timestamp, "2020-11-01 09:00:00.000000":timestamp, C_826:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_833:bat[:cnd] := algebra.thetaselect(X_830:bat[:bit], true:bit, "==":str);
    C_835:bat[:oid] := algebra.projection(C_833:bat[:cnd], C_826:bat[:oid]);
    X_839:bat[:timestamp] := algebra.projection(C_835:bat[:oid], X_78:bat[:timestamp]);
    X_840:bat[:timestamp] := bat.replace(X_821:bat[:timestamp], C_835:bat[:oid], X_839:bat[:timestamp], true:bit);
    C_841:bat[:cnd] := algebra.difference(C_826:bat[:oid], C_835:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_844:bat[:oid] := algebra.projection(C_841:bat[:cnd], C_826:bat[:oid]);
    X_849:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2020-11-01 09:00:00.000000":timestamp, "2021-03-14 10:00:00.000000":timestamp, C_844:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_851:bat[:cnd] := algebra.thetaselect(X_849:bat[:bit], true:bit, "==":str);
    C_852:bat[:oid] := algebra.projection(C_851:bat[:cnd], C_844:bat[:oid]);
    X_858:bat[:timestamp] := algebra.projection(C_852:bat[:oid], X_56:bat[:timestamp]);
    X_859:bat[:timestamp] := bat.replace(X_840:bat[:timestamp], C_852:bat[:oid], X_858:bat[:timestamp], true:bit);
    C_860:bat[:cnd] := algebra.difference(C_844:bat[:oid], C_852:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_864:bat[:oid] := algebra.projection(C_860:bat[:cnd], C_844:bat[:oid]);
    X_868:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2021-03-14 10:00:00.000000":timestamp, "2021-11-07 09:00:00.000000":timestamp, C_864:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_871:bat[:cnd] := algebra.thetaselect(X_868:bat[:bit], true:bit, "==":str);
    C_873:bat[:oid] := algebra.projection(C_871:bat[:cnd], C_864:bat[:oid]);
    X_877:bat[:timestamp] := algebra.projection(C_873:bat[:oid], X_78:bat[:timestamp]);
    X_878:bat[:timestamp] := bat.replace(X_859:bat[:timestamp], C_873:bat[:oid], X_877:bat[:timestamp], true:bit);
    C_879:bat[:cnd] := algebra.difference(C_864:bat[:oid], C_873:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_882:bat[:oid] := algebra.projection(C_879:bat[:cnd], C_864:bat[:oid]);
    X_887:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2021-11-07 09:00:00.000000":timestamp, "2022-03-13 10:00:00.000000":timestamp, C_882:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_889:bat[:cnd] := algebra.thetaselect(X_887:bat[:bit], true:bit, "==":str);
    C_890:bat[:oid] := algebra.projection(C_889:bat[:cnd], C_882:bat[:oid]);
    X_896:bat[:timestamp] := algebra.projection(C_890:bat[:oid], X_56:bat[:timestamp]);
    X_897:bat[:timestamp] := bat.replace(X_878:bat[:timestamp], C_890:bat[:oid], X_896:bat[:timestamp], true:bit);
    C_898:bat[:cnd] := algebra.difference(C_882:bat[:oid], C_890:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_902:bat[:oid] := algebra.projection(C_898:bat[:cnd], C_882:bat[:oid]);
    X_906:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2022-03-13 10:00:00.000000":timestamp, "2022-11-06 09:00:00.000000":timestamp, C_902:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_909:bat[:cnd] := algebra.thetaselect(X_906:bat[:bit], true:bit, "==":str);
    C_911:bat[:oid] := algebra.projection(C_909:bat[:cnd], C_902:bat[:oid]);
    X_915:bat[:timestamp] := algebra.projection(C_911:bat[:oid], X_78:bat[:timestamp]);
    X_916:bat[:timestamp] := bat.replace(X_897:bat[:timestamp], C_911:bat[:oid], X_915:bat[:timestamp], true:bit);
    C_917:bat[:cnd] := algebra.difference(C_902:bat[:oid], C_911:bat[:oid], nil:BAT, nil:BAT, false:bit, false:bit, nil:lng);
    C_920:bat[:oid] := algebra.projection(C_917:bat[:cnd], C_902:bat[:oid]);
    X_923:bat[:timestamp] := algebra.projection(C_920:bat[:oid], X_56:bat[:timestamp]);
    X_924:bat[:timestamp] := bat.replace(X_916:bat[:timestamp], C_920:bat[:oid], X_923:bat[:timestamp], true:bit);
    X_933:bat[:str] := bat.pack(".":str);
    X_934:bat[:str] := bat.pack("yearref":str);
    X_935:bat[:str] := bat.pack("clob":str);
    X_936:bat[:int] := bat.pack(0:int);
    X_925:bat[:timestamp] := batcalc.timestamp(X_924:bat[:timestamp], 7:int);
    X_929:bat[:str] := batmtime.timestamp_to_str(X_925:bat[:timestamp], "%Y":str);
    language.pass(X_38:bat[:str]);
    language.pass(C_53:bat[:cnd]);
    language.pass(C_61:bat[:oid]);
    language.pass(C_75:bat[:oid]);
    language.pass(C_66:bat[:oid]);
    language.pass(C_92:bat[:oid]);
    language.pass(C_84:bat[:oid]);
    language.pass(C_113:bat[:oid]);
    language.pass(C_104:bat[:oid]);
    language.pass(C_130:bat[:oid]);
    language.pass(C_122:bat[:oid]);
    language.pass(C_151:bat[:oid]);
    language.pass(C_142:bat[:oid]);
    language.pass(C_168:bat[:oid]);
    language.pass(C_160:bat[:oid]);
    language.pass(C_189:bat[:oid]);
    language.pass(C_180:bat[:oid]);
    language.pass(C_206:bat[:oid]);
    language.pass(C_198:bat[:oid]);
    language.pass(C_227:bat[:oid]);
    language.pass(C_218:bat[:oid]);
    language.pass(C_244:bat[:oid]);
    language.pass(C_236:bat[:oid]);
    language.pass(C_265:bat[:oid]);
    language.pass(C_256:bat[:oid]);
    language.pass(C_282:bat[:oid]);
    language.pass(C_274:bat[:oid]);
    language.pass(C_303:bat[:oid]);
    language.pass(C_294:bat[:oid]);
    language.pass(C_320:bat[:oid]);
    language.pass(C_312:bat[:oid]);
    language.pass(C_341:bat[:oid]);
    language.pass(C_332:bat[:oid]);
    language.pass(C_358:bat[:oid]);
    language.pass(C_350:bat[:oid]);
    language.pass(C_379:bat[:oid]);
    language.pass(C_370:bat[:oid]);
    language.pass(C_396:bat[:oid]);
    language.pass(C_388:bat[:oid]);
    language.pass(C_417:bat[:oid]);
    language.pass(C_408:bat[:oid]);
    language.pass(C_434:bat[:oid]);
    language.pass(C_426:bat[:oid]);
    language.pass(C_455:bat[:oid]);
    language.pass(C_446:bat[:oid]);
    language.pass(C_472:bat[:oid]);
    language.pass(C_464:bat[:oid]);
    language.pass(C_493:bat[:oid]);
    language.pass(C_484:bat[:oid]);
    language.pass(C_510:bat[:oid]);
    language.pass(C_502:bat[:oid]);
    language.pass(C_531:bat[:oid]);
    language.pass(C_522:bat[:oid]);
    language.pass(C_548:bat[:oid]);
    language.pass(C_540:bat[:oid]);
    language.pass(C_569:bat[:oid]);
    language.pass(C_560:bat[:oid]);
    language.pass(C_586:bat[:oid]);
    language.pass(C_578:bat[:oid]);
    language.pass(C_607:bat[:oid]);
    language.pass(C_598:bat[:oid]);
    language.pass(C_624:bat[:oid]);
    language.pass(C_616:bat[:oid]);
    language.pass(C_645:bat[:oid]);
    language.pass(C_636:bat[:oid]);
    language.pass(C_662:bat[:oid]);
    language.pass(C_654:bat[:oid]);
    language.pass(C_683:bat[:oid]);
    language.pass(C_674:bat[:oid]);
    language.pass(C_700:bat[:oid]);
    language.pass(C_692:bat[:oid]);
    language.pass(C_721:bat[:oid]);
    language.pass(C_712:bat[:oid]);
    language.pass(C_738:bat[:oid]);
    language.pass(C_730:bat[:oid]);
    language.pass(C_759:bat[:oid]);
    language.pass(C_750:bat[:oid]);
    language.pass(C_776:bat[:oid]);
    language.pass(C_768:bat[:oid]);
    language.pass(C_797:bat[:oid]);
    language.pass(C_788:bat[:oid]);
    language.pass(C_814:bat[:oid]);
    language.pass(C_806:bat[:oid]);
    language.pass(C_835:bat[:oid]);
    language.pass(C_826:bat[:oid]);
    language.pass(C_852:bat[:oid]);
    language.pass(C_844:bat[:oid]);
    language.pass(C_873:bat[:oid]);
    language.pass(C_864:bat[:oid]);
    language.pass(C_890:bat[:oid]);
    language.pass(C_882:bat[:oid]);
    language.pass(X_40:bat[:timestamp]);
    language.pass(X_78:bat[:timestamp]);
    language.pass(C_911:bat[:oid]);
    language.pass(C_902:bat[:oid]);
    language.pass(X_56:bat[:timestamp]);
    language.pass(C_920:bat[:oid]);
exit X_1088:bit;
    sql.resultSet(X_933:bat[:str], X_934:bat[:str], X_935:bat[:str], X_936:bat[:int], X_936:bat[:int], X_929:bat[:str]);
end user.main;
# optimizer.mitosis()
#inline               actions= 0 time=37 usec 
#remap                actions=322 time=444 usec 
#costmodel            actions= 1 time=8 usec 
#coercion             actions= 0 time=9 usec 
#aliases              actions=142 time=54 usec 
#evaluate             actions=92 time=244 usec 
#emptybind            actions= 9 time=45 usec 
#pushselect           actions= 0 time=40 usec 
#aliases              actions=96 time=74 usec 
#mergetable           actions= 0 time=379 usec 
#deadcode             actions=241 time=60 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions=317 time=93 usec 
#commonTerms          actions=91 time=187 usec 
#projectionpath       actions= 0 time=10 usec 
#deadcode             actions=91 time=39 usec 
#reorder              actions= 1 time=76 usec 
#matpack              actions= 0 time=1 usec 
#dataflow             actions= 1 time=109 usec 
#multiplex            actions= 3 time=28 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=3 usec 
#deadcode             actions= 0 time=33 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=144 usec 
#total                actions=29 time=2531 usec 

# 14:08:13 >  
# 14:08:13 >  "Done."
# 14:08:13 >  

