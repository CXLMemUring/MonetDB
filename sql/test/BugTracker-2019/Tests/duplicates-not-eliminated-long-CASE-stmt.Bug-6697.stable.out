stdout of test 'duplicates-not-eliminated-long-CASE-stmt.Bug-6697` in directory 'sql/test/BugTracker-2019` itself:


# 14:08:13 >  
# 14:08:13 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33481" "--set" "mapi_usock=/var/tmp/mtest-8696/.s.monetdb.33481" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 14:08:13 >  

# MonetDB 5 server v11.34.0 (hg id: 29627d20d2e0)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:33481/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8696/.s.monetdb.33481
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 14:08:13 >  
# 14:08:13 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8696" "--port=33481"
# 14:08:13 >  

#CREATE TABLE IF NOT EXISTS "task" (
#"sys_class_name" VARCHAR(80),
#"priority" BIGINT,
#"sys_created_on" TIMESTAMP
#);
#explain SELECT  sys.timestamp_to_str(case when task0."sys_created_on" >= '1999-10-31 09:00:00' and task0."sys_created_on" < '2000-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2000-04-02 10:00:00' and task0."sys_created_on" < '2000-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2000-10-29 09:00:00' and task0."sys_created_on" < '2001-04-01 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2001-04-01 10:00:00' and task0."sys_created_on" < '2001-10-28 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2001-10-28 09:00:00' and task0."sys_created_on" < '2002-04-07 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2002-04-07 10:00:00' and task0."sys_created_on" < '2002-10-27 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2002-10-27 09:00:00' and task0."sys_created_on" < '2003-04-06 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2003-04-06 10:00:00' and task0."sys_created_on" < '2003-10-26 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2003-10-26 09:00:00' and task0."sys_created_on" < '2004-04-04 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2004-04-04 10:00:00' and task0."sys_created_on" < '2004-10-31 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2004-10-31 09:00:00' and task0."sys_created_on" < '2005-04-03 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2005-04-03 10:00:00' and task0."sys_created_on" < '2005-10-30 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2005-10-30 09:00:00' and task0."sys_created_on" < '2006-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2006-04-02 10:00:00' and task0."sys_created_on" < '2006-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2006-10-29 09:00:00' and task0."sys_created_on" < '2007-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2007-03-11 10:00:00' and task0."sys_created_on" < '2007-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2007-11-04 09:00:00' and task0."sys_created_on" < '2008-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2008-03-09 10:00:00' and task0."sys_created_on" < '2008-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2008-11-02 09:00:00' and task0."sys_created_on" < '2009-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2009-03-08 10:00:00' and task0."sys_created_on" < '2009-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2009-11-01 09:00:00' and task0."sys_created_on" < '2010-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2010-03-14 10:00:00' and task0."sys_created_on" < '2010-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2010-11-07 09:00:00' and task0."sys_created_on" < '2011-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2011-03-13 10:00:00' and task0."sys_created_on" < '2011-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2011-11-06 09:00:00' and task0."sys_created_on" < '2012-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2012-03-11 10:00:00' and task0."sys_created_on" < '2012-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2012-11-04 09:00:00' and task0."sys_created_on" < '2013-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2013-03-10 10:00:00' and task0."sys_created_on" < '2013-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2013-11-03 09:00:00' and task0."sys_created_on" < '2014-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2014-03-09 10:00:00' and task0."sys_created_on" < '2014-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2014-11-02 09:00:00' and task0."sys_created_on" < '2015-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2015-03-08 10:00:00' and task0."sys_created_on" < '2015-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2015-11-01 09:00:00' and task0."sys_created_on" < '2016-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2016-03-13 10:00:00' and task0."sys_created_on" < '2016-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2016-11-06 09:00:00' and task0."sys_created_on" < '2017-03-12 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2017-03-12 10:00:00' and task0."sys_created_on" < '2017-11-05 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2017-11-05 09:00:00' and task0."sys_created_on" < '2018-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2018-03-11 10:00:00' and task0."sys_created_on" < '2018-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2018-11-04 09:00:00' and task0."sys_created_on" < '2019-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2019-03-10 10:00:00' and task0."sys_created_on" < '2019-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2019-11-03 09:00:00' and task0."sys_created_on" < '2020-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2020-03-08 10:00:00' and task0."sys_created_on" < '2020-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2020-11-01 09:00:00' and task0."sys_created_on" < '2021-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2021-03-14 10:00:00' and task0."sys_created_on" < '2021-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2021-11-07 09:00:00' and task0."sys_created_on" < '2022-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2022-03-13 10:00:00' and task0."sys_created_on" < '2022-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second else task0."sys_created_on" + interval '-28800' second end,'%Y') AS yearref FROM task task0 WHERE task0."sys_class_name" = 'incident' AND task0."priority" IS NOT NULL ;
% .explain # table_name
% mal # name
% clob # type
% 1023 # length
function user.main():void;
    X_1:void := querylog.define("explain select sys.timestamp_to_str(case when task0.\"sys_created_on\" >= \\'1999-10-31 09:00:00\\' and task0.\"sys_created_on\" < \\'2000-04-02 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2000-04-02 10:00:00\\' and task0.\"sys_created_on\" < \\'2000-10-29 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2000-10-29 09:00:00\\' and task0.\"sys_created_on\" < \\'2001-04-01 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2001-04-01 10:00:00\\' and task0.\"sys_created_on\" < \\'2001-10-28 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2001-10-28 09:00:00\\' and task0.\"sys_created_on\" < \\'2002-04-07 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2002-04-07 10:00:00\\' and t
barrier X_1298:bit := language.dataflow();
    X_43:bat[:str] := bat.new(nil:str);
    X_56:bat[:timestamp] := algebra.project(X_43:bat[:str], nil:timestamp);
    X_45:bat[:timestamp] := bat.new(nil:timestamp);
    X_51:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "1999-10-31 09:00:00.000000":timestamp, "2000-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    C_58:bat[:oid] := algebra.thetaselect(X_51:bat[:bit], true:bit, "==":str);
    X_61:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng);
    X_64:bat[:timestamp] := algebra.projection(C_58:bat[:oid], X_61:bat[:timestamp]);
    X_65:bat[:timestamp] := bat.replace(X_56:bat[:timestamp], C_58:bat[:oid], X_64:bat[:timestamp], true:bit);
    X_66:bat[:bit] := batcalc.not(X_51:bat[:bit]);
    X_69:bat[:bit] := batcalc.isnil(X_51:bat[:bit]);
    X_71:bat[:bit] := batcalc.or(X_66:bat[:bit], X_69:bat[:bit]);
    C_75:bat[:oid] := algebra.thetaselect(X_71:bat[:bit], true:bit, "==":str);
    X_80:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2000-04-02 10:00:00.000000":timestamp, "2000-10-29 09:00:00.000000":timestamp, C_75:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_82:bat[:oid] := algebra.thetaselect(X_80:bat[:bit], true:bit, "==":str);
    C_83:bat[:oid] := algebra.projection(C_82:bat[:oid], C_75:bat[:oid]);
    X_86:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng);
    X_87:bat[:timestamp] := algebra.projection(C_83:bat[:oid], X_86:bat[:timestamp]);
    X_88:bat[:timestamp] := bat.replace(X_65:bat[:timestamp], C_83:bat[:oid], X_87:bat[:timestamp], true:bit);
    X_89:bat[:bit] := batcalc.not(X_80:bat[:bit]);
    X_90:bat[:bit] := batcalc.isnil(X_80:bat[:bit]);
    X_91:bat[:bit] := batcalc.or(X_89:bat[:bit], X_90:bat[:bit]);
    C_93:bat[:oid] := algebra.thetaselect(X_91:bat[:bit], true:bit, "==":str);
    C_94:bat[:oid] := algebra.projection(C_93:bat[:oid], C_75:bat[:oid]);
    X_99:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2000-10-29 09:00:00.000000":timestamp, "2001-04-01 10:00:00.000000":timestamp, C_94:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_103:bat[:oid] := algebra.thetaselect(X_99:bat[:bit], true:bit, "==":str);
    C_104:bat[:oid] := algebra.projection(C_103:bat[:oid], C_94:bat[:oid]);
    X_110:bat[:timestamp] := algebra.projection(C_104:bat[:oid], X_61:bat[:timestamp]);
    X_111:bat[:timestamp] := bat.replace(X_88:bat[:timestamp], C_104:bat[:oid], X_110:bat[:timestamp], true:bit);
    X_113:bat[:bit] := batcalc.not(X_99:bat[:bit]);
    X_116:bat[:bit] := batcalc.isnil(X_99:bat[:bit]);
    X_118:bat[:bit] := batcalc.or(X_113:bat[:bit], X_116:bat[:bit]);
    C_121:bat[:oid] := algebra.thetaselect(X_118:bat[:bit], true:bit, "==":str);
    C_123:bat[:oid] := algebra.projection(C_121:bat[:oid], C_94:bat[:oid]);
    X_127:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2001-04-01 10:00:00.000000":timestamp, "2001-10-28 09:00:00.000000":timestamp, C_123:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_129:bat[:oid] := algebra.thetaselect(X_127:bat[:bit], true:bit, "==":str);
    C_130:bat[:oid] := algebra.projection(C_129:bat[:oid], C_123:bat[:oid]);
    X_134:bat[:timestamp] := algebra.projection(C_130:bat[:oid], X_86:bat[:timestamp]);
    X_135:bat[:timestamp] := bat.replace(X_111:bat[:timestamp], C_130:bat[:oid], X_134:bat[:timestamp], true:bit);
    X_136:bat[:bit] := batcalc.not(X_127:bat[:bit]);
    X_137:bat[:bit] := batcalc.isnil(X_127:bat[:bit]);
    X_138:bat[:bit] := batcalc.or(X_136:bat[:bit], X_137:bat[:bit]);
    C_140:bat[:oid] := algebra.thetaselect(X_138:bat[:bit], true:bit, "==":str);
    C_141:bat[:oid] := algebra.projection(C_140:bat[:oid], C_123:bat[:oid]);
    X_146:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2001-10-28 09:00:00.000000":timestamp, "2002-04-07 10:00:00.000000":timestamp, C_141:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_150:bat[:oid] := algebra.thetaselect(X_146:bat[:bit], true:bit, "==":str);
    C_151:bat[:oid] := algebra.projection(C_150:bat[:oid], C_141:bat[:oid]);
    X_157:bat[:timestamp] := algebra.projection(C_151:bat[:oid], X_61:bat[:timestamp]);
    X_158:bat[:timestamp] := bat.replace(X_135:bat[:timestamp], C_151:bat[:oid], X_157:bat[:timestamp], true:bit);
    X_159:bat[:bit] := batcalc.not(X_146:bat[:bit]);
    X_162:bat[:bit] := batcalc.isnil(X_146:bat[:bit]);
    X_164:bat[:bit] := batcalc.or(X_159:bat[:bit], X_162:bat[:bit]);
    C_167:bat[:oid] := algebra.thetaselect(X_164:bat[:bit], true:bit, "==":str);
    C_169:bat[:oid] := algebra.projection(C_167:bat[:oid], C_141:bat[:oid]);
    X_173:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2002-04-07 10:00:00.000000":timestamp, "2002-10-27 09:00:00.000000":timestamp, C_169:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_175:bat[:oid] := algebra.thetaselect(X_173:bat[:bit], true:bit, "==":str);
    C_176:bat[:oid] := algebra.projection(C_175:bat[:oid], C_169:bat[:oid]);
    X_180:bat[:timestamp] := algebra.projection(C_176:bat[:oid], X_86:bat[:timestamp]);
    X_181:bat[:timestamp] := bat.replace(X_158:bat[:timestamp], C_176:bat[:oid], X_180:bat[:timestamp], true:bit);
    X_183:bat[:bit] := batcalc.not(X_173:bat[:bit]);
    X_184:bat[:bit] := batcalc.isnil(X_173:bat[:bit]);
    X_185:bat[:bit] := batcalc.or(X_183:bat[:bit], X_184:bat[:bit]);
    C_187:bat[:oid] := algebra.thetaselect(X_185:bat[:bit], true:bit, "==":str);
    C_188:bat[:oid] := algebra.projection(C_187:bat[:oid], C_169:bat[:oid]);
    X_193:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2002-10-27 09:00:00.000000":timestamp, "2003-04-06 10:00:00.000000":timestamp, C_188:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_197:bat[:oid] := algebra.thetaselect(X_193:bat[:bit], true:bit, "==":str);
    C_198:bat[:oid] := algebra.projection(C_197:bat[:oid], C_188:bat[:oid]);
    X_204:bat[:timestamp] := algebra.projection(C_198:bat[:oid], X_61:bat[:timestamp]);
    X_205:bat[:timestamp] := bat.replace(X_181:bat[:timestamp], C_198:bat[:oid], X_204:bat[:timestamp], true:bit);
    X_206:bat[:bit] := batcalc.not(X_193:bat[:bit]);
    X_209:bat[:bit] := batcalc.isnil(X_193:bat[:bit]);
    X_211:bat[:bit] := batcalc.or(X_206:bat[:bit], X_209:bat[:bit]);
    C_214:bat[:oid] := algebra.thetaselect(X_211:bat[:bit], true:bit, "==":str);
    C_216:bat[:oid] := algebra.projection(C_214:bat[:oid], C_188:bat[:oid]);
    X_220:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2003-04-06 10:00:00.000000":timestamp, "2003-10-26 09:00:00.000000":timestamp, C_216:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_223:bat[:oid] := algebra.thetaselect(X_220:bat[:bit], true:bit, "==":str);
    C_224:bat[:oid] := algebra.projection(C_223:bat[:oid], C_216:bat[:oid]);
    X_228:bat[:timestamp] := algebra.projection(C_224:bat[:oid], X_86:bat[:timestamp]);
    X_229:bat[:timestamp] := bat.replace(X_205:bat[:timestamp], C_224:bat[:oid], X_228:bat[:timestamp], true:bit);
    X_230:bat[:bit] := batcalc.not(X_220:bat[:bit]);
    X_231:bat[:bit] := batcalc.isnil(X_220:bat[:bit]);
    X_232:bat[:bit] := batcalc.or(X_230:bat[:bit], X_231:bat[:bit]);
    C_234:bat[:oid] := algebra.thetaselect(X_232:bat[:bit], true:bit, "==":str);
    C_235:bat[:oid] := algebra.projection(C_234:bat[:oid], C_216:bat[:oid]);
    X_240:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2003-10-26 09:00:00.000000":timestamp, "2004-04-04 10:00:00.000000":timestamp, C_235:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_244:bat[:oid] := algebra.thetaselect(X_240:bat[:bit], true:bit, "==":str);
    C_245:bat[:oid] := algebra.projection(C_244:bat[:oid], C_235:bat[:oid]);
    X_251:bat[:timestamp] := algebra.projection(C_245:bat[:oid], X_61:bat[:timestamp]);
    X_252:bat[:timestamp] := bat.replace(X_229:bat[:timestamp], C_245:bat[:oid], X_251:bat[:timestamp], true:bit);
    X_253:bat[:bit] := batcalc.not(X_240:bat[:bit]);
    X_256:bat[:bit] := batcalc.isnil(X_240:bat[:bit]);
    X_258:bat[:bit] := batcalc.or(X_253:bat[:bit], X_256:bat[:bit]);
    C_262:bat[:oid] := algebra.thetaselect(X_258:bat[:bit], true:bit, "==":str);
    C_264:bat[:oid] := algebra.projection(C_262:bat[:oid], C_235:bat[:oid]);
    X_268:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2004-04-04 10:00:00.000000":timestamp, "2004-10-31 09:00:00.000000":timestamp, C_264:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_270:bat[:oid] := algebra.thetaselect(X_268:bat[:bit], true:bit, "==":str);
    C_271:bat[:oid] := algebra.projection(C_270:bat[:oid], C_264:bat[:oid]);
    X_275:bat[:timestamp] := algebra.projection(C_271:bat[:oid], X_86:bat[:timestamp]);
    X_276:bat[:timestamp] := bat.replace(X_252:bat[:timestamp], C_271:bat[:oid], X_275:bat[:timestamp], true:bit);
    X_277:bat[:bit] := batcalc.not(X_268:bat[:bit]);
    X_278:bat[:bit] := batcalc.isnil(X_268:bat[:bit]);
    X_279:bat[:bit] := batcalc.or(X_277:bat[:bit], X_278:bat[:bit]);
    C_281:bat[:oid] := algebra.thetaselect(X_279:bat[:bit], true:bit, "==":str);
    C_282:bat[:oid] := algebra.projection(C_281:bat[:oid], C_264:bat[:oid]);
    X_287:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2004-10-31 09:00:00.000000":timestamp, "2005-04-03 10:00:00.000000":timestamp, C_282:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_291:bat[:oid] := algebra.thetaselect(X_287:bat[:bit], true:bit, "==":str);
    C_292:bat[:oid] := algebra.projection(C_291:bat[:oid], C_282:bat[:oid]);
    X_298:bat[:timestamp] := algebra.projection(C_292:bat[:oid], X_61:bat[:timestamp]);
    X_299:bat[:timestamp] := bat.replace(X_276:bat[:timestamp], C_292:bat[:oid], X_298:bat[:timestamp], true:bit);
    X_301:bat[:bit] := batcalc.not(X_287:bat[:bit]);
    X_304:bat[:bit] := batcalc.isnil(X_287:bat[:bit]);
    X_306:bat[:bit] := batcalc.or(X_301:bat[:bit], X_304:bat[:bit]);
    C_309:bat[:oid] := algebra.thetaselect(X_306:bat[:bit], true:bit, "==":str);
    C_311:bat[:oid] := algebra.projection(C_309:bat[:oid], C_282:bat[:oid]);
    X_315:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2005-04-03 10:00:00.000000":timestamp, "2005-10-30 09:00:00.000000":timestamp, C_311:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_317:bat[:oid] := algebra.thetaselect(X_315:bat[:bit], true:bit, "==":str);
    C_318:bat[:oid] := algebra.projection(C_317:bat[:oid], C_311:bat[:oid]);
    X_322:bat[:timestamp] := algebra.projection(C_318:bat[:oid], X_86:bat[:timestamp]);
    X_323:bat[:timestamp] := bat.replace(X_299:bat[:timestamp], C_318:bat[:oid], X_322:bat[:timestamp], true:bit);
    X_324:bat[:bit] := batcalc.not(X_315:bat[:bit]);
    X_325:bat[:bit] := batcalc.isnil(X_315:bat[:bit]);
    X_326:bat[:bit] := batcalc.or(X_324:bat[:bit], X_325:bat[:bit]);
    C_328:bat[:oid] := algebra.thetaselect(X_326:bat[:bit], true:bit, "==":str);
    C_329:bat[:oid] := algebra.projection(C_328:bat[:oid], C_311:bat[:oid]);
    X_334:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2005-10-30 09:00:00.000000":timestamp, "2006-04-02 10:00:00.000000":timestamp, C_329:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_338:bat[:oid] := algebra.thetaselect(X_334:bat[:bit], true:bit, "==":str);
    C_339:bat[:oid] := algebra.projection(C_338:bat[:oid], C_329:bat[:oid]);
    X_345:bat[:timestamp] := algebra.projection(C_339:bat[:oid], X_61:bat[:timestamp]);
    X_346:bat[:timestamp] := bat.replace(X_323:bat[:timestamp], C_339:bat[:oid], X_345:bat[:timestamp], true:bit);
    X_347:bat[:bit] := batcalc.not(X_334:bat[:bit]);
    X_350:bat[:bit] := batcalc.isnil(X_334:bat[:bit]);
    X_352:bat[:bit] := batcalc.or(X_347:bat[:bit], X_350:bat[:bit]);
    C_355:bat[:oid] := algebra.thetaselect(X_352:bat[:bit], true:bit, "==":str);
    C_357:bat[:oid] := algebra.projection(C_355:bat[:oid], C_329:bat[:oid]);
    X_361:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2006-04-02 10:00:00.000000":timestamp, "2006-10-29 09:00:00.000000":timestamp, C_357:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_363:bat[:oid] := algebra.thetaselect(X_361:bat[:bit], true:bit, "==":str);
    C_364:bat[:oid] := algebra.projection(C_363:bat[:oid], C_357:bat[:oid]);
    X_368:bat[:timestamp] := algebra.projection(C_364:bat[:oid], X_86:bat[:timestamp]);
    X_369:bat[:timestamp] := bat.replace(X_346:bat[:timestamp], C_364:bat[:oid], X_368:bat[:timestamp], true:bit);
    X_371:bat[:bit] := batcalc.not(X_361:bat[:bit]);
    X_372:bat[:bit] := batcalc.isnil(X_361:bat[:bit]);
    X_373:bat[:bit] := batcalc.or(X_371:bat[:bit], X_372:bat[:bit]);
    C_375:bat[:oid] := algebra.thetaselect(X_373:bat[:bit], true:bit, "==":str);
    C_376:bat[:oid] := algebra.projection(C_375:bat[:oid], C_357:bat[:oid]);
    X_381:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2006-10-29 09:00:00.000000":timestamp, "2007-03-11 10:00:00.000000":timestamp, C_376:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_385:bat[:oid] := algebra.thetaselect(X_381:bat[:bit], true:bit, "==":str);
    C_386:bat[:oid] := algebra.projection(C_385:bat[:oid], C_376:bat[:oid]);
    X_392:bat[:timestamp] := algebra.projection(C_386:bat[:oid], X_61:bat[:timestamp]);
    X_393:bat[:timestamp] := bat.replace(X_369:bat[:timestamp], C_386:bat[:oid], X_392:bat[:timestamp], true:bit);
    X_394:bat[:bit] := batcalc.not(X_381:bat[:bit]);
    X_397:bat[:bit] := batcalc.isnil(X_381:bat[:bit]);
    X_399:bat[:bit] := batcalc.or(X_394:bat[:bit], X_397:bat[:bit]);
    C_402:bat[:oid] := algebra.thetaselect(X_399:bat[:bit], true:bit, "==":str);
    C_404:bat[:oid] := algebra.projection(C_402:bat[:oid], C_376:bat[:oid]);
    X_408:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2007-03-11 10:00:00.000000":timestamp, "2007-11-04 09:00:00.000000":timestamp, C_404:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_411:bat[:oid] := algebra.thetaselect(X_408:bat[:bit], true:bit, "==":str);
    C_412:bat[:oid] := algebra.projection(C_411:bat[:oid], C_404:bat[:oid]);
    X_416:bat[:timestamp] := algebra.projection(C_412:bat[:oid], X_86:bat[:timestamp]);
    X_417:bat[:timestamp] := bat.replace(X_393:bat[:timestamp], C_412:bat[:oid], X_416:bat[:timestamp], true:bit);
    X_418:bat[:bit] := batcalc.not(X_408:bat[:bit]);
    X_419:bat[:bit] := batcalc.isnil(X_408:bat[:bit]);
    X_420:bat[:bit] := batcalc.or(X_418:bat[:bit], X_419:bat[:bit]);
    C_422:bat[:oid] := algebra.thetaselect(X_420:bat[:bit], true:bit, "==":str);
    C_423:bat[:oid] := algebra.projection(C_422:bat[:oid], C_404:bat[:oid]);
    X_428:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2007-11-04 09:00:00.000000":timestamp, "2008-03-09 10:00:00.000000":timestamp, C_423:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_432:bat[:oid] := algebra.thetaselect(X_428:bat[:bit], true:bit, "==":str);
    C_433:bat[:oid] := algebra.projection(C_432:bat[:oid], C_423:bat[:oid]);
    X_439:bat[:timestamp] := algebra.projection(C_433:bat[:oid], X_61:bat[:timestamp]);
    X_440:bat[:timestamp] := bat.replace(X_417:bat[:timestamp], C_433:bat[:oid], X_439:bat[:timestamp], true:bit);
    X_441:bat[:bit] := batcalc.not(X_428:bat[:bit]);
    X_444:bat[:bit] := batcalc.isnil(X_428:bat[:bit]);
    X_446:bat[:bit] := batcalc.or(X_441:bat[:bit], X_444:bat[:bit]);
    C_450:bat[:oid] := algebra.thetaselect(X_446:bat[:bit], true:bit, "==":str);
    C_452:bat[:oid] := algebra.projection(C_450:bat[:oid], C_423:bat[:oid]);
    X_456:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2008-03-09 10:00:00.000000":timestamp, "2008-11-02 09:00:00.000000":timestamp, C_452:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_458:bat[:oid] := algebra.thetaselect(X_456:bat[:bit], true:bit, "==":str);
    C_459:bat[:oid] := algebra.projection(C_458:bat[:oid], C_452:bat[:oid]);
    X_463:bat[:timestamp] := algebra.projection(C_459:bat[:oid], X_86:bat[:timestamp]);
    X_464:bat[:timestamp] := bat.replace(X_440:bat[:timestamp], C_459:bat[:oid], X_463:bat[:timestamp], true:bit);
    X_465:bat[:bit] := batcalc.not(X_456:bat[:bit]);
    X_466:bat[:bit] := batcalc.isnil(X_456:bat[:bit]);
    X_467:bat[:bit] := batcalc.or(X_465:bat[:bit], X_466:bat[:bit]);
    C_469:bat[:oid] := algebra.thetaselect(X_467:bat[:bit], true:bit, "==":str);
    C_470:bat[:oid] := algebra.projection(C_469:bat[:oid], C_452:bat[:oid]);
    X_475:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2008-11-02 09:00:00.000000":timestamp, "2009-03-08 10:00:00.000000":timestamp, C_470:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_479:bat[:oid] := algebra.thetaselect(X_475:bat[:bit], true:bit, "==":str);
    C_480:bat[:oid] := algebra.projection(C_479:bat[:oid], C_470:bat[:oid]);
    X_486:bat[:timestamp] := algebra.projection(C_480:bat[:oid], X_61:bat[:timestamp]);
    X_487:bat[:timestamp] := bat.replace(X_464:bat[:timestamp], C_480:bat[:oid], X_486:bat[:timestamp], true:bit);
    X_489:bat[:bit] := batcalc.not(X_475:bat[:bit]);
    X_492:bat[:bit] := batcalc.isnil(X_475:bat[:bit]);
    X_494:bat[:bit] := batcalc.or(X_489:bat[:bit], X_492:bat[:bit]);
    C_497:bat[:oid] := algebra.thetaselect(X_494:bat[:bit], true:bit, "==":str);
    C_499:bat[:oid] := algebra.projection(C_497:bat[:oid], C_470:bat[:oid]);
    X_503:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2009-03-08 10:00:00.000000":timestamp, "2009-11-01 09:00:00.000000":timestamp, C_499:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_505:bat[:oid] := algebra.thetaselect(X_503:bat[:bit], true:bit, "==":str);
    C_506:bat[:oid] := algebra.projection(C_505:bat[:oid], C_499:bat[:oid]);
    X_510:bat[:timestamp] := algebra.projection(C_506:bat[:oid], X_86:bat[:timestamp]);
    X_511:bat[:timestamp] := bat.replace(X_487:bat[:timestamp], C_506:bat[:oid], X_510:bat[:timestamp], true:bit);
    X_512:bat[:bit] := batcalc.not(X_503:bat[:bit]);
    X_513:bat[:bit] := batcalc.isnil(X_503:bat[:bit]);
    X_514:bat[:bit] := batcalc.or(X_512:bat[:bit], X_513:bat[:bit]);
    C_516:bat[:oid] := algebra.thetaselect(X_514:bat[:bit], true:bit, "==":str);
    C_517:bat[:oid] := algebra.projection(C_516:bat[:oid], C_499:bat[:oid]);
    X_522:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2009-11-01 09:00:00.000000":timestamp, "2010-03-14 10:00:00.000000":timestamp, C_517:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_526:bat[:oid] := algebra.thetaselect(X_522:bat[:bit], true:bit, "==":str);
    C_527:bat[:oid] := algebra.projection(C_526:bat[:oid], C_517:bat[:oid]);
    X_533:bat[:timestamp] := algebra.projection(C_527:bat[:oid], X_61:bat[:timestamp]);
    X_534:bat[:timestamp] := bat.replace(X_511:bat[:timestamp], C_527:bat[:oid], X_533:bat[:timestamp], true:bit);
    X_535:bat[:bit] := batcalc.not(X_522:bat[:bit]);
    X_538:bat[:bit] := batcalc.isnil(X_522:bat[:bit]);
    X_540:bat[:bit] := batcalc.or(X_535:bat[:bit], X_538:bat[:bit]);
    C_543:bat[:oid] := algebra.thetaselect(X_540:bat[:bit], true:bit, "==":str);
    C_545:bat[:oid] := algebra.projection(C_543:bat[:oid], C_517:bat[:oid]);
    X_549:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2010-03-14 10:00:00.000000":timestamp, "2010-11-07 09:00:00.000000":timestamp, C_545:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_551:bat[:oid] := algebra.thetaselect(X_549:bat[:bit], true:bit, "==":str);
    C_552:bat[:oid] := algebra.projection(C_551:bat[:oid], C_545:bat[:oid]);
    X_556:bat[:timestamp] := algebra.projection(C_552:bat[:oid], X_86:bat[:timestamp]);
    X_557:bat[:timestamp] := bat.replace(X_534:bat[:timestamp], C_552:bat[:oid], X_556:bat[:timestamp], true:bit);
    X_559:bat[:bit] := batcalc.not(X_549:bat[:bit]);
    X_560:bat[:bit] := batcalc.isnil(X_549:bat[:bit]);
    X_561:bat[:bit] := batcalc.or(X_559:bat[:bit], X_560:bat[:bit]);
    C_563:bat[:oid] := algebra.thetaselect(X_561:bat[:bit], true:bit, "==":str);
    X_568:bat[:timestamp] := algebra.projection(C_563:bat[:oid], X_80:bat[:timestamp]);
    X_569:bat[:timestamp] := bat.replace(X_546:bat[:timestamp], C_563:bat[:oid], X_568:bat[:timestamp], true:bit);
    X_570:bat[:bit] := batcalc.not(X_559:bat[:bit]);
    X_571:bat[:bit] := batcalc.isnil(X_570:bat[:bit]);
    X_572:bat[:bit] := batcalc.or(X_570:bat[:bit], X_571:bat[:bit]);
    X_573:bat[:bit] := batcalc.and(X_554:bat[:bit], X_572:bat[:bit]);
    X_578:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2011-11-06 09:00:00.000000":timestamp, "2012-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_581:bat[:bit] := batcalc.and(X_573:bat[:bit], X_578:bat[:bit]);
    C_583:bat[:oid] := algebra.thetaselect(X_581:bat[:bit], true:bit, "==":str);
    X_589:bat[:timestamp] := algebra.projection(C_583:bat[:oid], X_56:bat[:timestamp]);
    X_590:bat[:timestamp] := bat.replace(X_569:bat[:timestamp], C_583:bat[:oid], X_589:bat[:timestamp], true:bit);
    X_591:bat[:bit] := batcalc.not(X_578:bat[:bit]);
    X_594:bat[:bit] := batcalc.isnil(X_591:bat[:bit]);
    X_596:bat[:bit] := batcalc.or(X_591:bat[:bit], X_594:bat[:bit]);
    X_598:bat[:bit] := batcalc.and(X_573:bat[:bit], X_596:bat[:bit]);
    X_603:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2012-03-11 10:00:00.000000":timestamp, "2012-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_605:bat[:bit] := batcalc.and(X_598:bat[:bit], X_603:bat[:bit]);
    C_607:bat[:oid] := algebra.thetaselect(X_605:bat[:bit], true:bit, "==":str);
    X_612:bat[:timestamp] := algebra.projection(C_607:bat[:oid], X_80:bat[:timestamp]);
    X_613:bat[:timestamp] := bat.replace(X_590:bat[:timestamp], C_607:bat[:oid], X_612:bat[:timestamp], true:bit);
    X_614:bat[:bit] := batcalc.not(X_603:bat[:bit]);
    X_615:bat[:bit] := batcalc.isnil(X_614:bat[:bit]);
    X_616:bat[:bit] := batcalc.or(X_614:bat[:bit], X_615:bat[:bit]);
    X_617:bat[:bit] := batcalc.and(X_598:bat[:bit], X_616:bat[:bit]);
    X_622:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2012-11-04 09:00:00.000000":timestamp, "2013-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_625:bat[:bit] := batcalc.and(X_617:bat[:bit], X_622:bat[:bit]);
    C_628:bat[:oid] := algebra.thetaselect(X_625:bat[:bit], true:bit, "==":str);
    X_634:bat[:timestamp] := algebra.projection(C_628:bat[:oid], X_56:bat[:timestamp]);
    X_635:bat[:timestamp] := bat.replace(X_613:bat[:timestamp], C_628:bat[:oid], X_634:bat[:timestamp], true:bit);
    X_636:bat[:bit] := batcalc.not(X_622:bat[:bit]);
    X_638:bat[:bit] := batcalc.isnil(X_636:bat[:bit]);
    X_640:bat[:bit] := batcalc.or(X_636:bat[:bit], X_638:bat[:bit]);
    X_642:bat[:bit] := batcalc.and(X_617:bat[:bit], X_640:bat[:bit]);
    X_647:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2013-03-10 10:00:00.000000":timestamp, "2013-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_649:bat[:bit] := batcalc.and(X_642:bat[:bit], X_647:bat[:bit]);
    C_651:bat[:oid] := algebra.thetaselect(X_649:bat[:bit], true:bit, "==":str);
    X_656:bat[:timestamp] := algebra.projection(C_651:bat[:oid], X_80:bat[:timestamp]);
    X_657:bat[:timestamp] := bat.replace(X_635:bat[:timestamp], C_651:bat[:oid], X_656:bat[:timestamp], true:bit);
    X_658:bat[:bit] := batcalc.not(X_647:bat[:bit]);
    X_660:bat[:bit] := batcalc.isnil(X_658:bat[:bit]);
    X_661:bat[:bit] := batcalc.or(X_658:bat[:bit], X_660:bat[:bit]);
    X_662:bat[:bit] := batcalc.and(X_642:bat[:bit], X_661:bat[:bit]);
    X_667:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2013-11-03 09:00:00.000000":timestamp, "2014-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_670:bat[:bit] := batcalc.and(X_662:bat[:bit], X_667:bat[:bit]);
    C_672:bat[:oid] := algebra.thetaselect(X_670:bat[:bit], true:bit, "==":str);
    X_678:bat[:timestamp] := algebra.projection(C_672:bat[:oid], X_56:bat[:timestamp]);
    X_679:bat[:timestamp] := bat.replace(X_657:bat[:timestamp], C_672:bat[:oid], X_678:bat[:timestamp], true:bit);
    X_680:bat[:bit] := batcalc.not(X_667:bat[:bit]);
    X_682:bat[:bit] := batcalc.isnil(X_680:bat[:bit]);
    X_684:bat[:bit] := batcalc.or(X_680:bat[:bit], X_682:bat[:bit]);
    X_686:bat[:bit] := batcalc.and(X_662:bat[:bit], X_684:bat[:bit]);
    X_691:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2014-03-09 10:00:00.000000":timestamp, "2014-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_693:bat[:bit] := batcalc.and(X_686:bat[:bit], X_691:bat[:bit]);
    C_696:bat[:oid] := algebra.thetaselect(X_693:bat[:bit], true:bit, "==":str);
    X_701:bat[:timestamp] := algebra.projection(C_696:bat[:oid], X_80:bat[:timestamp]);
    X_702:bat[:timestamp] := bat.replace(X_679:bat[:timestamp], C_696:bat[:oid], X_701:bat[:timestamp], true:bit);
    X_703:bat[:bit] := batcalc.not(X_691:bat[:bit]);
    X_704:bat[:bit] := batcalc.isnil(X_703:bat[:bit]);
    X_705:bat[:bit] := batcalc.or(X_703:bat[:bit], X_704:bat[:bit]);
    X_706:bat[:bit] := batcalc.and(X_686:bat[:bit], X_705:bat[:bit]);
    X_711:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2014-11-02 09:00:00.000000":timestamp, "2015-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_714:bat[:bit] := batcalc.and(X_706:bat[:bit], X_711:bat[:bit]);
    C_716:bat[:oid] := algebra.thetaselect(X_714:bat[:bit], true:bit, "==":str);
    X_722:bat[:timestamp] := algebra.projection(C_716:bat[:oid], X_56:bat[:timestamp]);
    X_723:bat[:timestamp] := bat.replace(X_702:bat[:timestamp], C_716:bat[:oid], X_722:bat[:timestamp], true:bit);
    X_724:bat[:bit] := batcalc.not(X_711:bat[:bit]);
    X_726:bat[:bit] := batcalc.isnil(X_724:bat[:bit]);
    X_729:bat[:bit] := batcalc.or(X_724:bat[:bit], X_726:bat[:bit]);
    X_731:bat[:bit] := batcalc.and(X_706:bat[:bit], X_729:bat[:bit]);
    X_736:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2015-03-08 10:00:00.000000":timestamp, "2015-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_738:bat[:bit] := batcalc.and(X_731:bat[:bit], X_736:bat[:bit]);
    C_740:bat[:oid] := algebra.thetaselect(X_738:bat[:bit], true:bit, "==":str);
    X_745:bat[:timestamp] := algebra.projection(C_740:bat[:oid], X_80:bat[:timestamp]);
    X_746:bat[:timestamp] := bat.replace(X_723:bat[:timestamp], C_740:bat[:oid], X_745:bat[:timestamp], true:bit);
    X_747:bat[:bit] := batcalc.not(X_736:bat[:bit]);
    X_748:bat[:bit] := batcalc.isnil(X_747:bat[:bit]);
    X_749:bat[:bit] := batcalc.or(X_747:bat[:bit], X_748:bat[:bit]);
    X_750:bat[:bit] := batcalc.and(X_731:bat[:bit], X_749:bat[:bit]);
    X_755:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2015-11-01 09:00:00.000000":timestamp, "2016-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_758:bat[:bit] := batcalc.and(X_750:bat[:bit], X_755:bat[:bit]);
    C_760:bat[:oid] := algebra.thetaselect(X_758:bat[:bit], true:bit, "==":str);
    X_766:bat[:timestamp] := algebra.projection(C_760:bat[:oid], X_56:bat[:timestamp]);
    X_767:bat[:timestamp] := bat.replace(X_746:bat[:timestamp], C_760:bat[:oid], X_766:bat[:timestamp], true:bit);
    X_768:bat[:bit] := batcalc.not(X_755:bat[:bit]);
    X_771:bat[:bit] := batcalc.isnil(X_768:bat[:bit]);
    X_773:bat[:bit] := batcalc.or(X_768:bat[:bit], X_771:bat[:bit]);
    X_775:bat[:bit] := batcalc.and(X_750:bat[:bit], X_773:bat[:bit]);
    X_780:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2016-03-13 10:00:00.000000":timestamp, "2016-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_782:bat[:bit] := batcalc.and(X_775:bat[:bit], X_780:bat[:bit]);
    C_784:bat[:oid] := algebra.thetaselect(X_782:bat[:bit], true:bit, "==":str);
    X_789:bat[:timestamp] := algebra.projection(C_784:bat[:oid], X_80:bat[:timestamp]);
    X_790:bat[:timestamp] := bat.replace(X_767:bat[:timestamp], C_784:bat[:oid], X_789:bat[:timestamp], true:bit);
    X_791:bat[:bit] := batcalc.not(X_780:bat[:bit]);
    X_792:bat[:bit] := batcalc.isnil(X_791:bat[:bit]);
    X_793:bat[:bit] := batcalc.or(X_791:bat[:bit], X_792:bat[:bit]);
    X_794:bat[:bit] := batcalc.and(X_775:bat[:bit], X_793:bat[:bit]);
    X_799:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2016-11-06 09:00:00.000000":timestamp, "2017-03-12 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_802:bat[:bit] := batcalc.and(X_794:bat[:bit], X_799:bat[:bit]);
    C_805:bat[:oid] := algebra.thetaselect(X_802:bat[:bit], true:bit, "==":str);
    X_811:bat[:timestamp] := algebra.projection(C_805:bat[:oid], X_56:bat[:timestamp]);
    X_812:bat[:timestamp] := bat.replace(X_790:bat[:timestamp], C_805:bat[:oid], X_811:bat[:timestamp], true:bit);
    X_813:bat[:bit] := batcalc.not(X_799:bat[:bit]);
    X_815:bat[:bit] := batcalc.isnil(X_813:bat[:bit]);
    X_817:bat[:bit] := batcalc.or(X_813:bat[:bit], X_815:bat[:bit]);
    X_819:bat[:bit] := batcalc.and(X_794:bat[:bit], X_817:bat[:bit]);
    X_824:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2017-03-12 10:00:00.000000":timestamp, "2017-11-05 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_826:bat[:bit] := batcalc.and(X_819:bat[:bit], X_824:bat[:bit]);
    C_828:bat[:oid] := algebra.thetaselect(X_826:bat[:bit], true:bit, "==":str);
    X_833:bat[:timestamp] := algebra.projection(C_828:bat[:oid], X_80:bat[:timestamp]);
    X_834:bat[:timestamp] := bat.replace(X_812:bat[:timestamp], C_828:bat[:oid], X_833:bat[:timestamp], true:bit);
    X_835:bat[:bit] := batcalc.not(X_824:bat[:bit]);
    X_837:bat[:bit] := batcalc.isnil(X_835:bat[:bit]);
    X_838:bat[:bit] := batcalc.or(X_835:bat[:bit], X_837:bat[:bit]);
    X_839:bat[:bit] := batcalc.and(X_819:bat[:bit], X_838:bat[:bit]);
    X_844:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2017-11-05 09:00:00.000000":timestamp, "2018-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_847:bat[:bit] := batcalc.and(X_839:bat[:bit], X_844:bat[:bit]);
    C_849:bat[:oid] := algebra.thetaselect(X_847:bat[:bit], true:bit, "==":str);
    X_855:bat[:timestamp] := algebra.projection(C_849:bat[:oid], X_56:bat[:timestamp]);
    X_856:bat[:timestamp] := bat.replace(X_834:bat[:timestamp], C_849:bat[:oid], X_855:bat[:timestamp], true:bit);
    X_857:bat[:bit] := batcalc.not(X_844:bat[:bit]);
    X_859:bat[:bit] := batcalc.isnil(X_857:bat[:bit]);
    X_861:bat[:bit] := batcalc.or(X_857:bat[:bit], X_859:bat[:bit]);
    X_863:bat[:bit] := batcalc.and(X_839:bat[:bit], X_861:bat[:bit]);
    X_868:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2018-03-11 10:00:00.000000":timestamp, "2018-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_870:bat[:bit] := batcalc.and(X_863:bat[:bit], X_868:bat[:bit]);
    C_873:bat[:oid] := algebra.thetaselect(X_870:bat[:bit], true:bit, "==":str);
    C_875:bat[:oid] := algebra.projection(C_873:bat[:oid], C_846:bat[:oid]);
    X_879:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2017-03-12 10:00:00.000000":timestamp, "2017-11-05 09:00:00.000000":timestamp, C_875:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_881:bat[:oid] := algebra.thetaselect(X_879:bat[:bit], true:bit, "==":str);
    C_882:bat[:oid] := algebra.projection(C_881:bat[:oid], C_875:bat[:oid]);
    X_886:bat[:timestamp] := algebra.projection(C_882:bat[:oid], X_86:bat[:timestamp]);
    X_887:bat[:timestamp] := bat.replace(X_863:bat[:timestamp], C_882:bat[:oid], X_886:bat[:timestamp], true:bit);
    X_888:bat[:bit] := batcalc.not(X_879:bat[:bit]);
    X_889:bat[:bit] := batcalc.isnil(X_879:bat[:bit]);
    X_890:bat[:bit] := batcalc.or(X_888:bat[:bit], X_889:bat[:bit]);
    C_892:bat[:oid] := algebra.thetaselect(X_890:bat[:bit], true:bit, "==":str);
    C_893:bat[:oid] := algebra.projection(C_892:bat[:oid], C_875:bat[:oid]);
    X_898:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2017-11-05 09:00:00.000000":timestamp, "2018-03-11 10:00:00.000000":timestamp, C_893:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_902:bat[:oid] := algebra.thetaselect(X_898:bat[:bit], true:bit, "==":str);
    C_903:bat[:oid] := algebra.projection(C_902:bat[:oid], C_893:bat[:oid]);
    X_909:bat[:timestamp] := algebra.projection(C_903:bat[:oid], X_61:bat[:timestamp]);
    X_910:bat[:timestamp] := bat.replace(X_887:bat[:timestamp], C_903:bat[:oid], X_909:bat[:timestamp], true:bit);
    X_911:bat[:bit] := batcalc.not(X_898:bat[:bit]);
    X_914:bat[:bit] := batcalc.isnil(X_898:bat[:bit]);
    X_916:bat[:bit] := batcalc.or(X_911:bat[:bit], X_914:bat[:bit]);
    C_919:bat[:oid] := algebra.thetaselect(X_916:bat[:bit], true:bit, "==":str);
    C_921:bat[:oid] := algebra.projection(C_919:bat[:oid], C_893:bat[:oid]);
    X_925:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2018-03-11 10:00:00.000000":timestamp, "2018-11-04 09:00:00.000000":timestamp, C_921:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_927:bat[:oid] := algebra.thetaselect(X_925:bat[:bit], true:bit, "==":str);
    C_928:bat[:oid] := algebra.projection(C_927:bat[:oid], C_921:bat[:oid]);
    X_932:bat[:timestamp] := algebra.projection(C_928:bat[:oid], X_86:bat[:timestamp]);
    X_933:bat[:timestamp] := bat.replace(X_910:bat[:timestamp], C_928:bat[:oid], X_932:bat[:timestamp], true:bit);
    X_935:bat[:bit] := batcalc.not(X_925:bat[:bit]);
    X_936:bat[:bit] := batcalc.isnil(X_925:bat[:bit]);
    X_937:bat[:bit] := batcalc.or(X_935:bat[:bit], X_936:bat[:bit]);
    C_939:bat[:oid] := algebra.thetaselect(X_937:bat[:bit], true:bit, "==":str);
    C_940:bat[:oid] := algebra.projection(C_939:bat[:oid], C_921:bat[:oid]);
    X_945:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2018-11-04 09:00:00.000000":timestamp, "2019-03-10 10:00:00.000000":timestamp, C_940:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_949:bat[:oid] := algebra.thetaselect(X_945:bat[:bit], true:bit, "==":str);
    C_950:bat[:oid] := algebra.projection(C_949:bat[:oid], C_940:bat[:oid]);
    X_956:bat[:timestamp] := algebra.projection(C_950:bat[:oid], X_61:bat[:timestamp]);
    X_957:bat[:timestamp] := bat.replace(X_933:bat[:timestamp], C_950:bat[:oid], X_956:bat[:timestamp], true:bit);
    X_958:bat[:bit] := batcalc.not(X_945:bat[:bit]);
    X_961:bat[:bit] := batcalc.isnil(X_945:bat[:bit]);
    X_963:bat[:bit] := batcalc.or(X_958:bat[:bit], X_961:bat[:bit]);
    C_966:bat[:oid] := algebra.thetaselect(X_963:bat[:bit], true:bit, "==":str);
    C_968:bat[:oid] := algebra.projection(C_966:bat[:oid], C_940:bat[:oid]);
    X_972:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2019-03-10 10:00:00.000000":timestamp, "2019-11-03 09:00:00.000000":timestamp, C_968:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_975:bat[:oid] := algebra.thetaselect(X_972:bat[:bit], true:bit, "==":str);
    C_976:bat[:oid] := algebra.projection(C_975:bat[:oid], C_968:bat[:oid]);
    X_980:bat[:timestamp] := algebra.projection(C_976:bat[:oid], X_86:bat[:timestamp]);
    X_981:bat[:timestamp] := bat.replace(X_957:bat[:timestamp], C_976:bat[:oid], X_980:bat[:timestamp], true:bit);
    X_982:bat[:bit] := batcalc.not(X_972:bat[:bit]);
    X_983:bat[:bit] := batcalc.isnil(X_972:bat[:bit]);
    X_984:bat[:bit] := batcalc.or(X_982:bat[:bit], X_983:bat[:bit]);
    C_986:bat[:oid] := algebra.thetaselect(X_984:bat[:bit], true:bit, "==":str);
    C_987:bat[:oid] := algebra.projection(C_986:bat[:oid], C_968:bat[:oid]);
    X_992:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2019-11-03 09:00:00.000000":timestamp, "2020-03-08 10:00:00.000000":timestamp, C_987:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_996:bat[:oid] := algebra.thetaselect(X_992:bat[:bit], true:bit, "==":str);
    C_997:bat[:oid] := algebra.projection(C_996:bat[:oid], C_987:bat[:oid]);
    X_1003:bat[:timestamp] := algebra.projection(C_997:bat[:oid], X_61:bat[:timestamp]);
    X_1004:bat[:timestamp] := bat.replace(X_981:bat[:timestamp], C_997:bat[:oid], X_1003:bat[:timestamp], true:bit);
    X_1005:bat[:bit] := batcalc.not(X_992:bat[:bit]);
    X_1008:bat[:bit] := batcalc.isnil(X_992:bat[:bit]);
    X_1010:bat[:bit] := batcalc.or(X_1005:bat[:bit], X_1008:bat[:bit]);
    C_1014:bat[:oid] := algebra.thetaselect(X_1010:bat[:bit], true:bit, "==":str);
    C_1016:bat[:oid] := algebra.projection(C_1014:bat[:oid], C_987:bat[:oid]);
    X_1020:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2020-03-08 10:00:00.000000":timestamp, "2020-11-01 09:00:00.000000":timestamp, C_1016:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_1022:bat[:oid] := algebra.thetaselect(X_1020:bat[:bit], true:bit, "==":str);
    C_1023:bat[:oid] := algebra.projection(C_1022:bat[:oid], C_1016:bat[:oid]);
    X_1027:bat[:timestamp] := algebra.projection(C_1023:bat[:oid], X_86:bat[:timestamp]);
    X_1028:bat[:timestamp] := bat.replace(X_1004:bat[:timestamp], C_1023:bat[:oid], X_1027:bat[:timestamp], true:bit);
    X_1029:bat[:bit] := batcalc.not(X_1020:bat[:bit]);
    X_1030:bat[:bit] := batcalc.isnil(X_1020:bat[:bit]);
    X_1031:bat[:bit] := batcalc.or(X_1029:bat[:bit], X_1030:bat[:bit]);
    C_1033:bat[:oid] := algebra.thetaselect(X_1031:bat[:bit], true:bit, "==":str);
    C_1034:bat[:oid] := algebra.projection(C_1033:bat[:oid], C_1016:bat[:oid]);
    X_1039:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2020-11-01 09:00:00.000000":timestamp, "2021-03-14 10:00:00.000000":timestamp, C_1034:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_1043:bat[:oid] := algebra.thetaselect(X_1039:bat[:bit], true:bit, "==":str);
    C_1044:bat[:oid] := algebra.projection(C_1043:bat[:oid], C_1034:bat[:oid]);
    X_1050:bat[:timestamp] := algebra.projection(C_1044:bat[:oid], X_61:bat[:timestamp]);
    X_1051:bat[:timestamp] := bat.replace(X_1028:bat[:timestamp], C_1044:bat[:oid], X_1050:bat[:timestamp], true:bit);
    X_1053:bat[:bit] := batcalc.not(X_1039:bat[:bit]);
    X_1056:bat[:bit] := batcalc.isnil(X_1039:bat[:bit]);
    X_1058:bat[:bit] := batcalc.or(X_1053:bat[:bit], X_1056:bat[:bit]);
    C_1061:bat[:oid] := algebra.thetaselect(X_1058:bat[:bit], true:bit, "==":str);
    C_1063:bat[:oid] := algebra.projection(C_1061:bat[:oid], C_1034:bat[:oid]);
    X_1067:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2021-03-14 10:00:00.000000":timestamp, "2021-11-07 09:00:00.000000":timestamp, C_1063:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_1069:bat[:oid] := algebra.thetaselect(X_1067:bat[:bit], true:bit, "==":str);
    C_1070:bat[:oid] := algebra.projection(C_1069:bat[:oid], C_1063:bat[:oid]);
    X_1074:bat[:timestamp] := algebra.projection(C_1070:bat[:oid], X_86:bat[:timestamp]);
    X_1075:bat[:timestamp] := bat.replace(X_1051:bat[:timestamp], C_1070:bat[:oid], X_1074:bat[:timestamp], true:bit);
    X_1076:bat[:bit] := batcalc.not(X_1067:bat[:bit]);
    X_1077:bat[:bit] := batcalc.isnil(X_1067:bat[:bit]);
    X_1078:bat[:bit] := batcalc.or(X_1076:bat[:bit], X_1077:bat[:bit]);
    C_1080:bat[:oid] := algebra.thetaselect(X_1078:bat[:bit], true:bit, "==":str);
    C_1081:bat[:oid] := algebra.projection(C_1080:bat[:oid], C_1063:bat[:oid]);
    X_1086:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2021-11-07 09:00:00.000000":timestamp, "2022-03-13 10:00:00.000000":timestamp, C_1081:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_1090:bat[:oid] := algebra.thetaselect(X_1086:bat[:bit], true:bit, "==":str);
    C_1091:bat[:oid] := algebra.projection(C_1090:bat[:oid], C_1081:bat[:oid]);
    X_1097:bat[:timestamp] := algebra.projection(C_1091:bat[:oid], X_61:bat[:timestamp]);
    X_1098:bat[:timestamp] := bat.replace(X_1075:bat[:timestamp], C_1091:bat[:oid], X_1097:bat[:timestamp], true:bit);
    X_1099:bat[:bit] := batcalc.not(X_1086:bat[:bit]);
    X_1102:bat[:bit] := batcalc.isnil(X_1086:bat[:bit]);
    X_1104:bat[:bit] := batcalc.or(X_1099:bat[:bit], X_1102:bat[:bit]);
    C_1107:bat[:oid] := algebra.thetaselect(X_1104:bat[:bit], true:bit, "==":str);
    C_1109:bat[:oid] := algebra.projection(C_1107:bat[:oid], C_1081:bat[:oid]);
    X_1113:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2022-03-13 10:00:00.000000":timestamp, "2022-11-06 09:00:00.000000":timestamp, C_1109:bat[:oid], false:bit, true:bit, false:bit, false:bit, false:bit);
    C_1115:bat[:oid] := algebra.thetaselect(X_1113:bat[:bit], true:bit, "==":str);
    C_1116:bat[:oid] := algebra.projection(C_1115:bat[:oid], C_1109:bat[:oid]);
    X_1120:bat[:timestamp] := algebra.projection(C_1116:bat[:oid], X_86:bat[:timestamp]);
    X_1121:bat[:timestamp] := bat.replace(X_1098:bat[:timestamp], C_1116:bat[:oid], X_1120:bat[:timestamp], true:bit);
    X_1123:bat[:bit] := batcalc.not(X_1113:bat[:bit]);
    X_1124:bat[:bit] := batcalc.isnil(X_1113:bat[:bit]);
    X_1125:bat[:bit] := batcalc.or(X_1123:bat[:bit], X_1124:bat[:bit]);
    C_1127:bat[:oid] := algebra.thetaselect(X_1125:bat[:bit], true:bit, "==":str);
    C_1128:bat[:oid] := algebra.projection(C_1127:bat[:oid], C_1109:bat[:oid]);
    X_1134:bat[:timestamp] := algebra.projection(C_1128:bat[:oid], X_61:bat[:timestamp]);
    X_1135:bat[:timestamp] := bat.replace(X_1121:bat[:timestamp], C_1128:bat[:oid], X_1134:bat[:timestamp], true:bit);
    X_1143:bat[:str] := bat.pack(".":str);
    X_1144:bat[:str] := bat.pack("yearref":str);
    X_1145:bat[:str] := bat.pack("clob":str);
    X_1146:bat[:int] := bat.pack(0:int);
    X_1136:bat[:timestamp] := batcalc.timestamp(X_1135:bat[:timestamp], 7:int);
    X_1140:bat[:str] := batmtime.timestamp_to_str(X_1136:bat[:timestamp], "%Y":str);
    language.pass(C_58:bat[:oid]);
    language.pass(X_51:bat[:bit]);
    language.pass(C_83:bat[:oid]);
    language.pass(X_80:bat[:bit]);
    language.pass(C_75:bat[:oid]);
    language.pass(C_104:bat[:oid]);
    language.pass(X_99:bat[:bit]);
    language.pass(C_94:bat[:oid]);
    language.pass(C_130:bat[:oid]);
    language.pass(X_127:bat[:bit]);
    language.pass(X_112:bat[:bit]);
    language.pass(C_141:bat[:oid]);
    language.pass(X_136:bat[:bit]);
    language.pass(X_149:bat[:bit]);
    language.pass(X_131:bat[:bit]);
    language.pass(C_164:bat[:oid]);
    language.pass(X_160:bat[:bit]);
    language.pass(X_172:bat[:bit]);
    language.pass(X_155:bat[:bit]);
    language.pass(C_185:bat[:oid]);
    language.pass(X_180:bat[:bit]);
    language.pass(X_193:bat[:bit]);
    language.pass(X_175:bat[:bit]);
    language.pass(C_209:bat[:oid]);
    language.pass(X_205:bat[:bit]);
    language.pass(X_216:bat[:bit]);
    language.pass(X_200:bat[:bit]);
    language.pass(C_229:bat[:oid]);
    language.pass(X_224:bat[:bit]);
    language.pass(X_237:bat[:bit]);
    language.pass(X_219:bat[:bit]);
    language.pass(C_253:bat[:oid]);
    language.pass(X_249:bat[:bit]);
    language.pass(X_260:bat[:bit]);
    language.pass(X_244:bat[:bit]);
    language.pass(C_274:bat[:oid]);
    language.pass(X_268:bat[:bit]);
    language.pass(X_282:bat[:bit]);
    language.pass(X_263:bat[:bit]);
    language.pass(C_297:bat[:oid]);
    language.pass(X_293:bat[:bit]);
    language.pass(X_304:bat[:bit]);
    language.pass(X_288:bat[:bit]);
    language.pass(C_318:bat[:oid]);
    language.pass(X_313:bat[:bit]);
    language.pass(X_326:bat[:bit]);
    language.pass(X_308:bat[:bit]);
    language.pass(C_342:bat[:oid]);
    language.pass(X_337:bat[:bit]);
    language.pass(X_349:bat[:bit]);
    language.pass(X_332:bat[:bit]);
    language.pass(C_362:bat[:oid]);
    language.pass(X_357:bat[:bit]);
    language.pass(X_370:bat[:bit]);
    language.pass(X_352:bat[:bit]);
    language.pass(C_386:bat[:oid]);
    language.pass(X_382:bat[:bit]);
    language.pass(X_393:bat[:bit]);
    language.pass(X_377:bat[:bit]);
    language.pass(C_406:bat[:oid]);
    language.pass(X_401:bat[:bit]);
    language.pass(X_414:bat[:bit]);
    language.pass(X_396:bat[:bit]);
    language.pass(C_430:bat[:oid]);
    language.pass(X_426:bat[:bit]);
    language.pass(X_437:bat[:bit]);
    language.pass(X_421:bat[:bit]);
    language.pass(C_451:bat[:oid]);
    language.pass(X_445:bat[:bit]);
    language.pass(X_459:bat[:bit]);
    language.pass(X_440:bat[:bit]);
    language.pass(C_474:bat[:oid]);
    language.pass(X_470:bat[:bit]);
    language.pass(X_481:bat[:bit]);
    language.pass(X_465:bat[:bit]);
    language.pass(C_495:bat[:oid]);
    language.pass(X_490:bat[:bit]);
    language.pass(X_503:bat[:bit]);
    language.pass(X_485:bat[:bit]);
    language.pass(C_519:bat[:oid]);
    language.pass(X_514:bat[:bit]);
    language.pass(X_526:bat[:bit]);
    language.pass(X_509:bat[:bit]);
    language.pass(C_539:bat[:oid]);
    language.pass(X_534:bat[:bit]);
    language.pass(X_547:bat[:bit]);
    language.pass(X_529:bat[:bit]);
    language.pass(C_563:bat[:oid]);
    language.pass(X_559:bat[:bit]);
    language.pass(X_570:bat[:bit]);
    language.pass(X_554:bat[:bit]);
    language.pass(C_583:bat[:oid]);
    language.pass(X_578:bat[:bit]);
    language.pass(X_591:bat[:bit]);
    language.pass(X_573:bat[:bit]);
    language.pass(C_607:bat[:oid]);
    language.pass(X_603:bat[:bit]);
    language.pass(X_614:bat[:bit]);
    language.pass(X_598:bat[:bit]);
    language.pass(C_628:bat[:oid]);
    language.pass(X_622:bat[:bit]);
    language.pass(X_636:bat[:bit]);
    language.pass(X_617:bat[:bit]);
    language.pass(C_651:bat[:oid]);
    language.pass(X_647:bat[:bit]);
    language.pass(X_658:bat[:bit]);
    language.pass(X_642:bat[:bit]);
    language.pass(C_672:bat[:oid]);
    language.pass(X_667:bat[:bit]);
    language.pass(X_680:bat[:bit]);
    language.pass(X_662:bat[:bit]);
    language.pass(C_696:bat[:oid]);
    language.pass(X_691:bat[:bit]);
    language.pass(X_703:bat[:bit]);
    language.pass(X_686:bat[:bit]);
    language.pass(C_716:bat[:oid]);
    language.pass(X_711:bat[:bit]);
    language.pass(X_724:bat[:bit]);
    language.pass(X_706:bat[:bit]);
    language.pass(C_740:bat[:oid]);
    language.pass(X_736:bat[:bit]);
    language.pass(X_747:bat[:bit]);
    language.pass(X_731:bat[:bit]);
    language.pass(C_760:bat[:oid]);
    language.pass(X_755:bat[:bit]);
    language.pass(X_768:bat[:bit]);
    language.pass(X_750:bat[:bit]);
    language.pass(C_784:bat[:oid]);
    language.pass(X_780:bat[:bit]);
    language.pass(X_791:bat[:bit]);
    language.pass(X_775:bat[:bit]);
    language.pass(C_805:bat[:oid]);
    language.pass(X_799:bat[:bit]);
    language.pass(X_813:bat[:bit]);
    language.pass(X_794:bat[:bit]);
    language.pass(C_828:bat[:oid]);
    language.pass(X_824:bat[:bit]);
    language.pass(X_835:bat[:bit]);
    language.pass(X_819:bat[:bit]);
    language.pass(C_849:bat[:oid]);
    language.pass(X_844:bat[:bit]);
    language.pass(X_857:bat[:bit]);
    language.pass(X_839:bat[:bit]);
    language.pass(C_873:bat[:oid]);
    language.pass(X_868:bat[:bit]);
    language.pass(X_880:bat[:bit]);
    language.pass(X_863:bat[:bit]);
    language.pass(C_893:bat[:oid]);
    language.pass(X_888:bat[:bit]);
    language.pass(X_901:bat[:bit]);
    language.pass(X_883:bat[:bit]);
    language.pass(C_917:bat[:oid]);
    language.pass(X_913:bat[:bit]);
    language.pass(X_924:bat[:bit]);
    language.pass(X_908:bat[:bit]);
    language.pass(C_937:bat[:oid]);
    language.pass(X_932:bat[:bit]);
    language.pass(X_945:bat[:bit]);
    language.pass(C_940:bat[:oid]);
    language.pass(C_976:bat[:oid]);
    language.pass(X_972:bat[:bit]);
    language.pass(C_968:bat[:oid]);
    language.pass(C_997:bat[:oid]);
    language.pass(X_992:bat[:bit]);
    language.pass(C_987:bat[:oid]);
    language.pass(C_1023:bat[:oid]);
    language.pass(X_1020:bat[:bit]);
    language.pass(C_1016:bat[:oid]);
    language.pass(C_1044:bat[:oid]);
    language.pass(X_1039:bat[:bit]);
    language.pass(C_1034:bat[:oid]);
    language.pass(C_1070:bat[:oid]);
    language.pass(X_1067:bat[:bit]);
    language.pass(C_1063:bat[:oid]);
    language.pass(C_1091:bat[:oid]);
    language.pass(X_1086:bat[:bit]);
    language.pass(C_1081:bat[:oid]);
    language.pass(X_45:bat[:timestamp]);
    language.pass(X_86:bat[:timestamp]);
    language.pass(C_1116:bat[:oid]);
    language.pass(X_1113:bat[:bit]);
    language.pass(C_1109:bat[:oid]);
    language.pass(X_61:bat[:timestamp]);
    language.pass(C_1128:bat[:oid]);
exit X_1298:bit;
    sql.resultSet(X_1143:bat[:str], X_1144:bat[:str], X_1145:bat[:str], X_1146:bat[:int], X_1146:bat[:int], X_1140:bat[:str]);
end user.main;
# optimizer.mitosis()
#inline               actions= 0 time=37 usec 
#remap                actions=322 time=444 usec 
#costmodel            actions= 1 time=8 usec 
#coercion             actions= 0 time=9 usec 
#aliases              actions=142 time=54 usec 
#evaluate             actions=92 time=244 usec 
#emptybind            actions= 9 time=45 usec 
#pushselect           actions= 0 time=40 usec 
#aliases              actions=96 time=74 usec 
#mergetable           actions= 0 time=379 usec 
#deadcode             actions=241 time=60 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions=317 time=93 usec 
#commonTerms          actions=91 time=187 usec 
#projectionpath       actions= 0 time=10 usec 
#deadcode             actions=91 time=39 usec 
#reorder              actions= 1 time=76 usec 
#matpack              actions= 0 time=1 usec 
#dataflow             actions= 1 time=109 usec 
#multiplex            actions= 3 time=28 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=3 usec 
#deadcode             actions= 0 time=33 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=144 usec 
#total                actions=29 time=2531 usec 

# 14:08:13 >  
# 14:08:13 >  "Done."
# 14:08:13 >  

