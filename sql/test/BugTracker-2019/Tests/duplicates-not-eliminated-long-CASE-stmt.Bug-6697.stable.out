stdout of test 'duplicates-not-eliminated-long-CASE-stmt.Bug-6697` in directory 'sql/test/BugTracker-2019` itself:


# 14:08:13 >  
# 14:08:13 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33481" "--set" "mapi_usock=/var/tmp/mtest-8696/.s.monetdb.33481" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 14:08:13 >  

# MonetDB 5 server v11.34.0 (hg id: 29627d20d2e0)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:33481/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8696/.s.monetdb.33481
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 14:08:13 >  
# 14:08:13 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8696" "--port=33481"
# 14:08:13 >  

#CREATE TABLE IF NOT EXISTS "task" (
#"sys_class_name" VARCHAR(80),
#"priority" BIGINT,
#"sys_created_on" TIMESTAMP
#);
#explain SELECT  sys.timestamp_to_str(case when task0."sys_created_on" >= '1999-10-31 09:00:00' and task0."sys_created_on" < '2000-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2000-04-02 10:00:00' and task0."sys_created_on" < '2000-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2000-10-29 09:00:00' and task0."sys_created_on" < '2001-04-01 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2001-04-01 10:00:00' and task0."sys_created_on" < '2001-10-28 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2001-10-28 09:00:00' and task0."sys_created_on" < '2002-04-07 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2002-04-07 10:00:00' and task0."sys_created_on" < '2002-10-27 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2002-10-27 09:00:00' and task0."sys_created_on" < '2003-04-06 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2003-04-06 10:00:00' and task0."sys_created_on" < '2003-10-26 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2003-10-26 09:00:00' and task0."sys_created_on" < '2004-04-04 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2004-04-04 10:00:00' and task0."sys_created_on" < '2004-10-31 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2004-10-31 09:00:00' and task0."sys_created_on" < '2005-04-03 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2005-04-03 10:00:00' and task0."sys_created_on" < '2005-10-30 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2005-10-30 09:00:00' and task0."sys_created_on" < '2006-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2006-04-02 10:00:00' and task0."sys_created_on" < '2006-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2006-10-29 09:00:00' and task0."sys_created_on" < '2007-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2007-03-11 10:00:00' and task0."sys_created_on" < '2007-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2007-11-04 09:00:00' and task0."sys_created_on" < '2008-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2008-03-09 10:00:00' and task0."sys_created_on" < '2008-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2008-11-02 09:00:00' and task0."sys_created_on" < '2009-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2009-03-08 10:00:00' and task0."sys_created_on" < '2009-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2009-11-01 09:00:00' and task0."sys_created_on" < '2010-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2010-03-14 10:00:00' and task0."sys_created_on" < '2010-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2010-11-07 09:00:00' and task0."sys_created_on" < '2011-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2011-03-13 10:00:00' and task0."sys_created_on" < '2011-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2011-11-06 09:00:00' and task0."sys_created_on" < '2012-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2012-03-11 10:00:00' and task0."sys_created_on" < '2012-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2012-11-04 09:00:00' and task0."sys_created_on" < '2013-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2013-03-10 10:00:00' and task0."sys_created_on" < '2013-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2013-11-03 09:00:00' and task0."sys_created_on" < '2014-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2014-03-09 10:00:00' and task0."sys_created_on" < '2014-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2014-11-02 09:00:00' and task0."sys_created_on" < '2015-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2015-03-08 10:00:00' and task0."sys_created_on" < '2015-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2015-11-01 09:00:00' and task0."sys_created_on" < '2016-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2016-03-13 10:00:00' and task0."sys_created_on" < '2016-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2016-11-06 09:00:00' and task0."sys_created_on" < '2017-03-12 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2017-03-12 10:00:00' and task0."sys_created_on" < '2017-11-05 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2017-11-05 09:00:00' and task0."sys_created_on" < '2018-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2018-03-11 10:00:00' and task0."sys_created_on" < '2018-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2018-11-04 09:00:00' and task0."sys_created_on" < '2019-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2019-03-10 10:00:00' and task0."sys_created_on" < '2019-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2019-11-03 09:00:00' and task0."sys_created_on" < '2020-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2020-03-08 10:00:00' and task0."sys_created_on" < '2020-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2020-11-01 09:00:00' and task0."sys_created_on" < '2021-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2021-03-14 10:00:00' and task0."sys_created_on" < '2021-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2021-11-07 09:00:00' and task0."sys_created_on" < '2022-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2022-03-13 10:00:00' and task0."sys_created_on" < '2022-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second else task0."sys_created_on" + interval '-28800' second end,'%Y') AS yearref FROM task task0 WHERE task0."sys_class_name" = 'incident' AND task0."priority" IS NOT NULL ;
% .explain # table_name
% mal # name
% clob # type
% 1023 # length
function user.main():void;
    X_1:void := querylog.define("explain select sys.timestamp_to_str(case when task0.\"sys_created_on\" >= \\'1999-10-31 09:00:00\\' and task0.\"sys_created_on\" < \\'2000-04-02 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2000-04-02 10:00:00\\' and task0.\"sys_created_on\" < \\'2000-10-29 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2000-10-29 09:00:00\\' and task0.\"sys_created_on\" < \\'2001-04-01 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2001-04-01 10:00:00\\' and task0.\"sys_created_on\" < \\'2001-10-28 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2001-10-28 09:00:00\\' and task0.\"sys_created_on\" < \\'2002-04-07 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2002-04-07 10:00:00\\' and t
barrier X_1047:bit := language.dataflow();
    X_892:bat[:str] := bat.pack("sys.":str);
    X_893:bat[:str] := bat.pack("yearref":str);
    X_894:bat[:str] := bat.pack("clob":str);
    X_895:bat[:int] := bat.pack(0:int);
    X_45:bat[:timestamp] := bat.new(nil:timestamp);
    X_53:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "1999-10-31 09:00:00.000000":timestamp, "2000-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_58:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng);
    X_69:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2000-04-02 10:00:00.000000":timestamp, "2000-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_74:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng);
    X_83:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2000-10-29 09:00:00.000000":timestamp, "2001-04-01 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_95:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2001-04-01 10:00:00.000000":timestamp, "2001-10-28 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_113:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2001-10-28 09:00:00.000000":timestamp, "2002-04-07 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_126:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2002-04-07 10:00:00.000000":timestamp, "2002-10-27 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_140:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2002-10-27 09:00:00.000000":timestamp, "2003-04-06 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_158:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2003-04-06 10:00:00.000000":timestamp, "2003-10-26 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_169:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2003-10-26 09:00:00.000000":timestamp, "2004-04-04 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_184:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2004-04-04 10:00:00.000000":timestamp, "2004-10-31 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_202:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2004-10-31 09:00:00.000000":timestamp, "2005-04-03 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_217:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2005-04-03 10:00:00.000000":timestamp, "2005-10-30 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_228:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2005-10-30 09:00:00.000000":timestamp, "2006-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_246:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2006-04-02 10:00:00.000000":timestamp, "2006-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_260:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2006-10-29 09:00:00.000000":timestamp, "2007-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_272:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2007-03-11 10:00:00.000000":timestamp, "2007-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_291:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2007-11-04 09:00:00.000000":timestamp, "2008-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_303:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2008-03-09 10:00:00.000000":timestamp, "2008-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_316:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2008-11-02 09:00:00.000000":timestamp, "2009-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_335:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2009-03-08 10:00:00.000000":timestamp, "2009-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_349:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2009-11-01 09:00:00.000000":timestamp, "2010-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_361:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2010-03-14 10:00:00.000000":timestamp, "2010-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_378:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2010-11-07 09:00:00.000000":timestamp, "2011-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_392:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2011-03-13 10:00:00.000000":timestamp, "2011-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_405:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2011-11-06 09:00:00.000000":timestamp, "2012-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_423:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2012-03-11 10:00:00.000000":timestamp, "2012-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_436:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2012-11-04 09:00:00.000000":timestamp, "2013-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_448:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2013-03-10 10:00:00.000000":timestamp, "2013-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_467:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2013-11-03 09:00:00.000000":timestamp, "2014-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_481:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2014-03-09 10:00:00.000000":timestamp, "2014-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_493:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2014-11-02 09:00:00.000000":timestamp, "2015-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_511:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2015-03-08 10:00:00.000000":timestamp, "2015-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_525:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2015-11-01 09:00:00.000000":timestamp, "2016-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_537:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2016-03-13 10:00:00.000000":timestamp, "2016-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_555:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2016-11-06 09:00:00.000000":timestamp, "2017-03-12 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_568:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2017-03-12 10:00:00.000000":timestamp, "2017-11-05 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_581:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2017-11-05 09:00:00.000000":timestamp, "2018-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_600:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2018-03-11 10:00:00.000000":timestamp, "2018-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_614:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2018-11-04 09:00:00.000000":timestamp, "2019-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_625:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2019-03-10 10:00:00.000000":timestamp, "2019-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_643:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2019-11-03 09:00:00.000000":timestamp, "2020-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_657:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2020-03-08 10:00:00.000000":timestamp, "2020-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_670:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2020-11-01 09:00:00.000000":timestamp, "2021-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_688:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2021-03-14 10:00:00.000000":timestamp, "2021-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_700:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2021-11-07 09:00:00.000000":timestamp, "2022-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_713:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2022-03-13 10:00:00.000000":timestamp, "2022-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_730:bat[:timestamp] := batcalc.ifthenelse(X_713:bat[:bit], X_74:bat[:timestamp], X_58:bat[:timestamp]);
    X_734:bat[:timestamp] := batcalc.ifthenelse(X_700:bat[:bit], X_58:bat[:timestamp], X_730:bat[:timestamp]);
    X_738:bat[:timestamp] := batcalc.ifthenelse(X_688:bat[:bit], X_74:bat[:timestamp], X_734:bat[:timestamp]);
    X_741:bat[:timestamp] := batcalc.ifthenelse(X_670:bat[:bit], X_58:bat[:timestamp], X_738:bat[:timestamp]);
    X_744:bat[:timestamp] := batcalc.ifthenelse(X_657:bat[:bit], X_74:bat[:timestamp], X_741:bat[:timestamp]);
    X_747:bat[:timestamp] := batcalc.ifthenelse(X_643:bat[:bit], X_58:bat[:timestamp], X_744:bat[:timestamp]);
    X_751:bat[:timestamp] := batcalc.ifthenelse(X_625:bat[:bit], X_74:bat[:timestamp], X_747:bat[:timestamp]);
    X_754:bat[:timestamp] := batcalc.ifthenelse(X_614:bat[:bit], X_58:bat[:timestamp], X_751:bat[:timestamp]);
    X_757:bat[:timestamp] := batcalc.ifthenelse(X_600:bat[:bit], X_74:bat[:timestamp], X_754:bat[:timestamp]);
    X_761:bat[:timestamp] := batcalc.ifthenelse(X_581:bat[:bit], X_58:bat[:timestamp], X_757:bat[:timestamp]);
    X_764:bat[:timestamp] := batcalc.ifthenelse(X_568:bat[:bit], X_74:bat[:timestamp], X_761:bat[:timestamp]);
    X_769:bat[:timestamp] := batcalc.ifthenelse(X_555:bat[:bit], X_58:bat[:timestamp], X_764:bat[:timestamp]);
    X_772:bat[:timestamp] := batcalc.ifthenelse(X_537:bat[:bit], X_74:bat[:timestamp], X_769:bat[:timestamp]);
    X_775:bat[:timestamp] := batcalc.ifthenelse(X_525:bat[:bit], X_58:bat[:timestamp], X_772:bat[:timestamp]);
    X_778:bat[:timestamp] := batcalc.ifthenelse(X_511:bat[:bit], X_74:bat[:timestamp], X_775:bat[:timestamp]);
    X_781:bat[:timestamp] := batcalc.ifthenelse(X_493:bat[:bit], X_58:bat[:timestamp], X_778:bat[:timestamp]);
    X_785:bat[:timestamp] := batcalc.ifthenelse(X_481:bat[:bit], X_74:bat[:timestamp], X_781:bat[:timestamp]);
    X_788:bat[:timestamp] := batcalc.ifthenelse(X_467:bat[:bit], X_58:bat[:timestamp], X_785:bat[:timestamp]);
    X_791:bat[:timestamp] := batcalc.ifthenelse(X_448:bat[:bit], X_74:bat[:timestamp], X_788:bat[:timestamp]);
    X_795:bat[:timestamp] := batcalc.ifthenelse(X_436:bat[:bit], X_58:bat[:timestamp], X_791:bat[:timestamp]);
    X_798:bat[:timestamp] := batcalc.ifthenelse(X_423:bat[:bit], X_74:bat[:timestamp], X_795:bat[:timestamp]);
    X_803:bat[:timestamp] := batcalc.ifthenelse(X_405:bat[:bit], X_58:bat[:timestamp], X_798:bat[:timestamp]);
    X_806:bat[:timestamp] := batcalc.ifthenelse(X_392:bat[:bit], X_74:bat[:timestamp], X_803:bat[:timestamp]);
    X_809:bat[:timestamp] := batcalc.ifthenelse(X_378:bat[:bit], X_58:bat[:timestamp], X_806:bat[:timestamp]);
    X_812:bat[:timestamp] := batcalc.ifthenelse(X_361:bat[:bit], X_74:bat[:timestamp], X_809:bat[:timestamp]);
    X_815:bat[:timestamp] := batcalc.ifthenelse(X_349:bat[:bit], X_58:bat[:timestamp], X_812:bat[:timestamp]);
    X_819:bat[:timestamp] := batcalc.ifthenelse(X_335:bat[:bit], X_74:bat[:timestamp], X_815:bat[:timestamp]);
    X_822:bat[:timestamp] := batcalc.ifthenelse(X_316:bat[:bit], X_58:bat[:timestamp], X_819:bat[:timestamp]);
    X_825:bat[:timestamp] := batcalc.ifthenelse(X_303:bat[:bit], X_74:bat[:timestamp], X_822:bat[:timestamp]);
    X_829:bat[:timestamp] := batcalc.ifthenelse(X_291:bat[:bit], X_58:bat[:timestamp], X_825:bat[:timestamp]);
    X_832:bat[:timestamp] := batcalc.ifthenelse(X_272:bat[:bit], X_74:bat[:timestamp], X_829:bat[:timestamp]);
    X_837:bat[:timestamp] := batcalc.ifthenelse(X_260:bat[:bit], X_58:bat[:timestamp], X_832:bat[:timestamp]);
    X_840:bat[:timestamp] := batcalc.ifthenelse(X_246:bat[:bit], X_74:bat[:timestamp], X_837:bat[:timestamp]);
    X_843:bat[:timestamp] := batcalc.ifthenelse(X_228:bat[:bit], X_58:bat[:timestamp], X_840:bat[:timestamp]);
    X_846:bat[:timestamp] := batcalc.ifthenelse(X_217:bat[:bit], X_74:bat[:timestamp], X_843:bat[:timestamp]);
    X_849:bat[:timestamp] := batcalc.ifthenelse(X_202:bat[:bit], X_58:bat[:timestamp], X_846:bat[:timestamp]);
    X_853:bat[:timestamp] := batcalc.ifthenelse(X_184:bat[:bit], X_74:bat[:timestamp], X_849:bat[:timestamp]);
    X_856:bat[:timestamp] := batcalc.ifthenelse(X_169:bat[:bit], X_58:bat[:timestamp], X_853:bat[:timestamp]);
    X_859:bat[:timestamp] := batcalc.ifthenelse(X_158:bat[:bit], X_74:bat[:timestamp], X_856:bat[:timestamp]);
    X_863:bat[:timestamp] := batcalc.ifthenelse(X_140:bat[:bit], X_58:bat[:timestamp], X_859:bat[:timestamp]);
    X_866:bat[:timestamp] := batcalc.ifthenelse(X_126:bat[:bit], X_74:bat[:timestamp], X_863:bat[:timestamp]);
    X_871:bat[:timestamp] := batcalc.ifthenelse(X_113:bat[:bit], X_58:bat[:timestamp], X_866:bat[:timestamp]);
    X_874:bat[:timestamp] := batcalc.ifthenelse(X_95:bat[:bit], X_74:bat[:timestamp], X_871:bat[:timestamp]);
    X_877:bat[:timestamp] := batcalc.ifthenelse(X_83:bat[:bit], X_58:bat[:timestamp], X_874:bat[:timestamp]);
    X_880:bat[:timestamp] := batcalc.ifthenelse(X_69:bat[:bit], X_74:bat[:timestamp], X_877:bat[:timestamp]);
    X_882:bat[:timestamp] := batcalc.ifthenelse(X_53:bat[:bit], X_58:bat[:timestamp], X_880:bat[:timestamp]);
    X_883:bat[:timestamp] := batcalc.timestamp(X_882:bat[:timestamp], 7:int);
    X_888:bat[:str] := batmtime.timestamp_to_str(X_883:bat[:timestamp], "%Y":str);
    language.pass(X_45:bat[:timestamp]);
    language.pass(X_74:bat[:timestamp]);
    language.pass(X_58:bat[:timestamp]);
exit X_1047:bit;
    sql.resultSet(X_892:bat[:str], X_893:bat[:str], X_894:bat[:str], X_895:bat[:int], X_895:bat[:int], X_888:bat[:str]);
end user.main;
# optimizer.mitosis()
# optimizer.dataflow()
#inline               actions= 0 time=36 usec 
#remap                actions=368 time=710 usec 
#costmodel            actions= 1 time=12 usec 
#coercion             actions=416 time=78 usec 
#aliases              actions=649 time=118 usec 
#evaluate             actions=185 time=356 usec 
#emptybind            actions=11 time=51 usec 
#pushselect           actions= 0 time=18 usec 
#aliases              actions=188 time=68 usec 
#mergetable           actions= 0 time=164 usec 
#deadcode             actions=18 time=48 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions=317 time=93 usec 
#commonTerms          actions=91 time=187 usec 
#projectionpath       actions= 0 time=10 usec 
#deadcode             actions=91 time=39 usec 
#reorder              actions= 1 time=76 usec 
#matpack              actions= 0 time=1 usec 
#dataflow             actions= 1 time=109 usec 
#multiplex            actions= 3 time=28 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=3 usec 
#deadcode             actions= 0 time=33 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=144 usec 
#total                actions=29 time=2531 usec 

# 14:08:13 >  
# 14:08:13 >  "Done."
# 14:08:13 >  

