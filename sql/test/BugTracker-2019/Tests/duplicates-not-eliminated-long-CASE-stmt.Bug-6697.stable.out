stdout of test 'duplicates-not-eliminated-long-CASE-stmt.Bug-6697` in directory 'sql/test/BugTracker-2019` itself:


# 14:08:13 >  
# 14:08:13 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33481" "--set" "mapi_usock=/var/tmp/mtest-8696/.s.monetdb.33481" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 14:08:13 >  

# MonetDB 5 server v11.34.0 (hg id: 29627d20d2e0)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:33481/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8696/.s.monetdb.33481
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 14:08:13 >  
# 14:08:13 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8696" "--port=33481"
# 14:08:13 >  

#CREATE TABLE IF NOT EXISTS "task" (
#"sys_class_name" VARCHAR(80),
#"priority" BIGINT,
#"sys_created_on" TIMESTAMP
#);
#explain SELECT  sys.timestamp_to_str(case when task0."sys_created_on" >= '1999-10-31 09:00:00' and task0."sys_created_on" < '2000-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2000-04-02 10:00:00' and task0."sys_created_on" < '2000-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2000-10-29 09:00:00' and task0."sys_created_on" < '2001-04-01 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2001-04-01 10:00:00' and task0."sys_created_on" < '2001-10-28 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2001-10-28 09:00:00' and task0."sys_created_on" < '2002-04-07 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2002-04-07 10:00:00' and task0."sys_created_on" < '2002-10-27 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2002-10-27 09:00:00' and task0."sys_created_on" < '2003-04-06 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2003-04-06 10:00:00' and task0."sys_created_on" < '2003-10-26 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2003-10-26 09:00:00' and task0."sys_created_on" < '2004-04-04 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2004-04-04 10:00:00' and task0."sys_created_on" < '2004-10-31 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2004-10-31 09:00:00' and task0."sys_created_on" < '2005-04-03 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2005-04-03 10:00:00' and task0."sys_created_on" < '2005-10-30 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2005-10-30 09:00:00' and task0."sys_created_on" < '2006-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2006-04-02 10:00:00' and task0."sys_created_on" < '2006-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2006-10-29 09:00:00' and task0."sys_created_on" < '2007-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2007-03-11 10:00:00' and task0."sys_created_on" < '2007-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2007-11-04 09:00:00' and task0."sys_created_on" < '2008-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2008-03-09 10:00:00' and task0."sys_created_on" < '2008-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2008-11-02 09:00:00' and task0."sys_created_on" < '2009-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2009-03-08 10:00:00' and task0."sys_created_on" < '2009-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2009-11-01 09:00:00' and task0."sys_created_on" < '2010-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2010-03-14 10:00:00' and task0."sys_created_on" < '2010-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2010-11-07 09:00:00' and task0."sys_created_on" < '2011-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2011-03-13 10:00:00' and task0."sys_created_on" < '2011-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2011-11-06 09:00:00' and task0."sys_created_on" < '2012-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2012-03-11 10:00:00' and task0."sys_created_on" < '2012-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2012-11-04 09:00:00' and task0."sys_created_on" < '2013-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2013-03-10 10:00:00' and task0."sys_created_on" < '2013-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2013-11-03 09:00:00' and task0."sys_created_on" < '2014-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2014-03-09 10:00:00' and task0."sys_created_on" < '2014-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2014-11-02 09:00:00' and task0."sys_created_on" < '2015-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2015-03-08 10:00:00' and task0."sys_created_on" < '2015-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2015-11-01 09:00:00' and task0."sys_created_on" < '2016-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2016-03-13 10:00:00' and task0."sys_created_on" < '2016-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2016-11-06 09:00:00' and task0."sys_created_on" < '2017-03-12 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2017-03-12 10:00:00' and task0."sys_created_on" < '2017-11-05 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2017-11-05 09:00:00' and task0."sys_created_on" < '2018-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2018-03-11 10:00:00' and task0."sys_created_on" < '2018-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2018-11-04 09:00:00' and task0."sys_created_on" < '2019-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2019-03-10 10:00:00' and task0."sys_created_on" < '2019-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2019-11-03 09:00:00' and task0."sys_created_on" < '2020-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2020-03-08 10:00:00' and task0."sys_created_on" < '2020-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2020-11-01 09:00:00' and task0."sys_created_on" < '2021-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2021-03-14 10:00:00' and task0."sys_created_on" < '2021-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2021-11-07 09:00:00' and task0."sys_created_on" < '2022-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2022-03-13 10:00:00' and task0."sys_created_on" < '2022-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second else task0."sys_created_on" + interval '-28800' second end,'%Y') AS yearref FROM task task0 WHERE task0."sys_class_name" = 'incident' AND task0."priority" IS NOT NULL ;
% .explain # table_name
% mal # name
% clob # type
% 1023 # length
function user.main():void;
    X_1:void := querylog.define("explain select sys.timestamp_to_str(case when task0.\"sys_created_on\" >= \\'1999-10-31 09:00:00\\' and task0.\"sys_created_on\" < \\'2000-04-02 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2000-04-02 10:00:00\\' and task0.\"sys_created_on\" < \\'2000-10-29 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2000-10-29 09:00:00\\' and task0.\"sys_created_on\" < \\'2001-04-01 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2001-04-01 10:00:00\\' and task0.\"sys_created_on\" < \\'2001-10-28 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2001-10-28 09:00:00\\' and task0.\"sys_created_on\" < \\'2002-04-07 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2002-04-07 10:00:00\\' and t
barrier X_1210:bit := language.dataflow();
    X_43:bat[:str] := bat.new(nil:str);
    X_56:bat[:timestamp] := algebra.project(X_43:bat[:str], nil:timestamp);
    X_45:bat[:timestamp] := bat.new(nil:timestamp);
    X_51:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "1999-10-31 09:00:00.000000":timestamp, "2000-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    C_58:bat[:oid] := algebra.thetaselect(X_51:bat[:bit], true:bit, "==":str);
    X_61:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng);
    X_64:bat[:timestamp] := algebra.projection(C_58:bat[:oid], X_61:bat[:timestamp]);
    X_65:bat[:timestamp] := bat.replace(X_56:bat[:timestamp], C_58:bat[:oid], X_64:bat[:timestamp], true:bit);
    X_80:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2000-04-02 10:00:00.000000":timestamp, "2000-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_66:bat[:bit] := batcalc.not(X_51:bat[:bit]);
    X_69:bat[:bit] := batcalc.isnil(X_66:bat[:bit]);
    X_71:bat[:bit] := batcalc.or(X_66:bat[:bit], X_69:bat[:bit]);
    C_75:bat[:oid] := algebra.thetaselect(X_71:bat[:bit], true:bit, "==":str);
    C_82:bat[:oid] := algebra.thetaselect(X_80:bat[:bit], C_75:bat[:oid], true:bit, "==":str);
    X_85:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng);
    X_86:bat[:timestamp] := algebra.projection(C_82:bat[:oid], X_85:bat[:timestamp]);
    X_87:bat[:timestamp] := bat.replace(X_65:bat[:timestamp], C_82:bat[:oid], X_86:bat[:timestamp], true:bit);
    X_97:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2000-10-29 09:00:00.000000":timestamp, "2001-04-01 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_88:bat[:bit] := batcalc.not(X_80:bat[:bit]);
    X_89:bat[:bit] := batcalc.isnil(X_88:bat[:bit]);
    X_90:bat[:bit] := batcalc.or(X_88:bat[:bit], X_89:bat[:bit]);
    C_92:bat[:oid] := algebra.thetaselect(X_90:bat[:bit], C_75:bat[:oid], true:bit, "==":str);
    C_101:bat[:oid] := algebra.thetaselect(X_97:bat[:bit], C_92:bat[:oid], true:bit, "==":str);
    X_107:bat[:timestamp] := algebra.projection(C_101:bat[:oid], X_61:bat[:timestamp]);
    X_108:bat[:timestamp] := bat.replace(X_87:bat[:timestamp], C_101:bat[:oid], X_107:bat[:timestamp], true:bit);
    X_123:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2001-04-01 10:00:00.000000":timestamp, "2001-10-28 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_110:bat[:bit] := batcalc.not(X_97:bat[:bit]);
    X_113:bat[:bit] := batcalc.isnil(X_110:bat[:bit]);
    X_115:bat[:bit] := batcalc.or(X_110:bat[:bit], X_113:bat[:bit]);
    C_118:bat[:oid] := algebra.thetaselect(X_115:bat[:bit], C_92:bat[:oid], true:bit, "==":str);
    C_125:bat[:oid] := algebra.thetaselect(X_123:bat[:bit], C_118:bat[:oid], true:bit, "==":str);
    X_129:bat[:timestamp] := algebra.projection(C_125:bat[:oid], X_85:bat[:timestamp]);
    X_130:bat[:timestamp] := bat.replace(X_108:bat[:timestamp], C_125:bat[:oid], X_129:bat[:timestamp], true:bit);
    X_140:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2001-10-28 09:00:00.000000":timestamp, "2002-04-07 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_131:bat[:bit] := batcalc.not(X_123:bat[:bit]);
    X_132:bat[:bit] := batcalc.isnil(X_131:bat[:bit]);
    X_133:bat[:bit] := batcalc.or(X_131:bat[:bit], X_132:bat[:bit]);
    C_135:bat[:oid] := algebra.thetaselect(X_133:bat[:bit], C_118:bat[:oid], true:bit, "==":str);
    C_144:bat[:oid] := algebra.thetaselect(X_140:bat[:bit], C_135:bat[:oid], true:bit, "==":str);
    X_150:bat[:timestamp] := algebra.projection(C_144:bat[:oid], X_61:bat[:timestamp]);
    X_151:bat[:timestamp] := bat.replace(X_130:bat[:timestamp], C_144:bat[:oid], X_150:bat[:timestamp], true:bit);
    X_165:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2002-04-07 10:00:00.000000":timestamp, "2002-10-27 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_152:bat[:bit] := batcalc.not(X_140:bat[:bit]);
    X_155:bat[:bit] := batcalc.isnil(X_152:bat[:bit]);
    X_157:bat[:bit] := batcalc.or(X_152:bat[:bit], X_155:bat[:bit]);
    C_160:bat[:oid] := algebra.thetaselect(X_157:bat[:bit], C_135:bat[:oid], true:bit, "==":str);
    C_167:bat[:oid] := algebra.thetaselect(X_165:bat[:bit], C_160:bat[:oid], true:bit, "==":str);
    X_171:bat[:timestamp] := algebra.projection(C_167:bat[:oid], X_85:bat[:timestamp]);
    X_172:bat[:timestamp] := bat.replace(X_151:bat[:timestamp], C_167:bat[:oid], X_171:bat[:timestamp], true:bit);
    X_183:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2002-10-27 09:00:00.000000":timestamp, "2003-04-06 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_173:bat[:bit] := batcalc.not(X_165:bat[:bit]);
    X_174:bat[:bit] := batcalc.isnil(X_173:bat[:bit]);
    X_175:bat[:bit] := batcalc.or(X_173:bat[:bit], X_174:bat[:bit]);
    C_178:bat[:oid] := algebra.thetaselect(X_175:bat[:bit], C_160:bat[:oid], true:bit, "==":str);
    C_187:bat[:oid] := algebra.thetaselect(X_183:bat[:bit], C_178:bat[:oid], true:bit, "==":str);
    X_193:bat[:timestamp] := algebra.projection(C_187:bat[:oid], X_61:bat[:timestamp]);
    X_194:bat[:timestamp] := bat.replace(X_172:bat[:timestamp], C_187:bat[:oid], X_193:bat[:timestamp], true:bit);
    X_208:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2003-04-06 10:00:00.000000":timestamp, "2003-10-26 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_195:bat[:bit] := batcalc.not(X_183:bat[:bit]);
    X_198:bat[:bit] := batcalc.isnil(X_195:bat[:bit]);
    X_200:bat[:bit] := batcalc.or(X_195:bat[:bit], X_198:bat[:bit]);
    C_203:bat[:oid] := algebra.thetaselect(X_200:bat[:bit], C_178:bat[:oid], true:bit, "==":str);
    C_211:bat[:oid] := algebra.thetaselect(X_208:bat[:bit], C_203:bat[:oid], true:bit, "==":str);
    X_215:bat[:timestamp] := algebra.projection(C_211:bat[:oid], X_85:bat[:timestamp]);
    X_216:bat[:timestamp] := bat.replace(X_194:bat[:timestamp], C_211:bat[:oid], X_215:bat[:timestamp], true:bit);
    X_226:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2003-10-26 09:00:00.000000":timestamp, "2004-04-04 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_217:bat[:bit] := batcalc.not(X_208:bat[:bit]);
    X_218:bat[:bit] := batcalc.isnil(X_217:bat[:bit]);
    X_219:bat[:bit] := batcalc.or(X_217:bat[:bit], X_218:bat[:bit]);
    C_221:bat[:oid] := algebra.thetaselect(X_219:bat[:bit], C_203:bat[:oid], true:bit, "==":str);
    C_230:bat[:oid] := algebra.thetaselect(X_226:bat[:bit], C_221:bat[:oid], true:bit, "==":str);
    X_236:bat[:timestamp] := algebra.projection(C_230:bat[:oid], X_61:bat[:timestamp]);
    X_237:bat[:timestamp] := bat.replace(X_216:bat[:timestamp], C_230:bat[:oid], X_236:bat[:timestamp], true:bit);
    X_252:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2004-04-04 10:00:00.000000":timestamp, "2004-10-31 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_238:bat[:bit] := batcalc.not(X_226:bat[:bit]);
    X_241:bat[:bit] := batcalc.isnil(X_238:bat[:bit]);
    X_243:bat[:bit] := batcalc.or(X_238:bat[:bit], X_241:bat[:bit]);
    C_247:bat[:oid] := algebra.thetaselect(X_243:bat[:bit], C_221:bat[:oid], true:bit, "==":str);
    C_254:bat[:oid] := algebra.thetaselect(X_252:bat[:bit], C_247:bat[:oid], true:bit, "==":str);
    X_258:bat[:timestamp] := algebra.projection(C_254:bat[:oid], X_85:bat[:timestamp]);
    X_259:bat[:timestamp] := bat.replace(X_237:bat[:timestamp], C_254:bat[:oid], X_258:bat[:timestamp], true:bit);
    X_269:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2004-10-31 09:00:00.000000":timestamp, "2005-04-03 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_260:bat[:bit] := batcalc.not(X_252:bat[:bit]);
    X_261:bat[:bit] := batcalc.isnil(X_260:bat[:bit]);
    X_262:bat[:bit] := batcalc.or(X_260:bat[:bit], X_261:bat[:bit]);
    C_264:bat[:oid] := algebra.thetaselect(X_262:bat[:bit], C_247:bat[:oid], true:bit, "==":str);
    C_273:bat[:oid] := algebra.thetaselect(X_269:bat[:bit], C_264:bat[:oid], true:bit, "==":str);
    X_279:bat[:timestamp] := algebra.projection(C_273:bat[:oid], X_61:bat[:timestamp]);
    X_280:bat[:timestamp] := bat.replace(X_259:bat[:timestamp], C_273:bat[:oid], X_279:bat[:timestamp], true:bit);
    X_295:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2005-04-03 10:00:00.000000":timestamp, "2005-10-30 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_282:bat[:bit] := batcalc.not(X_269:bat[:bit]);
    X_285:bat[:bit] := batcalc.isnil(X_282:bat[:bit]);
    X_287:bat[:bit] := batcalc.or(X_282:bat[:bit], X_285:bat[:bit]);
    C_290:bat[:oid] := algebra.thetaselect(X_287:bat[:bit], C_264:bat[:oid], true:bit, "==":str);
    C_297:bat[:oid] := algebra.thetaselect(X_295:bat[:bit], C_290:bat[:oid], true:bit, "==":str);
    X_301:bat[:timestamp] := algebra.projection(C_297:bat[:oid], X_85:bat[:timestamp]);
    X_302:bat[:timestamp] := bat.replace(X_280:bat[:timestamp], C_297:bat[:oid], X_301:bat[:timestamp], true:bit);
    X_312:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2005-10-30 09:00:00.000000":timestamp, "2006-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_303:bat[:bit] := batcalc.not(X_295:bat[:bit]);
    X_304:bat[:bit] := batcalc.isnil(X_303:bat[:bit]);
    X_305:bat[:bit] := batcalc.or(X_303:bat[:bit], X_304:bat[:bit]);
    C_307:bat[:oid] := algebra.thetaselect(X_305:bat[:bit], C_290:bat[:oid], true:bit, "==":str);
    C_316:bat[:oid] := algebra.thetaselect(X_312:bat[:bit], C_307:bat[:oid], true:bit, "==":str);
    X_322:bat[:timestamp] := algebra.projection(C_316:bat[:oid], X_61:bat[:timestamp]);
    X_323:bat[:timestamp] := bat.replace(X_302:bat[:timestamp], C_316:bat[:oid], X_322:bat[:timestamp], true:bit);
    X_337:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2006-04-02 10:00:00.000000":timestamp, "2006-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_324:bat[:bit] := batcalc.not(X_312:bat[:bit]);
    X_327:bat[:bit] := batcalc.isnil(X_324:bat[:bit]);
    X_329:bat[:bit] := batcalc.or(X_324:bat[:bit], X_327:bat[:bit]);
    C_332:bat[:oid] := algebra.thetaselect(X_329:bat[:bit], C_307:bat[:oid], true:bit, "==":str);
    C_339:bat[:oid] := algebra.thetaselect(X_337:bat[:bit], C_332:bat[:oid], true:bit, "==":str);
    X_343:bat[:timestamp] := algebra.projection(C_339:bat[:oid], X_85:bat[:timestamp]);
    X_344:bat[:timestamp] := bat.replace(X_323:bat[:timestamp], C_339:bat[:oid], X_343:bat[:timestamp], true:bit);
    X_355:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2006-10-29 09:00:00.000000":timestamp, "2007-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_345:bat[:bit] := batcalc.not(X_337:bat[:bit]);
    X_346:bat[:bit] := batcalc.isnil(X_345:bat[:bit]);
    X_347:bat[:bit] := batcalc.or(X_345:bat[:bit], X_346:bat[:bit]);
    C_350:bat[:oid] := algebra.thetaselect(X_347:bat[:bit], C_332:bat[:oid], true:bit, "==":str);
    C_359:bat[:oid] := algebra.thetaselect(X_355:bat[:bit], C_350:bat[:oid], true:bit, "==":str);
    X_365:bat[:timestamp] := algebra.projection(C_359:bat[:oid], X_61:bat[:timestamp]);
    X_366:bat[:timestamp] := bat.replace(X_344:bat[:timestamp], C_359:bat[:oid], X_365:bat[:timestamp], true:bit);
    X_380:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2007-03-11 10:00:00.000000":timestamp, "2007-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_367:bat[:bit] := batcalc.not(X_355:bat[:bit]);
    X_370:bat[:bit] := batcalc.isnil(X_367:bat[:bit]);
    X_372:bat[:bit] := batcalc.or(X_367:bat[:bit], X_370:bat[:bit]);
    C_375:bat[:oid] := algebra.thetaselect(X_372:bat[:bit], C_350:bat[:oid], true:bit, "==":str);
    C_383:bat[:oid] := algebra.thetaselect(X_380:bat[:bit], C_375:bat[:oid], true:bit, "==":str);
    X_387:bat[:timestamp] := algebra.projection(C_383:bat[:oid], X_85:bat[:timestamp]);
    X_388:bat[:timestamp] := bat.replace(X_366:bat[:timestamp], C_383:bat[:oid], X_387:bat[:timestamp], true:bit);
    X_398:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2007-11-04 09:00:00.000000":timestamp, "2008-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_389:bat[:bit] := batcalc.not(X_380:bat[:bit]);
    X_390:bat[:bit] := batcalc.isnil(X_389:bat[:bit]);
    X_391:bat[:bit] := batcalc.or(X_389:bat[:bit], X_390:bat[:bit]);
    C_393:bat[:oid] := algebra.thetaselect(X_391:bat[:bit], C_375:bat[:oid], true:bit, "==":str);
    C_402:bat[:oid] := algebra.thetaselect(X_398:bat[:bit], C_393:bat[:oid], true:bit, "==":str);
    X_408:bat[:timestamp] := algebra.projection(C_402:bat[:oid], X_61:bat[:timestamp]);
    X_409:bat[:timestamp] := bat.replace(X_388:bat[:timestamp], C_402:bat[:oid], X_408:bat[:timestamp], true:bit);
    X_424:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2008-03-09 10:00:00.000000":timestamp, "2008-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_410:bat[:bit] := batcalc.not(X_398:bat[:bit]);
    X_413:bat[:bit] := batcalc.isnil(X_410:bat[:bit]);
    X_415:bat[:bit] := batcalc.or(X_410:bat[:bit], X_413:bat[:bit]);
    C_419:bat[:oid] := algebra.thetaselect(X_415:bat[:bit], C_393:bat[:oid], true:bit, "==":str);
    C_426:bat[:oid] := algebra.thetaselect(X_424:bat[:bit], C_419:bat[:oid], true:bit, "==":str);
    X_430:bat[:timestamp] := algebra.projection(C_426:bat[:oid], X_85:bat[:timestamp]);
    X_431:bat[:timestamp] := bat.replace(X_409:bat[:timestamp], C_426:bat[:oid], X_430:bat[:timestamp], true:bit);
    X_441:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2008-11-02 09:00:00.000000":timestamp, "2009-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_432:bat[:bit] := batcalc.not(X_424:bat[:bit]);
    X_433:bat[:bit] := batcalc.isnil(X_432:bat[:bit]);
    X_434:bat[:bit] := batcalc.or(X_432:bat[:bit], X_433:bat[:bit]);
    C_436:bat[:oid] := algebra.thetaselect(X_434:bat[:bit], C_419:bat[:oid], true:bit, "==":str);
    C_445:bat[:oid] := algebra.thetaselect(X_441:bat[:bit], C_436:bat[:oid], true:bit, "==":str);
    X_451:bat[:timestamp] := algebra.projection(C_445:bat[:oid], X_61:bat[:timestamp]);
    X_452:bat[:timestamp] := bat.replace(X_431:bat[:timestamp], C_445:bat[:oid], X_451:bat[:timestamp], true:bit);
    X_467:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2009-03-08 10:00:00.000000":timestamp, "2009-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_454:bat[:bit] := batcalc.not(X_441:bat[:bit]);
    X_457:bat[:bit] := batcalc.isnil(X_454:bat[:bit]);
    X_459:bat[:bit] := batcalc.or(X_454:bat[:bit], X_457:bat[:bit]);
    C_462:bat[:oid] := algebra.thetaselect(X_459:bat[:bit], C_436:bat[:oid], true:bit, "==":str);
    C_469:bat[:oid] := algebra.thetaselect(X_467:bat[:bit], C_462:bat[:oid], true:bit, "==":str);
    X_473:bat[:timestamp] := algebra.projection(C_469:bat[:oid], X_85:bat[:timestamp]);
    X_474:bat[:timestamp] := bat.replace(X_452:bat[:timestamp], C_469:bat[:oid], X_473:bat[:timestamp], true:bit);
    X_484:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2009-11-01 09:00:00.000000":timestamp, "2010-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_475:bat[:bit] := batcalc.not(X_467:bat[:bit]);
    X_476:bat[:bit] := batcalc.isnil(X_475:bat[:bit]);
    X_477:bat[:bit] := batcalc.or(X_475:bat[:bit], X_476:bat[:bit]);
    C_479:bat[:oid] := algebra.thetaselect(X_477:bat[:bit], C_462:bat[:oid], true:bit, "==":str);
    C_488:bat[:oid] := algebra.thetaselect(X_484:bat[:bit], C_479:bat[:oid], true:bit, "==":str);
    X_494:bat[:timestamp] := algebra.projection(C_488:bat[:oid], X_61:bat[:timestamp]);
    X_495:bat[:timestamp] := bat.replace(X_474:bat[:timestamp], C_488:bat[:oid], X_494:bat[:timestamp], true:bit);
    X_509:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2010-03-14 10:00:00.000000":timestamp, "2010-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_496:bat[:bit] := batcalc.not(X_484:bat[:bit]);
    X_499:bat[:bit] := batcalc.isnil(X_496:bat[:bit]);
    X_501:bat[:bit] := batcalc.or(X_496:bat[:bit], X_499:bat[:bit]);
    C_504:bat[:oid] := algebra.thetaselect(X_501:bat[:bit], C_479:bat[:oid], true:bit, "==":str);
    C_511:bat[:oid] := algebra.thetaselect(X_509:bat[:bit], C_504:bat[:oid], true:bit, "==":str);
    X_515:bat[:timestamp] := algebra.projection(C_511:bat[:oid], X_85:bat[:timestamp]);
    X_516:bat[:timestamp] := bat.replace(X_495:bat[:timestamp], C_511:bat[:oid], X_515:bat[:timestamp], true:bit);
    X_527:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2010-11-07 09:00:00.000000":timestamp, "2011-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_517:bat[:bit] := batcalc.not(X_509:bat[:bit]);
    X_518:bat[:bit] := batcalc.isnil(X_517:bat[:bit]);
    X_519:bat[:bit] := batcalc.or(X_517:bat[:bit], X_518:bat[:bit]);
    C_522:bat[:oid] := algebra.thetaselect(X_519:bat[:bit], C_504:bat[:oid], true:bit, "==":str);
    C_531:bat[:oid] := algebra.thetaselect(X_527:bat[:bit], C_522:bat[:oid], true:bit, "==":str);
    X_537:bat[:timestamp] := algebra.projection(C_531:bat[:oid], X_61:bat[:timestamp]);
    X_538:bat[:timestamp] := bat.replace(X_516:bat[:timestamp], C_531:bat[:oid], X_537:bat[:timestamp], true:bit);
    X_552:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2011-03-13 10:00:00.000000":timestamp, "2011-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_539:bat[:bit] := batcalc.not(X_527:bat[:bit]);
    X_542:bat[:bit] := batcalc.isnil(X_539:bat[:bit]);
    X_544:bat[:bit] := batcalc.or(X_539:bat[:bit], X_542:bat[:bit]);
    C_547:bat[:oid] := algebra.thetaselect(X_544:bat[:bit], C_522:bat[:oid], true:bit, "==":str);
    C_555:bat[:oid] := algebra.thetaselect(X_552:bat[:bit], C_547:bat[:oid], true:bit, "==":str);
    X_559:bat[:timestamp] := algebra.projection(C_555:bat[:oid], X_85:bat[:timestamp]);
    X_560:bat[:timestamp] := bat.replace(X_538:bat[:timestamp], C_555:bat[:oid], X_559:bat[:timestamp], true:bit);
    X_570:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2011-11-06 09:00:00.000000":timestamp, "2012-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_561:bat[:bit] := batcalc.not(X_552:bat[:bit]);
    X_562:bat[:bit] := batcalc.isnil(X_561:bat[:bit]);
    X_563:bat[:bit] := batcalc.or(X_561:bat[:bit], X_562:bat[:bit]);
    C_565:bat[:oid] := algebra.thetaselect(X_563:bat[:bit], C_547:bat[:oid], true:bit, "==":str);
    C_574:bat[:oid] := algebra.thetaselect(X_570:bat[:bit], C_565:bat[:oid], true:bit, "==":str);
    X_580:bat[:timestamp] := algebra.projection(C_574:bat[:oid], X_61:bat[:timestamp]);
    X_581:bat[:timestamp] := bat.replace(X_560:bat[:timestamp], C_574:bat[:oid], X_580:bat[:timestamp], true:bit);
    X_596:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2012-03-11 10:00:00.000000":timestamp, "2012-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_582:bat[:bit] := batcalc.not(X_570:bat[:bit]);
    X_585:bat[:bit] := batcalc.isnil(X_582:bat[:bit]);
    X_587:bat[:bit] := batcalc.or(X_582:bat[:bit], X_585:bat[:bit]);
    C_591:bat[:oid] := algebra.thetaselect(X_587:bat[:bit], C_565:bat[:oid], true:bit, "==":str);
    C_598:bat[:oid] := algebra.thetaselect(X_596:bat[:bit], C_591:bat[:oid], true:bit, "==":str);
    X_602:bat[:timestamp] := algebra.projection(C_598:bat[:oid], X_85:bat[:timestamp]);
    X_603:bat[:timestamp] := bat.replace(X_581:bat[:timestamp], C_598:bat[:oid], X_602:bat[:timestamp], true:bit);
    X_613:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2012-11-04 09:00:00.000000":timestamp, "2013-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_604:bat[:bit] := batcalc.not(X_596:bat[:bit]);
    X_605:bat[:bit] := batcalc.isnil(X_604:bat[:bit]);
    X_606:bat[:bit] := batcalc.or(X_604:bat[:bit], X_605:bat[:bit]);
    C_608:bat[:oid] := algebra.thetaselect(X_606:bat[:bit], C_591:bat[:oid], true:bit, "==":str);
    C_617:bat[:oid] := algebra.thetaselect(X_613:bat[:bit], C_608:bat[:oid], true:bit, "==":str);
    X_623:bat[:timestamp] := algebra.projection(C_617:bat[:oid], X_61:bat[:timestamp]);
    X_624:bat[:timestamp] := bat.replace(X_603:bat[:timestamp], C_617:bat[:oid], X_623:bat[:timestamp], true:bit);
    X_639:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2013-03-10 10:00:00.000000":timestamp, "2013-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_626:bat[:bit] := batcalc.not(X_613:bat[:bit]);
    X_629:bat[:bit] := batcalc.isnil(X_626:bat[:bit]);
    X_631:bat[:bit] := batcalc.or(X_626:bat[:bit], X_629:bat[:bit]);
    C_634:bat[:oid] := algebra.thetaselect(X_631:bat[:bit], C_608:bat[:oid], true:bit, "==":str);
    C_641:bat[:oid] := algebra.thetaselect(X_639:bat[:bit], C_634:bat[:oid], true:bit, "==":str);
    X_645:bat[:timestamp] := algebra.projection(C_641:bat[:oid], X_85:bat[:timestamp]);
    X_646:bat[:timestamp] := bat.replace(X_624:bat[:timestamp], C_641:bat[:oid], X_645:bat[:timestamp], true:bit);
    X_656:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2013-11-03 09:00:00.000000":timestamp, "2014-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_647:bat[:bit] := batcalc.not(X_639:bat[:bit]);
    X_648:bat[:bit] := batcalc.isnil(X_647:bat[:bit]);
    X_649:bat[:bit] := batcalc.or(X_647:bat[:bit], X_648:bat[:bit]);
    C_651:bat[:oid] := algebra.thetaselect(X_649:bat[:bit], C_634:bat[:oid], true:bit, "==":str);
    C_660:bat[:oid] := algebra.thetaselect(X_656:bat[:bit], C_651:bat[:oid], true:bit, "==":str);
    X_666:bat[:timestamp] := algebra.projection(C_660:bat[:oid], X_61:bat[:timestamp]);
    X_667:bat[:timestamp] := bat.replace(X_646:bat[:timestamp], C_660:bat[:oid], X_666:bat[:timestamp], true:bit);
    X_681:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2014-03-09 10:00:00.000000":timestamp, "2014-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_668:bat[:bit] := batcalc.not(X_656:bat[:bit]);
    X_671:bat[:bit] := batcalc.isnil(X_668:bat[:bit]);
    X_673:bat[:bit] := batcalc.or(X_668:bat[:bit], X_671:bat[:bit]);
    C_676:bat[:oid] := algebra.thetaselect(X_673:bat[:bit], C_651:bat[:oid], true:bit, "==":str);
    C_683:bat[:oid] := algebra.thetaselect(X_681:bat[:bit], C_676:bat[:oid], true:bit, "==":str);
    X_687:bat[:timestamp] := algebra.projection(C_683:bat[:oid], X_85:bat[:timestamp]);
    X_688:bat[:timestamp] := bat.replace(X_667:bat[:timestamp], C_683:bat[:oid], X_687:bat[:timestamp], true:bit);
    X_699:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2014-11-02 09:00:00.000000":timestamp, "2015-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_689:bat[:bit] := batcalc.not(X_681:bat[:bit]);
    X_690:bat[:bit] := batcalc.isnil(X_689:bat[:bit]);
    X_691:bat[:bit] := batcalc.or(X_689:bat[:bit], X_690:bat[:bit]);
    C_694:bat[:oid] := algebra.thetaselect(X_691:bat[:bit], C_676:bat[:oid], true:bit, "==":str);
    C_703:bat[:oid] := algebra.thetaselect(X_699:bat[:bit], C_694:bat[:oid], true:bit, "==":str);
    X_709:bat[:timestamp] := algebra.projection(C_703:bat[:oid], X_61:bat[:timestamp]);
    X_710:bat[:timestamp] := bat.replace(X_688:bat[:timestamp], C_703:bat[:oid], X_709:bat[:timestamp], true:bit);
    X_724:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2015-03-08 10:00:00.000000":timestamp, "2015-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_711:bat[:bit] := batcalc.not(X_699:bat[:bit]);
    X_714:bat[:bit] := batcalc.isnil(X_711:bat[:bit]);
    X_716:bat[:bit] := batcalc.or(X_711:bat[:bit], X_714:bat[:bit]);
    C_719:bat[:oid] := algebra.thetaselect(X_716:bat[:bit], C_694:bat[:oid], true:bit, "==":str);
    C_727:bat[:oid] := algebra.thetaselect(X_724:bat[:bit], C_719:bat[:oid], true:bit, "==":str);
    X_731:bat[:timestamp] := algebra.projection(C_727:bat[:oid], X_85:bat[:timestamp]);
    X_732:bat[:timestamp] := bat.replace(X_710:bat[:timestamp], C_727:bat[:oid], X_731:bat[:timestamp], true:bit);
    X_742:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2015-11-01 09:00:00.000000":timestamp, "2016-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_733:bat[:bit] := batcalc.not(X_724:bat[:bit]);
    X_734:bat[:bit] := batcalc.isnil(X_733:bat[:bit]);
    X_735:bat[:bit] := batcalc.or(X_733:bat[:bit], X_734:bat[:bit]);
    C_737:bat[:oid] := algebra.thetaselect(X_735:bat[:bit], C_719:bat[:oid], true:bit, "==":str);
    C_746:bat[:oid] := algebra.thetaselect(X_742:bat[:bit], C_737:bat[:oid], true:bit, "==":str);
    X_752:bat[:timestamp] := algebra.projection(C_746:bat[:oid], X_61:bat[:timestamp]);
    X_753:bat[:timestamp] := bat.replace(X_732:bat[:timestamp], C_746:bat[:oid], X_752:bat[:timestamp], true:bit);
    X_768:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2016-03-13 10:00:00.000000":timestamp, "2016-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_754:bat[:bit] := batcalc.not(X_742:bat[:bit]);
    X_757:bat[:bit] := batcalc.isnil(X_754:bat[:bit]);
    X_759:bat[:bit] := batcalc.or(X_754:bat[:bit], X_757:bat[:bit]);
    C_763:bat[:oid] := algebra.thetaselect(X_759:bat[:bit], C_737:bat[:oid], true:bit, "==":str);
    C_770:bat[:oid] := algebra.thetaselect(X_768:bat[:bit], C_763:bat[:oid], true:bit, "==":str);
    X_774:bat[:timestamp] := algebra.projection(C_770:bat[:oid], X_85:bat[:timestamp]);
    X_775:bat[:timestamp] := bat.replace(X_753:bat[:timestamp], C_770:bat[:oid], X_774:bat[:timestamp], true:bit);
    X_785:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2016-11-06 09:00:00.000000":timestamp, "2017-03-12 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_776:bat[:bit] := batcalc.not(X_768:bat[:bit]);
    X_777:bat[:bit] := batcalc.isnil(X_776:bat[:bit]);
    X_778:bat[:bit] := batcalc.or(X_776:bat[:bit], X_777:bat[:bit]);
    C_780:bat[:oid] := algebra.thetaselect(X_778:bat[:bit], C_763:bat[:oid], true:bit, "==":str);
    C_789:bat[:oid] := algebra.thetaselect(X_785:bat[:bit], C_780:bat[:oid], true:bit, "==":str);
    X_795:bat[:timestamp] := algebra.projection(C_789:bat[:oid], X_61:bat[:timestamp]);
    X_796:bat[:timestamp] := bat.replace(X_775:bat[:timestamp], C_789:bat[:oid], X_795:bat[:timestamp], true:bit);
    X_811:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2017-03-12 10:00:00.000000":timestamp, "2017-11-05 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_798:bat[:bit] := batcalc.not(X_785:bat[:bit]);
    X_801:bat[:bit] := batcalc.isnil(X_798:bat[:bit]);
    X_803:bat[:bit] := batcalc.or(X_798:bat[:bit], X_801:bat[:bit]);
    C_806:bat[:oid] := algebra.thetaselect(X_803:bat[:bit], C_780:bat[:oid], true:bit, "==":str);
    C_813:bat[:oid] := algebra.thetaselect(X_811:bat[:bit], C_806:bat[:oid], true:bit, "==":str);
    X_817:bat[:timestamp] := algebra.projection(C_813:bat[:oid], X_85:bat[:timestamp]);
    X_818:bat[:timestamp] := bat.replace(X_796:bat[:timestamp], C_813:bat[:oid], X_817:bat[:timestamp], true:bit);
    X_828:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2017-11-05 09:00:00.000000":timestamp, "2018-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_819:bat[:bit] := batcalc.not(X_811:bat[:bit]);
    X_820:bat[:bit] := batcalc.isnil(X_819:bat[:bit]);
    X_821:bat[:bit] := batcalc.or(X_819:bat[:bit], X_820:bat[:bit]);
    C_823:bat[:oid] := algebra.thetaselect(X_821:bat[:bit], C_806:bat[:oid], true:bit, "==":str);
    C_832:bat[:oid] := algebra.thetaselect(X_828:bat[:bit], C_823:bat[:oid], true:bit, "==":str);
    X_838:bat[:timestamp] := algebra.projection(C_832:bat[:oid], X_61:bat[:timestamp]);
    X_839:bat[:timestamp] := bat.replace(X_818:bat[:timestamp], C_832:bat[:oid], X_838:bat[:timestamp], true:bit);
    X_853:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2018-03-11 10:00:00.000000":timestamp, "2018-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_840:bat[:bit] := batcalc.not(X_828:bat[:bit]);
    X_843:bat[:bit] := batcalc.isnil(X_840:bat[:bit]);
    X_845:bat[:bit] := batcalc.or(X_840:bat[:bit], X_843:bat[:bit]);
    C_848:bat[:oid] := algebra.thetaselect(X_845:bat[:bit], C_823:bat[:oid], true:bit, "==":str);
    C_855:bat[:oid] := algebra.thetaselect(X_853:bat[:bit], C_848:bat[:oid], true:bit, "==":str);
    X_859:bat[:timestamp] := algebra.projection(C_855:bat[:oid], X_85:bat[:timestamp]);
    X_860:bat[:timestamp] := bat.replace(X_839:bat[:timestamp], C_855:bat[:oid], X_859:bat[:timestamp], true:bit);
    X_871:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2018-11-04 09:00:00.000000":timestamp, "2019-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_861:bat[:bit] := batcalc.not(X_853:bat[:bit]);
    X_862:bat[:bit] := batcalc.isnil(X_861:bat[:bit]);
    X_863:bat[:bit] := batcalc.or(X_861:bat[:bit], X_862:bat[:bit]);
    C_866:bat[:oid] := algebra.thetaselect(X_863:bat[:bit], C_848:bat[:oid], true:bit, "==":str);
    C_875:bat[:oid] := algebra.thetaselect(X_871:bat[:bit], C_866:bat[:oid], true:bit, "==":str);
    X_881:bat[:timestamp] := algebra.projection(C_875:bat[:oid], X_61:bat[:timestamp]);
    X_882:bat[:timestamp] := bat.replace(X_860:bat[:timestamp], C_875:bat[:oid], X_881:bat[:timestamp], true:bit);
    X_896:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2019-03-10 10:00:00.000000":timestamp, "2019-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_883:bat[:bit] := batcalc.not(X_871:bat[:bit]);
    X_886:bat[:bit] := batcalc.isnil(X_883:bat[:bit]);
    X_888:bat[:bit] := batcalc.or(X_883:bat[:bit], X_886:bat[:bit]);
    C_891:bat[:oid] := algebra.thetaselect(X_888:bat[:bit], C_866:bat[:oid], true:bit, "==":str);
    C_899:bat[:oid] := algebra.thetaselect(X_896:bat[:bit], C_891:bat[:oid], true:bit, "==":str);
    X_903:bat[:timestamp] := algebra.projection(C_899:bat[:oid], X_85:bat[:timestamp]);
    X_904:bat[:timestamp] := bat.replace(X_882:bat[:timestamp], C_899:bat[:oid], X_903:bat[:timestamp], true:bit);
    X_914:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2019-11-03 09:00:00.000000":timestamp, "2020-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_905:bat[:bit] := batcalc.not(X_896:bat[:bit]);
    X_906:bat[:bit] := batcalc.isnil(X_905:bat[:bit]);
    X_907:bat[:bit] := batcalc.or(X_905:bat[:bit], X_906:bat[:bit]);
    C_909:bat[:oid] := algebra.thetaselect(X_907:bat[:bit], C_891:bat[:oid], true:bit, "==":str);
    C_918:bat[:oid] := algebra.thetaselect(X_914:bat[:bit], C_909:bat[:oid], true:bit, "==":str);
    X_924:bat[:timestamp] := algebra.projection(C_918:bat[:oid], X_61:bat[:timestamp]);
    X_925:bat[:timestamp] := bat.replace(X_904:bat[:timestamp], C_918:bat[:oid], X_924:bat[:timestamp], true:bit);
    X_940:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2020-03-08 10:00:00.000000":timestamp, "2020-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_926:bat[:bit] := batcalc.not(X_914:bat[:bit]);
    X_929:bat[:bit] := batcalc.isnil(X_926:bat[:bit]);
    X_931:bat[:bit] := batcalc.or(X_926:bat[:bit], X_929:bat[:bit]);
    C_935:bat[:oid] := algebra.thetaselect(X_931:bat[:bit], C_909:bat[:oid], true:bit, "==":str);
    C_942:bat[:oid] := algebra.thetaselect(X_940:bat[:bit], C_935:bat[:oid], true:bit, "==":str);
    X_946:bat[:timestamp] := algebra.projection(C_942:bat[:oid], X_85:bat[:timestamp]);
    X_947:bat[:timestamp] := bat.replace(X_925:bat[:timestamp], C_942:bat[:oid], X_946:bat[:timestamp], true:bit);
    X_957:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2020-11-01 09:00:00.000000":timestamp, "2021-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_948:bat[:bit] := batcalc.not(X_940:bat[:bit]);
    X_949:bat[:bit] := batcalc.isnil(X_948:bat[:bit]);
    X_950:bat[:bit] := batcalc.or(X_948:bat[:bit], X_949:bat[:bit]);
    C_952:bat[:oid] := algebra.thetaselect(X_950:bat[:bit], C_935:bat[:oid], true:bit, "==":str);
    C_961:bat[:oid] := algebra.thetaselect(X_957:bat[:bit], C_952:bat[:oid], true:bit, "==":str);
    X_967:bat[:timestamp] := algebra.projection(C_961:bat[:oid], X_61:bat[:timestamp]);
    X_968:bat[:timestamp] := bat.replace(X_947:bat[:timestamp], C_961:bat[:oid], X_967:bat[:timestamp], true:bit);
    X_983:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2021-03-14 10:00:00.000000":timestamp, "2021-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_970:bat[:bit] := batcalc.not(X_957:bat[:bit]);
    X_973:bat[:bit] := batcalc.isnil(X_970:bat[:bit]);
    X_975:bat[:bit] := batcalc.or(X_970:bat[:bit], X_973:bat[:bit]);
    C_978:bat[:oid] := algebra.thetaselect(X_975:bat[:bit], C_952:bat[:oid], true:bit, "==":str);
    C_985:bat[:oid] := algebra.thetaselect(X_983:bat[:bit], C_978:bat[:oid], true:bit, "==":str);
    X_989:bat[:timestamp] := algebra.projection(C_985:bat[:oid], X_85:bat[:timestamp]);
    X_990:bat[:timestamp] := bat.replace(X_968:bat[:timestamp], C_985:bat[:oid], X_989:bat[:timestamp], true:bit);
    X_1000:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2021-11-07 09:00:00.000000":timestamp, "2022-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_991:bat[:bit] := batcalc.not(X_983:bat[:bit]);
    X_992:bat[:bit] := batcalc.isnil(X_991:bat[:bit]);
    X_993:bat[:bit] := batcalc.or(X_991:bat[:bit], X_992:bat[:bit]);
    C_995:bat[:oid] := algebra.thetaselect(X_993:bat[:bit], C_978:bat[:oid], true:bit, "==":str);
    C_1004:bat[:oid] := algebra.thetaselect(X_1000:bat[:bit], C_995:bat[:oid], true:bit, "==":str);
    X_1010:bat[:timestamp] := algebra.projection(C_1004:bat[:oid], X_61:bat[:timestamp]);
    X_1011:bat[:timestamp] := bat.replace(X_990:bat[:timestamp], C_1004:bat[:oid], X_1010:bat[:timestamp], true:bit);
    X_1025:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2022-03-13 10:00:00.000000":timestamp, "2022-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1012:bat[:bit] := batcalc.not(X_1000:bat[:bit]);
    X_1015:bat[:bit] := batcalc.isnil(X_1012:bat[:bit]);
    X_1017:bat[:bit] := batcalc.or(X_1012:bat[:bit], X_1015:bat[:bit]);
    C_1020:bat[:oid] := algebra.thetaselect(X_1017:bat[:bit], C_995:bat[:oid], true:bit, "==":str);
    C_1027:bat[:oid] := algebra.thetaselect(X_1025:bat[:bit], C_1020:bat[:oid], true:bit, "==":str);
    X_1031:bat[:timestamp] := algebra.projection(C_1027:bat[:oid], X_85:bat[:timestamp]);
    X_1032:bat[:timestamp] := bat.replace(X_1011:bat[:timestamp], C_1027:bat[:oid], X_1031:bat[:timestamp], true:bit);
    X_1033:bat[:bit] := batcalc.not(X_1025:bat[:bit]);
    X_1034:bat[:bit] := batcalc.isnil(X_1033:bat[:bit]);
    X_1035:bat[:bit] := batcalc.or(X_1033:bat[:bit], X_1034:bat[:bit]);
    C_1038:bat[:oid] := algebra.thetaselect(X_1035:bat[:bit], C_1020:bat[:oid], true:bit, "==":str);
    X_1044:bat[:timestamp] := algebra.projection(C_1038:bat[:oid], X_61:bat[:timestamp]);
    X_1045:bat[:timestamp] := bat.replace(X_1032:bat[:timestamp], C_1038:bat[:oid], X_1044:bat[:timestamp], true:bit);
    X_1055:bat[:str] := bat.pack(".":str);
    X_1056:bat[:str] := bat.pack("yearref":str);
    X_1057:bat[:str] := bat.pack("clob":str);
    X_1058:bat[:int] := bat.pack(0:int);
    X_1046:bat[:timestamp] := batcalc.timestamp(X_1045:bat[:timestamp], 7:int);
    X_1052:bat[:str] := batmtime.timestamp_to_str(X_1046:bat[:timestamp], "%Y":str);
    language.pass(C_58:bat[:oid]);
    language.pass(X_51:bat[:bit]);
    language.pass(X_66:bat[:bit]);
    language.pass(C_82:bat[:oid]);
    language.pass(X_80:bat[:bit]);
    language.pass(X_88:bat[:bit]);
    language.pass(C_75:bat[:oid]);
    language.pass(C_101:bat[:oid]);
    language.pass(X_97:bat[:bit]);
    language.pass(X_110:bat[:bit]);
    language.pass(C_92:bat[:oid]);
    language.pass(C_125:bat[:oid]);
    language.pass(X_123:bat[:bit]);
    language.pass(X_131:bat[:bit]);
    language.pass(C_118:bat[:oid]);
    language.pass(C_144:bat[:oid]);
    language.pass(X_140:bat[:bit]);
    language.pass(X_152:bat[:bit]);
    language.pass(C_135:bat[:oid]);
    language.pass(C_167:bat[:oid]);
    language.pass(X_165:bat[:bit]);
    language.pass(X_173:bat[:bit]);
    language.pass(C_160:bat[:oid]);
    language.pass(C_187:bat[:oid]);
    language.pass(X_183:bat[:bit]);
    language.pass(X_195:bat[:bit]);
    language.pass(C_178:bat[:oid]);
    language.pass(C_211:bat[:oid]);
    language.pass(X_208:bat[:bit]);
    language.pass(X_217:bat[:bit]);
    language.pass(C_203:bat[:oid]);
    language.pass(C_230:bat[:oid]);
    language.pass(X_226:bat[:bit]);
    language.pass(X_238:bat[:bit]);
    language.pass(C_221:bat[:oid]);
    language.pass(C_254:bat[:oid]);
    language.pass(X_252:bat[:bit]);
    language.pass(X_260:bat[:bit]);
    language.pass(C_247:bat[:oid]);
    language.pass(C_273:bat[:oid]);
    language.pass(X_269:bat[:bit]);
    language.pass(X_282:bat[:bit]);
    language.pass(C_264:bat[:oid]);
    language.pass(C_297:bat[:oid]);
    language.pass(X_295:bat[:bit]);
    language.pass(X_303:bat[:bit]);
    language.pass(C_290:bat[:oid]);
    language.pass(C_316:bat[:oid]);
    language.pass(X_312:bat[:bit]);
    language.pass(X_324:bat[:bit]);
    language.pass(C_307:bat[:oid]);
    language.pass(C_339:bat[:oid]);
    language.pass(X_337:bat[:bit]);
    language.pass(X_345:bat[:bit]);
    language.pass(C_332:bat[:oid]);
    language.pass(C_359:bat[:oid]);
    language.pass(X_355:bat[:bit]);
    language.pass(X_367:bat[:bit]);
    language.pass(C_350:bat[:oid]);
    language.pass(C_383:bat[:oid]);
    language.pass(X_380:bat[:bit]);
    language.pass(X_389:bat[:bit]);
    language.pass(C_375:bat[:oid]);
    language.pass(C_402:bat[:oid]);
    language.pass(X_398:bat[:bit]);
    language.pass(X_410:bat[:bit]);
    language.pass(C_393:bat[:oid]);
    language.pass(C_426:bat[:oid]);
    language.pass(X_424:bat[:bit]);
    language.pass(X_432:bat[:bit]);
    language.pass(C_419:bat[:oid]);
    language.pass(C_445:bat[:oid]);
    language.pass(X_441:bat[:bit]);
    language.pass(X_454:bat[:bit]);
    language.pass(C_436:bat[:oid]);
    language.pass(C_469:bat[:oid]);
    language.pass(X_467:bat[:bit]);
    language.pass(X_475:bat[:bit]);
    language.pass(C_462:bat[:oid]);
    language.pass(C_488:bat[:oid]);
    language.pass(X_484:bat[:bit]);
    language.pass(X_496:bat[:bit]);
    language.pass(C_479:bat[:oid]);
    language.pass(C_511:bat[:oid]);
    language.pass(X_509:bat[:bit]);
    language.pass(X_517:bat[:bit]);
    language.pass(C_504:bat[:oid]);
    language.pass(C_531:bat[:oid]);
    language.pass(X_527:bat[:bit]);
    language.pass(X_539:bat[:bit]);
    language.pass(C_522:bat[:oid]);
    language.pass(C_555:bat[:oid]);
    language.pass(X_552:bat[:bit]);
    language.pass(X_561:bat[:bit]);
    language.pass(C_547:bat[:oid]);
    language.pass(C_574:bat[:oid]);
    language.pass(X_570:bat[:bit]);
    language.pass(X_582:bat[:bit]);
    language.pass(C_565:bat[:oid]);
    language.pass(C_598:bat[:oid]);
    language.pass(X_596:bat[:bit]);
    language.pass(X_604:bat[:bit]);
    language.pass(C_591:bat[:oid]);
    language.pass(C_617:bat[:oid]);
    language.pass(X_613:bat[:bit]);
    language.pass(X_626:bat[:bit]);
    language.pass(C_608:bat[:oid]);
    language.pass(C_641:bat[:oid]);
    language.pass(X_639:bat[:bit]);
    language.pass(X_647:bat[:bit]);
    language.pass(C_634:bat[:oid]);
    language.pass(C_660:bat[:oid]);
    language.pass(X_656:bat[:bit]);
    language.pass(X_668:bat[:bit]);
    language.pass(C_651:bat[:oid]);
    language.pass(C_683:bat[:oid]);
    language.pass(X_681:bat[:bit]);
    language.pass(X_689:bat[:bit]);
    language.pass(C_676:bat[:oid]);
    language.pass(C_703:bat[:oid]);
    language.pass(X_699:bat[:bit]);
    language.pass(X_711:bat[:bit]);
    language.pass(C_694:bat[:oid]);
    language.pass(C_727:bat[:oid]);
    language.pass(X_724:bat[:bit]);
    language.pass(X_733:bat[:bit]);
    language.pass(C_719:bat[:oid]);
    language.pass(C_746:bat[:oid]);
    language.pass(X_742:bat[:bit]);
    language.pass(X_754:bat[:bit]);
    language.pass(C_737:bat[:oid]);
    language.pass(C_770:bat[:oid]);
    language.pass(X_768:bat[:bit]);
    language.pass(X_776:bat[:bit]);
    language.pass(C_763:bat[:oid]);
    language.pass(C_789:bat[:oid]);
    language.pass(X_785:bat[:bit]);
    language.pass(X_798:bat[:bit]);
    language.pass(C_780:bat[:oid]);
    language.pass(C_813:bat[:oid]);
    language.pass(X_811:bat[:bit]);
    language.pass(X_819:bat[:bit]);
    language.pass(C_806:bat[:oid]);
    language.pass(C_832:bat[:oid]);
    language.pass(X_828:bat[:bit]);
    language.pass(X_840:bat[:bit]);
    language.pass(C_823:bat[:oid]);
    language.pass(C_855:bat[:oid]);
    language.pass(X_853:bat[:bit]);
    language.pass(X_861:bat[:bit]);
    language.pass(C_848:bat[:oid]);
    language.pass(C_875:bat[:oid]);
    language.pass(X_871:bat[:bit]);
    language.pass(X_883:bat[:bit]);
    language.pass(C_866:bat[:oid]);
    language.pass(C_899:bat[:oid]);
    language.pass(X_896:bat[:bit]);
    language.pass(X_905:bat[:bit]);
    language.pass(C_891:bat[:oid]);
    language.pass(C_918:bat[:oid]);
    language.pass(X_914:bat[:bit]);
    language.pass(X_926:bat[:bit]);
    language.pass(C_909:bat[:oid]);
    language.pass(C_942:bat[:oid]);
    language.pass(X_940:bat[:bit]);
    language.pass(X_948:bat[:bit]);
    language.pass(C_935:bat[:oid]);
    language.pass(C_961:bat[:oid]);
    language.pass(X_957:bat[:bit]);
    language.pass(X_970:bat[:bit]);
    language.pass(C_952:bat[:oid]);
    language.pass(C_985:bat[:oid]);
    language.pass(X_983:bat[:bit]);
    language.pass(X_991:bat[:bit]);
    language.pass(C_978:bat[:oid]);
    language.pass(C_1004:bat[:oid]);
    language.pass(X_45:bat[:timestamp]);
    language.pass(X_1000:bat[:bit]);
    language.pass(X_1012:bat[:bit]);
    language.pass(C_995:bat[:oid]);
    language.pass(X_85:bat[:timestamp]);
    language.pass(C_1027:bat[:oid]);
    language.pass(X_1025:bat[:bit]);
    language.pass(X_1033:bat[:bit]);
    language.pass(C_1020:bat[:oid]);
    language.pass(X_61:bat[:timestamp]);
    language.pass(C_1038:bat[:oid]);
exit X_1210:bit;
    sql.resultSet(X_1055:bat[:str], X_1056:bat[:str], X_1057:bat[:str], X_1058:bat[:int], X_1058:bat[:int], X_1052:bat[:str]);
end user.main;
# optimizer.mitosis()
#inline               actions= 0 time=37 usec 
#remap                actions=322 time=444 usec 
#costmodel            actions= 1 time=8 usec 
#coercion             actions= 0 time=9 usec 
#aliases              actions=142 time=54 usec 
#evaluate             actions=92 time=244 usec 
#emptybind            actions= 9 time=45 usec 
#pushselect           actions= 0 time=40 usec 
#aliases              actions=96 time=74 usec 
#mergetable           actions= 0 time=379 usec 
#deadcode             actions=241 time=60 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions=317 time=93 usec 
#commonTerms          actions=91 time=187 usec 
#projectionpath       actions= 0 time=10 usec 
#deadcode             actions=91 time=39 usec 
#reorder              actions= 1 time=76 usec 
#matpack              actions= 0 time=1 usec 
#dataflow             actions= 1 time=109 usec 
#multiplex            actions= 3 time=28 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=3 usec 
#deadcode             actions= 0 time=33 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=144 usec 
#total                actions=29 time=2531 usec 

# 14:08:13 >  
# 14:08:13 >  "Done."
# 14:08:13 >  

