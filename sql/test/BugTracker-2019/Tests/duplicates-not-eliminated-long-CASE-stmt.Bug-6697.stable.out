stdout of test 'duplicates-not-eliminated-long-CASE-stmt.Bug-6697` in directory 'sql/test/BugTracker-2019` itself:


# 14:08:13 >  
# 14:08:13 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33481" "--set" "mapi_usock=/var/tmp/mtest-8696/.s.monetdb.33481" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 14:08:13 >  

# MonetDB 5 server v11.34.0 (hg id: 29627d20d2e0)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:33481/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8696/.s.monetdb.33481
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 14:08:13 >  
# 14:08:13 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8696" "--port=33481"
# 14:08:13 >  

#CREATE TABLE IF NOT EXISTS "task" (
#"sys_class_name" VARCHAR(80),
#"priority" BIGINT,
#"sys_created_on" TIMESTAMP
#);
#explain SELECT  sys.timestamp_to_str(case when task0."sys_created_on" >= '1999-10-31 09:00:00' and task0."sys_created_on" < '2000-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2000-04-02 10:00:00' and task0."sys_created_on" < '2000-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2000-10-29 09:00:00' and task0."sys_created_on" < '2001-04-01 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2001-04-01 10:00:00' and task0."sys_created_on" < '2001-10-28 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2001-10-28 09:00:00' and task0."sys_created_on" < '2002-04-07 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2002-04-07 10:00:00' and task0."sys_created_on" < '2002-10-27 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2002-10-27 09:00:00' and task0."sys_created_on" < '2003-04-06 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2003-04-06 10:00:00' and task0."sys_created_on" < '2003-10-26 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2003-10-26 09:00:00' and task0."sys_created_on" < '2004-04-04 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2004-04-04 10:00:00' and task0."sys_created_on" < '2004-10-31 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2004-10-31 09:00:00' and task0."sys_created_on" < '2005-04-03 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2005-04-03 10:00:00' and task0."sys_created_on" < '2005-10-30 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2005-10-30 09:00:00' and task0."sys_created_on" < '2006-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2006-04-02 10:00:00' and task0."sys_created_on" < '2006-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2006-10-29 09:00:00' and task0."sys_created_on" < '2007-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2007-03-11 10:00:00' and task0."sys_created_on" < '2007-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2007-11-04 09:00:00' and task0."sys_created_on" < '2008-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2008-03-09 10:00:00' and task0."sys_created_on" < '2008-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2008-11-02 09:00:00' and task0."sys_created_on" < '2009-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2009-03-08 10:00:00' and task0."sys_created_on" < '2009-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2009-11-01 09:00:00' and task0."sys_created_on" < '2010-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2010-03-14 10:00:00' and task0."sys_created_on" < '2010-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2010-11-07 09:00:00' and task0."sys_created_on" < '2011-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2011-03-13 10:00:00' and task0."sys_created_on" < '2011-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2011-11-06 09:00:00' and task0."sys_created_on" < '2012-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2012-03-11 10:00:00' and task0."sys_created_on" < '2012-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2012-11-04 09:00:00' and task0."sys_created_on" < '2013-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2013-03-10 10:00:00' and task0."sys_created_on" < '2013-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2013-11-03 09:00:00' and task0."sys_created_on" < '2014-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2014-03-09 10:00:00' and task0."sys_created_on" < '2014-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2014-11-02 09:00:00' and task0."sys_created_on" < '2015-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2015-03-08 10:00:00' and task0."sys_created_on" < '2015-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2015-11-01 09:00:00' and task0."sys_created_on" < '2016-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2016-03-13 10:00:00' and task0."sys_created_on" < '2016-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2016-11-06 09:00:00' and task0."sys_created_on" < '2017-03-12 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2017-03-12 10:00:00' and task0."sys_created_on" < '2017-11-05 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2017-11-05 09:00:00' and task0."sys_created_on" < '2018-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2018-03-11 10:00:00' and task0."sys_created_on" < '2018-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2018-11-04 09:00:00' and task0."sys_created_on" < '2019-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2019-03-10 10:00:00' and task0."sys_created_on" < '2019-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2019-11-03 09:00:00' and task0."sys_created_on" < '2020-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2020-03-08 10:00:00' and task0."sys_created_on" < '2020-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2020-11-01 09:00:00' and task0."sys_created_on" < '2021-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2021-03-14 10:00:00' and task0."sys_created_on" < '2021-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2021-11-07 09:00:00' and task0."sys_created_on" < '2022-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2022-03-13 10:00:00' and task0."sys_created_on" < '2022-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second else task0."sys_created_on" + interval '-28800' second end,'%Y') AS yearref FROM task task0 WHERE task0."sys_class_name" = 'incident' AND task0."priority" IS NOT NULL ;
% .explain # table_name
% mal # name
% clob # type
% 1023 # length
function user.main():void;
    X_1:void := querylog.define("explain select sys.timestamp_to_str(case when task0.\"sys_created_on\" >= \\'1999-10-31 09:00:00\\' and task0.\"sys_created_on\" < \\'2000-04-02 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2000-04-02 10:00:00\\' and task0.\"sys_created_on\" < \\'2000-10-29 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2000-10-29 09:00:00\\' and task0.\"sys_created_on\" < \\'2001-04-01 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2001-04-01 10:00:00\\' and task0.\"sys_created_on\" < \\'2001-10-28 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2001-10-28 09:00:00\\' and task0.\"sys_created_on\" < \\'2002-04-07 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2002-04-07 10:00:00\\' and t
barrier X_1241:bit := language.dataflow();
    X_38:bat[:str] := bat.new(nil:str);
    X_51:bat[:timestamp] := algebra.project(X_38:bat[:str], nil:timestamp);
    X_40:bat[:timestamp] := bat.new(nil:timestamp);
    X_46:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "1999-10-31 09:00:00.000000":timestamp, "2000-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    C_53:bat[:oid] := algebra.thetaselect(X_46:bat[:bit], true:bit, "==":str);
    X_56:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -28800000:lng);
    X_59:bat[:timestamp] := algebra.projection(C_53:bat[:oid], X_56:bat[:timestamp]);
    X_60:bat[:timestamp] := bat.replace(X_51:bat[:timestamp], C_53:bat[:oid], X_59:bat[:timestamp], true:bit);
    X_61:bat[:bit] := batcalc.not(X_46:bat[:bit]);
    X_64:bat[:bit] := batcalc.isnil(X_61:bat[:bit]);
    X_66:bat[:bit] := batcalc.or(X_61:bat[:bit], X_64:bat[:bit]);
    X_71:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2000-04-02 10:00:00.000000":timestamp, "2000-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_73:bat[:bit] := batcalc.and(X_66:bat[:bit], X_71:bat[:bit]);
    C_76:bat[:oid] := algebra.thetaselect(X_73:bat[:bit], true:bit, "==":str);
    X_80:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_40:bat[:timestamp], -25200000:lng);
    X_81:bat[:timestamp] := algebra.projection(C_76:bat[:oid], X_80:bat[:timestamp]);
    X_82:bat[:timestamp] := bat.replace(X_60:bat[:timestamp], C_76:bat[:oid], X_81:bat[:timestamp], true:bit);
    X_83:bat[:bit] := batcalc.not(X_71:bat[:bit]);
    X_84:bat[:bit] := batcalc.isnil(X_83:bat[:bit]);
    X_85:bat[:bit] := batcalc.or(X_83:bat[:bit], X_84:bat[:bit]);
    X_86:bat[:bit] := batcalc.and(X_66:bat[:bit], X_85:bat[:bit]);
    X_91:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2000-10-29 09:00:00.000000":timestamp, "2001-04-01 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_94:bat[:bit] := batcalc.and(X_86:bat[:bit], X_91:bat[:bit]);
    C_97:bat[:oid] := algebra.thetaselect(X_94:bat[:bit], true:bit, "==":str);
    X_103:bat[:timestamp] := algebra.projection(C_97:bat[:oid], X_56:bat[:timestamp]);
    X_104:bat[:timestamp] := bat.replace(X_82:bat[:timestamp], C_97:bat[:oid], X_103:bat[:timestamp], true:bit);
    X_106:bat[:bit] := batcalc.not(X_91:bat[:bit]);
    X_108:bat[:bit] := batcalc.isnil(X_106:bat[:bit]);
    X_110:bat[:bit] := batcalc.or(X_106:bat[:bit], X_108:bat[:bit]);
    X_112:bat[:bit] := batcalc.and(X_86:bat[:bit], X_110:bat[:bit]);
    X_117:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2001-04-01 10:00:00.000000":timestamp, "2001-10-28 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_118:bat[:bit] := batcalc.and(X_112:bat[:bit], X_117:bat[:bit]);
    C_120:bat[:oid] := algebra.thetaselect(X_118:bat[:bit], true:bit, "==":str);
    X_125:bat[:timestamp] := algebra.projection(C_120:bat[:oid], X_80:bat[:timestamp]);
    X_126:bat[:timestamp] := bat.replace(X_104:bat[:timestamp], C_120:bat[:oid], X_125:bat[:timestamp], true:bit);
    X_127:bat[:bit] := batcalc.not(X_117:bat[:bit]);
    X_129:bat[:bit] := batcalc.isnil(X_127:bat[:bit]);
    X_130:bat[:bit] := batcalc.or(X_127:bat[:bit], X_129:bat[:bit]);
    X_131:bat[:bit] := batcalc.and(X_112:bat[:bit], X_130:bat[:bit]);
    X_136:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2001-10-28 09:00:00.000000":timestamp, "2002-04-07 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_139:bat[:bit] := batcalc.and(X_131:bat[:bit], X_136:bat[:bit]);
    C_141:bat[:oid] := algebra.thetaselect(X_139:bat[:bit], true:bit, "==":str);
    X_147:bat[:timestamp] := algebra.projection(C_141:bat[:oid], X_56:bat[:timestamp]);
    X_148:bat[:timestamp] := bat.replace(X_126:bat[:timestamp], C_141:bat[:oid], X_147:bat[:timestamp], true:bit);
    X_149:bat[:bit] := batcalc.not(X_136:bat[:bit]);
    X_151:bat[:bit] := batcalc.isnil(X_149:bat[:bit]);
    X_153:bat[:bit] := batcalc.or(X_149:bat[:bit], X_151:bat[:bit]);
    X_155:bat[:bit] := batcalc.and(X_131:bat[:bit], X_153:bat[:bit]);
    X_160:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2002-04-07 10:00:00.000000":timestamp, "2002-10-27 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_161:bat[:bit] := batcalc.and(X_155:bat[:bit], X_160:bat[:bit]);
    C_164:bat[:oid] := algebra.thetaselect(X_161:bat[:bit], true:bit, "==":str);
    X_169:bat[:timestamp] := algebra.projection(C_164:bat[:oid], X_80:bat[:timestamp]);
    X_170:bat[:timestamp] := bat.replace(X_148:bat[:timestamp], C_164:bat[:oid], X_169:bat[:timestamp], true:bit);
    X_172:bat[:bit] := batcalc.not(X_160:bat[:bit]);
    X_173:bat[:bit] := batcalc.isnil(X_172:bat[:bit]);
    X_174:bat[:bit] := batcalc.or(X_172:bat[:bit], X_173:bat[:bit]);
    X_175:bat[:bit] := batcalc.and(X_155:bat[:bit], X_174:bat[:bit]);
    X_180:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2002-10-27 09:00:00.000000":timestamp, "2003-04-06 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_183:bat[:bit] := batcalc.and(X_175:bat[:bit], X_180:bat[:bit]);
    C_185:bat[:oid] := algebra.thetaselect(X_183:bat[:bit], true:bit, "==":str);
    X_191:bat[:timestamp] := algebra.projection(C_185:bat[:oid], X_56:bat[:timestamp]);
    X_192:bat[:timestamp] := bat.replace(X_170:bat[:timestamp], C_185:bat[:oid], X_191:bat[:timestamp], true:bit);
    X_193:bat[:bit] := batcalc.not(X_180:bat[:bit]);
    X_195:bat[:bit] := batcalc.isnil(X_193:bat[:bit]);
    X_198:bat[:bit] := batcalc.or(X_193:bat[:bit], X_195:bat[:bit]);
    X_200:bat[:bit] := batcalc.and(X_175:bat[:bit], X_198:bat[:bit]);
    X_205:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2003-04-06 10:00:00.000000":timestamp, "2003-10-26 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_207:bat[:bit] := batcalc.and(X_200:bat[:bit], X_205:bat[:bit]);
    C_209:bat[:oid] := algebra.thetaselect(X_207:bat[:bit], true:bit, "==":str);
    X_214:bat[:timestamp] := algebra.projection(C_209:bat[:oid], X_80:bat[:timestamp]);
    X_215:bat[:timestamp] := bat.replace(X_192:bat[:timestamp], C_209:bat[:oid], X_214:bat[:timestamp], true:bit);
    X_216:bat[:bit] := batcalc.not(X_205:bat[:bit]);
    X_217:bat[:bit] := batcalc.isnil(X_216:bat[:bit]);
    X_218:bat[:bit] := batcalc.or(X_216:bat[:bit], X_217:bat[:bit]);
    X_219:bat[:bit] := batcalc.and(X_200:bat[:bit], X_218:bat[:bit]);
    X_224:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2003-10-26 09:00:00.000000":timestamp, "2004-04-04 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_227:bat[:bit] := batcalc.and(X_219:bat[:bit], X_224:bat[:bit]);
    C_229:bat[:oid] := algebra.thetaselect(X_227:bat[:bit], true:bit, "==":str);
    X_235:bat[:timestamp] := algebra.projection(C_229:bat[:oid], X_56:bat[:timestamp]);
    X_236:bat[:timestamp] := bat.replace(X_215:bat[:timestamp], C_229:bat[:oid], X_235:bat[:timestamp], true:bit);
    X_237:bat[:bit] := batcalc.not(X_224:bat[:bit]);
    X_240:bat[:bit] := batcalc.isnil(X_237:bat[:bit]);
    X_242:bat[:bit] := batcalc.or(X_237:bat[:bit], X_240:bat[:bit]);
    X_244:bat[:bit] := batcalc.and(X_219:bat[:bit], X_242:bat[:bit]);
    X_249:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2004-04-04 10:00:00.000000":timestamp, "2004-10-31 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_251:bat[:bit] := batcalc.and(X_244:bat[:bit], X_249:bat[:bit]);
    C_253:bat[:oid] := algebra.thetaselect(X_251:bat[:bit], true:bit, "==":str);
    X_258:bat[:timestamp] := algebra.projection(C_253:bat[:oid], X_80:bat[:timestamp]);
    X_259:bat[:timestamp] := bat.replace(X_236:bat[:timestamp], C_253:bat[:oid], X_258:bat[:timestamp], true:bit);
    X_260:bat[:bit] := batcalc.not(X_249:bat[:bit]);
    X_261:bat[:bit] := batcalc.isnil(X_260:bat[:bit]);
    X_262:bat[:bit] := batcalc.or(X_260:bat[:bit], X_261:bat[:bit]);
    X_263:bat[:bit] := batcalc.and(X_244:bat[:bit], X_262:bat[:bit]);
    X_268:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2004-10-31 09:00:00.000000":timestamp, "2005-04-03 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_271:bat[:bit] := batcalc.and(X_263:bat[:bit], X_268:bat[:bit]);
    C_274:bat[:oid] := algebra.thetaselect(X_271:bat[:bit], true:bit, "==":str);
    X_280:bat[:timestamp] := algebra.projection(C_274:bat[:oid], X_56:bat[:timestamp]);
    X_281:bat[:timestamp] := bat.replace(X_259:bat[:timestamp], C_274:bat[:oid], X_280:bat[:timestamp], true:bit);
    X_282:bat[:bit] := batcalc.not(X_268:bat[:bit]);
    X_284:bat[:bit] := batcalc.isnil(X_282:bat[:bit]);
    X_286:bat[:bit] := batcalc.or(X_282:bat[:bit], X_284:bat[:bit]);
    X_288:bat[:bit] := batcalc.and(X_263:bat[:bit], X_286:bat[:bit]);
    X_293:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2005-04-03 10:00:00.000000":timestamp, "2005-10-30 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_295:bat[:bit] := batcalc.and(X_288:bat[:bit], X_293:bat[:bit]);
    C_297:bat[:oid] := algebra.thetaselect(X_295:bat[:bit], true:bit, "==":str);
    X_302:bat[:timestamp] := algebra.projection(C_297:bat[:oid], X_80:bat[:timestamp]);
    X_303:bat[:timestamp] := bat.replace(X_281:bat[:timestamp], C_297:bat[:oid], X_302:bat[:timestamp], true:bit);
    X_304:bat[:bit] := batcalc.not(X_293:bat[:bit]);
    X_306:bat[:bit] := batcalc.isnil(X_304:bat[:bit]);
    X_307:bat[:bit] := batcalc.or(X_304:bat[:bit], X_306:bat[:bit]);
    X_308:bat[:bit] := batcalc.and(X_288:bat[:bit], X_307:bat[:bit]);
    X_313:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2005-10-30 09:00:00.000000":timestamp, "2006-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_316:bat[:bit] := batcalc.and(X_308:bat[:bit], X_313:bat[:bit]);
    C_318:bat[:oid] := algebra.thetaselect(X_316:bat[:bit], true:bit, "==":str);
    X_324:bat[:timestamp] := algebra.projection(C_318:bat[:oid], X_56:bat[:timestamp]);
    X_325:bat[:timestamp] := bat.replace(X_303:bat[:timestamp], C_318:bat[:oid], X_324:bat[:timestamp], true:bit);
    X_326:bat[:bit] := batcalc.not(X_313:bat[:bit]);
    X_328:bat[:bit] := batcalc.isnil(X_326:bat[:bit]);
    X_330:bat[:bit] := batcalc.or(X_326:bat[:bit], X_328:bat[:bit]);
    X_332:bat[:bit] := batcalc.and(X_308:bat[:bit], X_330:bat[:bit]);
    X_337:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2006-04-02 10:00:00.000000":timestamp, "2006-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_339:bat[:bit] := batcalc.and(X_332:bat[:bit], X_337:bat[:bit]);
    C_342:bat[:oid] := algebra.thetaselect(X_339:bat[:bit], true:bit, "==":str);
    X_347:bat[:timestamp] := algebra.projection(C_342:bat[:oid], X_80:bat[:timestamp]);
    X_348:bat[:timestamp] := bat.replace(X_325:bat[:timestamp], C_342:bat[:oid], X_347:bat[:timestamp], true:bit);
    X_349:bat[:bit] := batcalc.not(X_337:bat[:bit]);
    X_350:bat[:bit] := batcalc.isnil(X_349:bat[:bit]);
    X_351:bat[:bit] := batcalc.or(X_349:bat[:bit], X_350:bat[:bit]);
    X_352:bat[:bit] := batcalc.and(X_332:bat[:bit], X_351:bat[:bit]);
    X_357:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2006-10-29 09:00:00.000000":timestamp, "2007-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_360:bat[:bit] := batcalc.and(X_352:bat[:bit], X_357:bat[:bit]);
    C_362:bat[:oid] := algebra.thetaselect(X_360:bat[:bit], true:bit, "==":str);
    X_368:bat[:timestamp] := algebra.projection(C_362:bat[:oid], X_56:bat[:timestamp]);
    X_369:bat[:timestamp] := bat.replace(X_348:bat[:timestamp], C_362:bat[:oid], X_368:bat[:timestamp], true:bit);
    X_370:bat[:bit] := batcalc.not(X_357:bat[:bit]);
    X_372:bat[:bit] := batcalc.isnil(X_370:bat[:bit]);
    X_375:bat[:bit] := batcalc.or(X_370:bat[:bit], X_372:bat[:bit]);
    X_377:bat[:bit] := batcalc.and(X_352:bat[:bit], X_375:bat[:bit]);
    X_382:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2007-03-11 10:00:00.000000":timestamp, "2007-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_384:bat[:bit] := batcalc.and(X_377:bat[:bit], X_382:bat[:bit]);
    C_386:bat[:oid] := algebra.thetaselect(X_384:bat[:bit], true:bit, "==":str);
    X_391:bat[:timestamp] := algebra.projection(C_386:bat[:oid], X_80:bat[:timestamp]);
    X_392:bat[:timestamp] := bat.replace(X_369:bat[:timestamp], C_386:bat[:oid], X_391:bat[:timestamp], true:bit);
    X_393:bat[:bit] := batcalc.not(X_382:bat[:bit]);
    X_394:bat[:bit] := batcalc.isnil(X_393:bat[:bit]);
    X_395:bat[:bit] := batcalc.or(X_393:bat[:bit], X_394:bat[:bit]);
    X_396:bat[:bit] := batcalc.and(X_377:bat[:bit], X_395:bat[:bit]);
    X_401:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2007-11-04 09:00:00.000000":timestamp, "2008-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_404:bat[:bit] := batcalc.and(X_396:bat[:bit], X_401:bat[:bit]);
    C_406:bat[:oid] := algebra.thetaselect(X_404:bat[:bit], true:bit, "==":str);
    X_412:bat[:timestamp] := algebra.projection(C_406:bat[:oid], X_56:bat[:timestamp]);
    X_413:bat[:timestamp] := bat.replace(X_392:bat[:timestamp], C_406:bat[:oid], X_412:bat[:timestamp], true:bit);
    X_414:bat[:bit] := batcalc.not(X_401:bat[:bit]);
    X_417:bat[:bit] := batcalc.isnil(X_414:bat[:bit]);
    X_419:bat[:bit] := batcalc.or(X_414:bat[:bit], X_417:bat[:bit]);
    X_421:bat[:bit] := batcalc.and(X_396:bat[:bit], X_419:bat[:bit]);
    X_426:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2008-03-09 10:00:00.000000":timestamp, "2008-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_428:bat[:bit] := batcalc.and(X_421:bat[:bit], X_426:bat[:bit]);
    C_430:bat[:oid] := algebra.thetaselect(X_428:bat[:bit], true:bit, "==":str);
    X_435:bat[:timestamp] := algebra.projection(C_430:bat[:oid], X_80:bat[:timestamp]);
    X_436:bat[:timestamp] := bat.replace(X_413:bat[:timestamp], C_430:bat[:oid], X_435:bat[:timestamp], true:bit);
    X_437:bat[:bit] := batcalc.not(X_426:bat[:bit]);
    X_438:bat[:bit] := batcalc.isnil(X_437:bat[:bit]);
    X_439:bat[:bit] := batcalc.or(X_437:bat[:bit], X_438:bat[:bit]);
    X_440:bat[:bit] := batcalc.and(X_421:bat[:bit], X_439:bat[:bit]);
    X_445:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2008-11-02 09:00:00.000000":timestamp, "2009-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_448:bat[:bit] := batcalc.and(X_440:bat[:bit], X_445:bat[:bit]);
    C_451:bat[:oid] := algebra.thetaselect(X_448:bat[:bit], true:bit, "==":str);
    X_457:bat[:timestamp] := algebra.projection(C_451:bat[:oid], X_56:bat[:timestamp]);
    X_458:bat[:timestamp] := bat.replace(X_436:bat[:timestamp], C_451:bat[:oid], X_457:bat[:timestamp], true:bit);
    X_459:bat[:bit] := batcalc.not(X_445:bat[:bit]);
    X_461:bat[:bit] := batcalc.isnil(X_459:bat[:bit]);
    X_463:bat[:bit] := batcalc.or(X_459:bat[:bit], X_461:bat[:bit]);
    X_465:bat[:bit] := batcalc.and(X_440:bat[:bit], X_463:bat[:bit]);
    X_470:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2009-03-08 10:00:00.000000":timestamp, "2009-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_472:bat[:bit] := batcalc.and(X_465:bat[:bit], X_470:bat[:bit]);
    C_474:bat[:oid] := algebra.thetaselect(X_472:bat[:bit], true:bit, "==":str);
    X_479:bat[:timestamp] := algebra.projection(C_474:bat[:oid], X_80:bat[:timestamp]);
    X_480:bat[:timestamp] := bat.replace(X_458:bat[:timestamp], C_474:bat[:oid], X_479:bat[:timestamp], true:bit);
    X_481:bat[:bit] := batcalc.not(X_470:bat[:bit]);
    X_483:bat[:bit] := batcalc.isnil(X_481:bat[:bit]);
    X_484:bat[:bit] := batcalc.or(X_481:bat[:bit], X_483:bat[:bit]);
    X_485:bat[:bit] := batcalc.and(X_465:bat[:bit], X_484:bat[:bit]);
    X_490:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2009-11-01 09:00:00.000000":timestamp, "2010-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_493:bat[:bit] := batcalc.and(X_485:bat[:bit], X_490:bat[:bit]);
    C_495:bat[:oid] := algebra.thetaselect(X_493:bat[:bit], true:bit, "==":str);
    X_501:bat[:timestamp] := algebra.projection(C_495:bat[:oid], X_56:bat[:timestamp]);
    X_502:bat[:timestamp] := bat.replace(X_480:bat[:timestamp], C_495:bat[:oid], X_501:bat[:timestamp], true:bit);
    X_503:bat[:bit] := batcalc.not(X_490:bat[:bit]);
    X_505:bat[:bit] := batcalc.isnil(X_503:bat[:bit]);
    X_507:bat[:bit] := batcalc.or(X_503:bat[:bit], X_505:bat[:bit]);
    X_509:bat[:bit] := batcalc.and(X_485:bat[:bit], X_507:bat[:bit]);
    X_514:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2010-03-14 10:00:00.000000":timestamp, "2010-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_516:bat[:bit] := batcalc.and(X_509:bat[:bit], X_514:bat[:bit]);
    C_519:bat[:oid] := algebra.thetaselect(X_516:bat[:bit], true:bit, "==":str);
    X_524:bat[:timestamp] := algebra.projection(C_519:bat[:oid], X_80:bat[:timestamp]);
    X_525:bat[:timestamp] := bat.replace(X_502:bat[:timestamp], C_519:bat[:oid], X_524:bat[:timestamp], true:bit);
    X_526:bat[:bit] := batcalc.not(X_514:bat[:bit]);
    X_527:bat[:bit] := batcalc.isnil(X_526:bat[:bit]);
    X_528:bat[:bit] := batcalc.or(X_526:bat[:bit], X_527:bat[:bit]);
    X_529:bat[:bit] := batcalc.and(X_509:bat[:bit], X_528:bat[:bit]);
    X_534:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2010-11-07 09:00:00.000000":timestamp, "2011-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_537:bat[:bit] := batcalc.and(X_529:bat[:bit], X_534:bat[:bit]);
    C_539:bat[:oid] := algebra.thetaselect(X_537:bat[:bit], true:bit, "==":str);
    X_545:bat[:timestamp] := algebra.projection(C_539:bat[:oid], X_56:bat[:timestamp]);
    X_546:bat[:timestamp] := bat.replace(X_525:bat[:timestamp], C_539:bat[:oid], X_545:bat[:timestamp], true:bit);
    X_547:bat[:bit] := batcalc.not(X_534:bat[:bit]);
    X_549:bat[:bit] := batcalc.isnil(X_547:bat[:bit]);
    X_552:bat[:bit] := batcalc.or(X_547:bat[:bit], X_549:bat[:bit]);
    X_554:bat[:bit] := batcalc.and(X_529:bat[:bit], X_552:bat[:bit]);
    X_559:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2011-03-13 10:00:00.000000":timestamp, "2011-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_561:bat[:bit] := batcalc.and(X_554:bat[:bit], X_559:bat[:bit]);
    C_563:bat[:oid] := algebra.thetaselect(X_561:bat[:bit], true:bit, "==":str);
    X_568:bat[:timestamp] := algebra.projection(C_563:bat[:oid], X_80:bat[:timestamp]);
    X_569:bat[:timestamp] := bat.replace(X_546:bat[:timestamp], C_563:bat[:oid], X_568:bat[:timestamp], true:bit);
    X_570:bat[:bit] := batcalc.not(X_559:bat[:bit]);
    X_571:bat[:bit] := batcalc.isnil(X_570:bat[:bit]);
    X_572:bat[:bit] := batcalc.or(X_570:bat[:bit], X_571:bat[:bit]);
    X_573:bat[:bit] := batcalc.and(X_554:bat[:bit], X_572:bat[:bit]);
    X_578:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2011-11-06 09:00:00.000000":timestamp, "2012-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_581:bat[:bit] := batcalc.and(X_573:bat[:bit], X_578:bat[:bit]);
    C_583:bat[:oid] := algebra.thetaselect(X_581:bat[:bit], true:bit, "==":str);
    X_589:bat[:timestamp] := algebra.projection(C_583:bat[:oid], X_56:bat[:timestamp]);
    X_590:bat[:timestamp] := bat.replace(X_569:bat[:timestamp], C_583:bat[:oid], X_589:bat[:timestamp], true:bit);
    X_591:bat[:bit] := batcalc.not(X_578:bat[:bit]);
    X_594:bat[:bit] := batcalc.isnil(X_591:bat[:bit]);
    X_596:bat[:bit] := batcalc.or(X_591:bat[:bit], X_594:bat[:bit]);
    X_598:bat[:bit] := batcalc.and(X_573:bat[:bit], X_596:bat[:bit]);
    X_603:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2012-03-11 10:00:00.000000":timestamp, "2012-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_605:bat[:bit] := batcalc.and(X_598:bat[:bit], X_603:bat[:bit]);
    C_607:bat[:oid] := algebra.thetaselect(X_605:bat[:bit], true:bit, "==":str);
    X_612:bat[:timestamp] := algebra.projection(C_607:bat[:oid], X_80:bat[:timestamp]);
    X_613:bat[:timestamp] := bat.replace(X_590:bat[:timestamp], C_607:bat[:oid], X_612:bat[:timestamp], true:bit);
    X_614:bat[:bit] := batcalc.not(X_603:bat[:bit]);
    X_615:bat[:bit] := batcalc.isnil(X_614:bat[:bit]);
    X_616:bat[:bit] := batcalc.or(X_614:bat[:bit], X_615:bat[:bit]);
    X_617:bat[:bit] := batcalc.and(X_598:bat[:bit], X_616:bat[:bit]);
    X_622:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2012-11-04 09:00:00.000000":timestamp, "2013-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_625:bat[:bit] := batcalc.and(X_617:bat[:bit], X_622:bat[:bit]);
    C_628:bat[:oid] := algebra.thetaselect(X_625:bat[:bit], true:bit, "==":str);
    X_634:bat[:timestamp] := algebra.projection(C_628:bat[:oid], X_56:bat[:timestamp]);
    X_635:bat[:timestamp] := bat.replace(X_613:bat[:timestamp], C_628:bat[:oid], X_634:bat[:timestamp], true:bit);
    X_636:bat[:bit] := batcalc.not(X_622:bat[:bit]);
    X_638:bat[:bit] := batcalc.isnil(X_636:bat[:bit]);
    X_640:bat[:bit] := batcalc.or(X_636:bat[:bit], X_638:bat[:bit]);
    X_642:bat[:bit] := batcalc.and(X_617:bat[:bit], X_640:bat[:bit]);
    X_647:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2013-03-10 10:00:00.000000":timestamp, "2013-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_649:bat[:bit] := batcalc.and(X_642:bat[:bit], X_647:bat[:bit]);
    C_651:bat[:oid] := algebra.thetaselect(X_649:bat[:bit], true:bit, "==":str);
    X_656:bat[:timestamp] := algebra.projection(C_651:bat[:oid], X_80:bat[:timestamp]);
    X_657:bat[:timestamp] := bat.replace(X_635:bat[:timestamp], C_651:bat[:oid], X_656:bat[:timestamp], true:bit);
    X_658:bat[:bit] := batcalc.not(X_647:bat[:bit]);
    X_660:bat[:bit] := batcalc.isnil(X_658:bat[:bit]);
    X_661:bat[:bit] := batcalc.or(X_658:bat[:bit], X_660:bat[:bit]);
    X_662:bat[:bit] := batcalc.and(X_642:bat[:bit], X_661:bat[:bit]);
    X_667:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2013-11-03 09:00:00.000000":timestamp, "2014-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_670:bat[:bit] := batcalc.and(X_662:bat[:bit], X_667:bat[:bit]);
    C_672:bat[:oid] := algebra.thetaselect(X_670:bat[:bit], true:bit, "==":str);
    X_678:bat[:timestamp] := algebra.projection(C_672:bat[:oid], X_56:bat[:timestamp]);
    X_679:bat[:timestamp] := bat.replace(X_657:bat[:timestamp], C_672:bat[:oid], X_678:bat[:timestamp], true:bit);
    X_680:bat[:bit] := batcalc.not(X_667:bat[:bit]);
    X_682:bat[:bit] := batcalc.isnil(X_680:bat[:bit]);
    X_684:bat[:bit] := batcalc.or(X_680:bat[:bit], X_682:bat[:bit]);
    X_686:bat[:bit] := batcalc.and(X_662:bat[:bit], X_684:bat[:bit]);
    X_691:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2014-03-09 10:00:00.000000":timestamp, "2014-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_693:bat[:bit] := batcalc.and(X_686:bat[:bit], X_691:bat[:bit]);
    C_696:bat[:oid] := algebra.thetaselect(X_693:bat[:bit], true:bit, "==":str);
    X_701:bat[:timestamp] := algebra.projection(C_696:bat[:oid], X_80:bat[:timestamp]);
    X_702:bat[:timestamp] := bat.replace(X_679:bat[:timestamp], C_696:bat[:oid], X_701:bat[:timestamp], true:bit);
    X_703:bat[:bit] := batcalc.not(X_691:bat[:bit]);
    X_704:bat[:bit] := batcalc.isnil(X_703:bat[:bit]);
    X_705:bat[:bit] := batcalc.or(X_703:bat[:bit], X_704:bat[:bit]);
    X_706:bat[:bit] := batcalc.and(X_686:bat[:bit], X_705:bat[:bit]);
    X_711:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2014-11-02 09:00:00.000000":timestamp, "2015-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_714:bat[:bit] := batcalc.and(X_706:bat[:bit], X_711:bat[:bit]);
    C_716:bat[:oid] := algebra.thetaselect(X_714:bat[:bit], true:bit, "==":str);
    X_722:bat[:timestamp] := algebra.projection(C_716:bat[:oid], X_56:bat[:timestamp]);
    X_723:bat[:timestamp] := bat.replace(X_702:bat[:timestamp], C_716:bat[:oid], X_722:bat[:timestamp], true:bit);
    X_724:bat[:bit] := batcalc.not(X_711:bat[:bit]);
    X_726:bat[:bit] := batcalc.isnil(X_724:bat[:bit]);
    X_729:bat[:bit] := batcalc.or(X_724:bat[:bit], X_726:bat[:bit]);
    X_731:bat[:bit] := batcalc.and(X_706:bat[:bit], X_729:bat[:bit]);
    X_736:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2015-03-08 10:00:00.000000":timestamp, "2015-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_738:bat[:bit] := batcalc.and(X_731:bat[:bit], X_736:bat[:bit]);
    C_740:bat[:oid] := algebra.thetaselect(X_738:bat[:bit], true:bit, "==":str);
    X_745:bat[:timestamp] := algebra.projection(C_740:bat[:oid], X_80:bat[:timestamp]);
    X_746:bat[:timestamp] := bat.replace(X_723:bat[:timestamp], C_740:bat[:oid], X_745:bat[:timestamp], true:bit);
    X_747:bat[:bit] := batcalc.not(X_736:bat[:bit]);
    X_748:bat[:bit] := batcalc.isnil(X_747:bat[:bit]);
    X_749:bat[:bit] := batcalc.or(X_747:bat[:bit], X_748:bat[:bit]);
    X_750:bat[:bit] := batcalc.and(X_731:bat[:bit], X_749:bat[:bit]);
    X_755:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2015-11-01 09:00:00.000000":timestamp, "2016-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_758:bat[:bit] := batcalc.and(X_750:bat[:bit], X_755:bat[:bit]);
    C_760:bat[:oid] := algebra.thetaselect(X_758:bat[:bit], true:bit, "==":str);
    X_766:bat[:timestamp] := algebra.projection(C_760:bat[:oid], X_56:bat[:timestamp]);
    X_767:bat[:timestamp] := bat.replace(X_746:bat[:timestamp], C_760:bat[:oid], X_766:bat[:timestamp], true:bit);
    X_768:bat[:bit] := batcalc.not(X_755:bat[:bit]);
    X_771:bat[:bit] := batcalc.isnil(X_768:bat[:bit]);
    X_773:bat[:bit] := batcalc.or(X_768:bat[:bit], X_771:bat[:bit]);
    X_775:bat[:bit] := batcalc.and(X_750:bat[:bit], X_773:bat[:bit]);
    X_780:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2016-03-13 10:00:00.000000":timestamp, "2016-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_782:bat[:bit] := batcalc.and(X_775:bat[:bit], X_780:bat[:bit]);
    C_784:bat[:oid] := algebra.thetaselect(X_782:bat[:bit], true:bit, "==":str);
    X_789:bat[:timestamp] := algebra.projection(C_784:bat[:oid], X_80:bat[:timestamp]);
    X_790:bat[:timestamp] := bat.replace(X_767:bat[:timestamp], C_784:bat[:oid], X_789:bat[:timestamp], true:bit);
    X_791:bat[:bit] := batcalc.not(X_780:bat[:bit]);
    X_792:bat[:bit] := batcalc.isnil(X_791:bat[:bit]);
    X_793:bat[:bit] := batcalc.or(X_791:bat[:bit], X_792:bat[:bit]);
    X_794:bat[:bit] := batcalc.and(X_775:bat[:bit], X_793:bat[:bit]);
    X_799:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2016-11-06 09:00:00.000000":timestamp, "2017-03-12 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_802:bat[:bit] := batcalc.and(X_794:bat[:bit], X_799:bat[:bit]);
    C_805:bat[:oid] := algebra.thetaselect(X_802:bat[:bit], true:bit, "==":str);
    X_811:bat[:timestamp] := algebra.projection(C_805:bat[:oid], X_56:bat[:timestamp]);
    X_812:bat[:timestamp] := bat.replace(X_790:bat[:timestamp], C_805:bat[:oid], X_811:bat[:timestamp], true:bit);
    X_813:bat[:bit] := batcalc.not(X_799:bat[:bit]);
    X_815:bat[:bit] := batcalc.isnil(X_813:bat[:bit]);
    X_817:bat[:bit] := batcalc.or(X_813:bat[:bit], X_815:bat[:bit]);
    X_819:bat[:bit] := batcalc.and(X_794:bat[:bit], X_817:bat[:bit]);
    X_824:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2017-03-12 10:00:00.000000":timestamp, "2017-11-05 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_826:bat[:bit] := batcalc.and(X_819:bat[:bit], X_824:bat[:bit]);
    C_828:bat[:oid] := algebra.thetaselect(X_826:bat[:bit], true:bit, "==":str);
    X_833:bat[:timestamp] := algebra.projection(C_828:bat[:oid], X_80:bat[:timestamp]);
    X_834:bat[:timestamp] := bat.replace(X_812:bat[:timestamp], C_828:bat[:oid], X_833:bat[:timestamp], true:bit);
    X_835:bat[:bit] := batcalc.not(X_824:bat[:bit]);
    X_837:bat[:bit] := batcalc.isnil(X_835:bat[:bit]);
    X_838:bat[:bit] := batcalc.or(X_835:bat[:bit], X_837:bat[:bit]);
    X_839:bat[:bit] := batcalc.and(X_819:bat[:bit], X_838:bat[:bit]);
    X_844:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2017-11-05 09:00:00.000000":timestamp, "2018-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_847:bat[:bit] := batcalc.and(X_839:bat[:bit], X_844:bat[:bit]);
    C_849:bat[:oid] := algebra.thetaselect(X_847:bat[:bit], true:bit, "==":str);
    X_855:bat[:timestamp] := algebra.projection(C_849:bat[:oid], X_56:bat[:timestamp]);
    X_856:bat[:timestamp] := bat.replace(X_834:bat[:timestamp], C_849:bat[:oid], X_855:bat[:timestamp], true:bit);
    X_857:bat[:bit] := batcalc.not(X_844:bat[:bit]);
    X_859:bat[:bit] := batcalc.isnil(X_857:bat[:bit]);
    X_861:bat[:bit] := batcalc.or(X_857:bat[:bit], X_859:bat[:bit]);
    X_863:bat[:bit] := batcalc.and(X_839:bat[:bit], X_861:bat[:bit]);
    X_868:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2018-03-11 10:00:00.000000":timestamp, "2018-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_870:bat[:bit] := batcalc.and(X_863:bat[:bit], X_868:bat[:bit]);
    C_873:bat[:oid] := algebra.thetaselect(X_870:bat[:bit], true:bit, "==":str);
    X_878:bat[:timestamp] := algebra.projection(C_873:bat[:oid], X_80:bat[:timestamp]);
    X_879:bat[:timestamp] := bat.replace(X_856:bat[:timestamp], C_873:bat[:oid], X_878:bat[:timestamp], true:bit);
    X_880:bat[:bit] := batcalc.not(X_868:bat[:bit]);
    X_881:bat[:bit] := batcalc.isnil(X_880:bat[:bit]);
    X_882:bat[:bit] := batcalc.or(X_880:bat[:bit], X_881:bat[:bit]);
    X_883:bat[:bit] := batcalc.and(X_863:bat[:bit], X_882:bat[:bit]);
    X_888:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2018-11-04 09:00:00.000000":timestamp, "2019-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_891:bat[:bit] := batcalc.and(X_883:bat[:bit], X_888:bat[:bit]);
    C_893:bat[:oid] := algebra.thetaselect(X_891:bat[:bit], true:bit, "==":str);
    X_899:bat[:timestamp] := algebra.projection(C_893:bat[:oid], X_56:bat[:timestamp]);
    X_900:bat[:timestamp] := bat.replace(X_879:bat[:timestamp], C_893:bat[:oid], X_899:bat[:timestamp], true:bit);
    X_901:bat[:bit] := batcalc.not(X_888:bat[:bit]);
    X_903:bat[:bit] := batcalc.isnil(X_901:bat[:bit]);
    X_906:bat[:bit] := batcalc.or(X_901:bat[:bit], X_903:bat[:bit]);
    X_908:bat[:bit] := batcalc.and(X_883:bat[:bit], X_906:bat[:bit]);
    X_913:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2019-03-10 10:00:00.000000":timestamp, "2019-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_915:bat[:bit] := batcalc.and(X_908:bat[:bit], X_913:bat[:bit]);
    C_917:bat[:oid] := algebra.thetaselect(X_915:bat[:bit], true:bit, "==":str);
    X_922:bat[:timestamp] := algebra.projection(C_917:bat[:oid], X_80:bat[:timestamp]);
    X_923:bat[:timestamp] := bat.replace(X_900:bat[:timestamp], C_917:bat[:oid], X_922:bat[:timestamp], true:bit);
    X_924:bat[:bit] := batcalc.not(X_913:bat[:bit]);
    X_925:bat[:bit] := batcalc.isnil(X_924:bat[:bit]);
    X_926:bat[:bit] := batcalc.or(X_924:bat[:bit], X_925:bat[:bit]);
    X_927:bat[:bit] := batcalc.and(X_908:bat[:bit], X_926:bat[:bit]);
    X_932:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2019-11-03 09:00:00.000000":timestamp, "2020-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_935:bat[:bit] := batcalc.and(X_927:bat[:bit], X_932:bat[:bit]);
    C_937:bat[:oid] := algebra.thetaselect(X_935:bat[:bit], true:bit, "==":str);
    X_943:bat[:timestamp] := algebra.projection(C_937:bat[:oid], X_56:bat[:timestamp]);
    X_944:bat[:timestamp] := bat.replace(X_923:bat[:timestamp], C_937:bat[:oid], X_943:bat[:timestamp], true:bit);
    X_945:bat[:bit] := batcalc.not(X_932:bat[:bit]);
    X_948:bat[:bit] := batcalc.isnil(X_945:bat[:bit]);
    X_950:bat[:bit] := batcalc.or(X_945:bat[:bit], X_948:bat[:bit]);
    X_952:bat[:bit] := batcalc.and(X_927:bat[:bit], X_950:bat[:bit]);
    X_957:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2020-03-08 10:00:00.000000":timestamp, "2020-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_959:bat[:bit] := batcalc.and(X_952:bat[:bit], X_957:bat[:bit]);
    C_961:bat[:oid] := algebra.thetaselect(X_959:bat[:bit], true:bit, "==":str);
    X_966:bat[:timestamp] := algebra.projection(C_961:bat[:oid], X_80:bat[:timestamp]);
    X_967:bat[:timestamp] := bat.replace(X_944:bat[:timestamp], C_961:bat[:oid], X_966:bat[:timestamp], true:bit);
    X_968:bat[:bit] := batcalc.not(X_957:bat[:bit]);
    X_969:bat[:bit] := batcalc.isnil(X_968:bat[:bit]);
    X_970:bat[:bit] := batcalc.or(X_968:bat[:bit], X_969:bat[:bit]);
    X_971:bat[:bit] := batcalc.and(X_952:bat[:bit], X_970:bat[:bit]);
    X_976:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2020-11-01 09:00:00.000000":timestamp, "2021-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_979:bat[:bit] := batcalc.and(X_971:bat[:bit], X_976:bat[:bit]);
    C_982:bat[:oid] := algebra.thetaselect(X_979:bat[:bit], true:bit, "==":str);
    X_988:bat[:timestamp] := algebra.projection(C_982:bat[:oid], X_56:bat[:timestamp]);
    X_989:bat[:timestamp] := bat.replace(X_967:bat[:timestamp], C_982:bat[:oid], X_988:bat[:timestamp], true:bit);
    X_990:bat[:bit] := batcalc.not(X_976:bat[:bit]);
    X_992:bat[:bit] := batcalc.isnil(X_990:bat[:bit]);
    X_994:bat[:bit] := batcalc.or(X_990:bat[:bit], X_992:bat[:bit]);
    X_996:bat[:bit] := batcalc.and(X_971:bat[:bit], X_994:bat[:bit]);
    X_1001:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2021-03-14 10:00:00.000000":timestamp, "2021-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1003:bat[:bit] := batcalc.and(X_996:bat[:bit], X_1001:bat[:bit]);
    C_1005:bat[:oid] := algebra.thetaselect(X_1003:bat[:bit], true:bit, "==":str);
    X_1010:bat[:timestamp] := algebra.projection(C_1005:bat[:oid], X_80:bat[:timestamp]);
    X_1011:bat[:timestamp] := bat.replace(X_989:bat[:timestamp], C_1005:bat[:oid], X_1010:bat[:timestamp], true:bit);
    X_1012:bat[:bit] := batcalc.not(X_1001:bat[:bit]);
    X_1014:bat[:bit] := batcalc.isnil(X_1012:bat[:bit]);
    X_1015:bat[:bit] := batcalc.or(X_1012:bat[:bit], X_1014:bat[:bit]);
    X_1016:bat[:bit] := batcalc.and(X_996:bat[:bit], X_1015:bat[:bit]);
    X_1021:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2021-11-07 09:00:00.000000":timestamp, "2022-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1024:bat[:bit] := batcalc.and(X_1016:bat[:bit], X_1021:bat[:bit]);
    C_1026:bat[:oid] := algebra.thetaselect(X_1024:bat[:bit], true:bit, "==":str);
    X_1032:bat[:timestamp] := algebra.projection(C_1026:bat[:oid], X_56:bat[:timestamp]);
    X_1033:bat[:timestamp] := bat.replace(X_1011:bat[:timestamp], C_1026:bat[:oid], X_1032:bat[:timestamp], true:bit);
    X_1034:bat[:bit] := batcalc.not(X_1021:bat[:bit]);
    X_1036:bat[:bit] := batcalc.isnil(X_1034:bat[:bit]);
    X_1038:bat[:bit] := batcalc.or(X_1034:bat[:bit], X_1036:bat[:bit]);
    X_1040:bat[:bit] := batcalc.and(X_1016:bat[:bit], X_1038:bat[:bit]);
    X_1045:bat[:bit] := batcalc.between(X_40:bat[:timestamp], "2022-03-13 10:00:00.000000":timestamp, "2022-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1047:bat[:bit] := batcalc.and(X_1040:bat[:bit], X_1045:bat[:bit]);
    C_1050:bat[:oid] := algebra.thetaselect(X_1047:bat[:bit], true:bit, "==":str);
    X_1055:bat[:timestamp] := algebra.projection(C_1050:bat[:oid], X_80:bat[:timestamp]);
    X_1056:bat[:timestamp] := bat.replace(X_1033:bat[:timestamp], C_1050:bat[:oid], X_1055:bat[:timestamp], true:bit);
    X_1057:bat[:bit] := batcalc.not(X_1045:bat[:bit]);
    X_1058:bat[:bit] := batcalc.isnil(X_1057:bat[:bit]);
    X_1059:bat[:bit] := batcalc.or(X_1057:bat[:bit], X_1058:bat[:bit]);
    X_1060:bat[:bit] := batcalc.and(X_1040:bat[:bit], X_1059:bat[:bit]);
    C_1062:bat[:oid] := algebra.thetaselect(X_1060:bat[:bit], true:bit, "==":str);
    X_1068:bat[:timestamp] := algebra.projection(C_1062:bat[:oid], X_56:bat[:timestamp]);
    X_1069:bat[:timestamp] := bat.replace(X_1056:bat[:timestamp], C_1062:bat[:oid], X_1068:bat[:timestamp], true:bit);
    X_1086:bat[:str] := bat.pack(".":str);
    X_1087:bat[:str] := bat.pack("yearref":str);
    X_1088:bat[:str] := bat.pack("clob":str);
    X_1089:bat[:int] := bat.pack(0:int);
    X_1078:bat[:timestamp] := batcalc.timestamp(X_1069:bat[:timestamp], 7:int);
    X_1083:bat[:str] := batmtime.timestamp_to_str(X_1078:bat[:timestamp], "%Y":str);
    language.pass(C_53:bat[:oid]);
    language.pass(X_46:bat[:bit]);
    language.pass(X_61:bat[:bit]);
    language.pass(C_76:bat[:oid]);
    language.pass(X_71:bat[:bit]);
    language.pass(X_83:bat[:bit]);
    language.pass(X_66:bat[:bit]);
    language.pass(C_97:bat[:oid]);
    language.pass(X_91:bat[:bit]);
    language.pass(X_106:bat[:bit]);
    language.pass(X_86:bat[:bit]);
    language.pass(C_120:bat[:oid]);
    language.pass(X_117:bat[:bit]);
    language.pass(X_127:bat[:bit]);
    language.pass(X_112:bat[:bit]);
    language.pass(C_141:bat[:oid]);
    language.pass(X_136:bat[:bit]);
    language.pass(X_149:bat[:bit]);
    language.pass(X_131:bat[:bit]);
    language.pass(C_164:bat[:oid]);
    language.pass(X_160:bat[:bit]);
    language.pass(X_172:bat[:bit]);
    language.pass(X_155:bat[:bit]);
    language.pass(C_185:bat[:oid]);
    language.pass(X_180:bat[:bit]);
    language.pass(X_193:bat[:bit]);
    language.pass(X_175:bat[:bit]);
    language.pass(C_209:bat[:oid]);
    language.pass(X_205:bat[:bit]);
    language.pass(X_216:bat[:bit]);
    language.pass(X_200:bat[:bit]);
    language.pass(C_229:bat[:oid]);
    language.pass(X_224:bat[:bit]);
    language.pass(X_237:bat[:bit]);
    language.pass(X_219:bat[:bit]);
    language.pass(C_253:bat[:oid]);
    language.pass(X_249:bat[:bit]);
    language.pass(X_260:bat[:bit]);
    language.pass(X_244:bat[:bit]);
    language.pass(C_274:bat[:oid]);
    language.pass(X_268:bat[:bit]);
    language.pass(X_282:bat[:bit]);
    language.pass(X_263:bat[:bit]);
    language.pass(C_297:bat[:oid]);
    language.pass(X_293:bat[:bit]);
    language.pass(X_304:bat[:bit]);
    language.pass(X_288:bat[:bit]);
    language.pass(C_318:bat[:oid]);
    language.pass(X_313:bat[:bit]);
    language.pass(X_326:bat[:bit]);
    language.pass(X_308:bat[:bit]);
    language.pass(C_342:bat[:oid]);
    language.pass(X_337:bat[:bit]);
    language.pass(X_349:bat[:bit]);
    language.pass(X_332:bat[:bit]);
    language.pass(C_362:bat[:oid]);
    language.pass(X_357:bat[:bit]);
    language.pass(X_370:bat[:bit]);
    language.pass(X_352:bat[:bit]);
    language.pass(C_386:bat[:oid]);
    language.pass(X_382:bat[:bit]);
    language.pass(X_393:bat[:bit]);
    language.pass(X_377:bat[:bit]);
    language.pass(C_406:bat[:oid]);
    language.pass(X_401:bat[:bit]);
    language.pass(X_414:bat[:bit]);
    language.pass(X_396:bat[:bit]);
    language.pass(C_430:bat[:oid]);
    language.pass(X_426:bat[:bit]);
    language.pass(X_437:bat[:bit]);
    language.pass(X_421:bat[:bit]);
    language.pass(C_451:bat[:oid]);
    language.pass(X_445:bat[:bit]);
    language.pass(X_459:bat[:bit]);
    language.pass(X_440:bat[:bit]);
    language.pass(C_474:bat[:oid]);
    language.pass(X_470:bat[:bit]);
    language.pass(X_481:bat[:bit]);
    language.pass(X_465:bat[:bit]);
    language.pass(C_495:bat[:oid]);
    language.pass(X_490:bat[:bit]);
    language.pass(X_503:bat[:bit]);
    language.pass(X_485:bat[:bit]);
    language.pass(C_519:bat[:oid]);
    language.pass(X_514:bat[:bit]);
    language.pass(X_526:bat[:bit]);
    language.pass(X_509:bat[:bit]);
    language.pass(C_539:bat[:oid]);
    language.pass(X_534:bat[:bit]);
    language.pass(X_547:bat[:bit]);
    language.pass(X_529:bat[:bit]);
    language.pass(C_563:bat[:oid]);
    language.pass(X_559:bat[:bit]);
    language.pass(X_570:bat[:bit]);
    language.pass(X_554:bat[:bit]);
    language.pass(C_583:bat[:oid]);
    language.pass(X_578:bat[:bit]);
    language.pass(X_591:bat[:bit]);
    language.pass(X_573:bat[:bit]);
    language.pass(C_607:bat[:oid]);
    language.pass(X_603:bat[:bit]);
    language.pass(X_614:bat[:bit]);
    language.pass(X_598:bat[:bit]);
    language.pass(C_628:bat[:oid]);
    language.pass(X_622:bat[:bit]);
    language.pass(X_636:bat[:bit]);
    language.pass(X_617:bat[:bit]);
    language.pass(C_651:bat[:oid]);
    language.pass(X_647:bat[:bit]);
    language.pass(X_658:bat[:bit]);
    language.pass(X_642:bat[:bit]);
    language.pass(C_672:bat[:oid]);
    language.pass(X_667:bat[:bit]);
    language.pass(X_680:bat[:bit]);
    language.pass(X_662:bat[:bit]);
    language.pass(C_696:bat[:oid]);
    language.pass(X_691:bat[:bit]);
    language.pass(X_703:bat[:bit]);
    language.pass(X_686:bat[:bit]);
    language.pass(C_716:bat[:oid]);
    language.pass(X_711:bat[:bit]);
    language.pass(X_724:bat[:bit]);
    language.pass(X_706:bat[:bit]);
    language.pass(C_740:bat[:oid]);
    language.pass(X_736:bat[:bit]);
    language.pass(X_747:bat[:bit]);
    language.pass(X_731:bat[:bit]);
    language.pass(C_760:bat[:oid]);
    language.pass(X_755:bat[:bit]);
    language.pass(X_768:bat[:bit]);
    language.pass(X_750:bat[:bit]);
    language.pass(C_784:bat[:oid]);
    language.pass(X_780:bat[:bit]);
    language.pass(X_791:bat[:bit]);
    language.pass(X_775:bat[:bit]);
    language.pass(C_805:bat[:oid]);
    language.pass(X_799:bat[:bit]);
    language.pass(X_813:bat[:bit]);
    language.pass(X_794:bat[:bit]);
    language.pass(C_828:bat[:oid]);
    language.pass(X_824:bat[:bit]);
    language.pass(X_835:bat[:bit]);
    language.pass(X_819:bat[:bit]);
    language.pass(C_849:bat[:oid]);
    language.pass(X_844:bat[:bit]);
    language.pass(X_857:bat[:bit]);
    language.pass(X_839:bat[:bit]);
    language.pass(C_873:bat[:oid]);
    language.pass(X_868:bat[:bit]);
    language.pass(X_880:bat[:bit]);
    language.pass(X_863:bat[:bit]);
    language.pass(C_893:bat[:oid]);
    language.pass(X_888:bat[:bit]);
    language.pass(X_901:bat[:bit]);
    language.pass(X_883:bat[:bit]);
    language.pass(C_917:bat[:oid]);
    language.pass(X_913:bat[:bit]);
    language.pass(X_924:bat[:bit]);
    language.pass(X_908:bat[:bit]);
    language.pass(C_937:bat[:oid]);
    language.pass(X_932:bat[:bit]);
    language.pass(X_945:bat[:bit]);
    language.pass(X_927:bat[:bit]);
    language.pass(C_961:bat[:oid]);
    language.pass(X_957:bat[:bit]);
    language.pass(X_968:bat[:bit]);
    language.pass(X_952:bat[:bit]);
    language.pass(C_982:bat[:oid]);
    language.pass(X_976:bat[:bit]);
    language.pass(X_990:bat[:bit]);
    language.pass(X_971:bat[:bit]);
    language.pass(C_1005:bat[:oid]);
    language.pass(X_1001:bat[:bit]);
    language.pass(X_1012:bat[:bit]);
    language.pass(X_996:bat[:bit]);
    language.pass(C_1026:bat[:oid]);
    language.pass(X_1021:bat[:bit]);
    language.pass(X_1034:bat[:bit]);
    language.pass(X_1016:bat[:bit]);
    language.pass(X_40:bat[:timestamp]);
    language.pass(X_80:bat[:timestamp]);
    language.pass(C_1050:bat[:oid]);
    language.pass(X_1045:bat[:bit]);
    language.pass(X_1057:bat[:bit]);
    language.pass(X_1040:bat[:bit]);
    language.pass(X_56:bat[:timestamp]);
    language.pass(C_1062:bat[:oid]);
exit X_1241:bit;
    sql.resultSet(X_1086:bat[:str], X_1087:bat[:str], X_1088:bat[:str], X_1089:bat[:int], X_1089:bat[:int], X_1083:bat[:str]);
end user.main;
# optimizer.mitosis()
#inline               actions= 0 time=37 usec 
#remap                actions=322 time=444 usec 
#costmodel            actions= 1 time=8 usec 
#coercion             actions= 0 time=9 usec 
#aliases              actions=142 time=54 usec 
#evaluate             actions=92 time=244 usec 
#emptybind            actions= 9 time=45 usec 
#pushselect           actions= 0 time=40 usec 
#aliases              actions=96 time=74 usec 
#mergetable           actions= 0 time=379 usec 
#deadcode             actions=241 time=60 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions=317 time=93 usec 
#commonTerms          actions=91 time=187 usec 
#projectionpath       actions= 0 time=10 usec 
#deadcode             actions=91 time=39 usec 
#reorder              actions= 1 time=76 usec 
#matpack              actions= 0 time=1 usec 
#dataflow             actions= 1 time=109 usec 
#multiplex            actions= 3 time=28 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=3 usec 
#deadcode             actions= 0 time=33 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=144 usec 
#total                actions=29 time=2531 usec 

# 14:08:13 >  
# 14:08:13 >  "Done."
# 14:08:13 >  

