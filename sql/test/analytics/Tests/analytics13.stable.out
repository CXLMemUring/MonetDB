stdout of test 'analytics13` in directory 'sql/test/analytics` itself:


# 14:18:26 >  
# 14:18:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38050" "--set" "mapi_usock=/var/tmp/mtest-237518/.s.monetdb.38050" "--forcemito" "--dbpath=/home/ferreira/repositories/MonetDB-grouping-analytics/BUILD/var/MonetDB/mTests_sql_test_analytics" "--set" "embedded_c=true"
# 14:18:26 >  

# MonetDB 5 server v11.36.0 (hg id: 9e1bbd637628+5d131e2d4124+)
# This is an unreleased version
# Serving database 'mTests_sql_test_analytics', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.504 GiB available main-memory of which we use 12.635 GiB
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2019 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.localdomain:38050/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-237518/.s.monetdb.38050
# MonetDB/GIS module loaded
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 18_index.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_views.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 58_hot_snapshot.sql
# loading sql script: 60_wlcr.sql
# loading sql script: 61_wlcr.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_lidar.sql
# loading sql script: 75_shp.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql
# MonetDB/SQL module loaded

# 14:18:27 >  
# 14:18:27 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-237518" "--port=38050"
# 14:18:27 >  

#CREATE TABLE tbl_ProductSales (ColID int, Product_Category  varchar(64), Product_Name  varchar(64), TotalSales int); 
#CREATE TABLE another_T (col1 INT, col2 INT, col3 INT, col4 INT, col5 INT, col6 INT, col7 INT, col8 INT);
#INSERT INTO tbl_ProductSales VALUES (1,'Game','Mobo Game',200),(2,'Game','PKO Game',400),(3,'Fashion','Shirt',500),(4,'Fashion','Shorts',100);
[ 4	]
#INSERT INTO another_T VALUES (1,2,3,4,5,6,7,8), (11,22,33,44,55,66,77,88), (111,222,333,444,555,666,777,888), (1111,2222,3333,4444,5555,6666,7777,8888);
[ 4	]
#SELECT
#    (SELECT GROUPING(colID) FROM tbl_ProductSales)
#FROM another_T t1; --Postgresql doesn't support this one
% .%1 # table_name
% %1 # name
% tinyint # type
% 1 # length
[ 0	]
[ 0	]
[ 0	]
[ 0	]
#SELECT
#    col1 IN (SELECT ColID FROM tbl_ProductSales)
#FROM another_T
#GROUP BY ROLLUP(col1);
% .%11 # table_name
% %11 # name
% boolean # type
% 5 # length
[ true	]
[ false	]
[ false	]
[ false	]
[ NULL	]
#SELECT
#    col1 IN (SELECT ColID + col1 FROM tbl_ProductSales)
#FROM another_T
#GROUP BY ROLLUP(col1);
% .%13 # table_name
% %13 # name
% boolean # type
% 5 # length
[ false	]
[ false	]
[ false	]
[ false	]
[ NULL	]
#SELECT
#    col1 IN (SELECT SUM(ColID + col1) FROM tbl_ProductSales)
#FROM another_T
#GROUP BY ROLLUP(col1);
% .%13 # table_name
% %13 # name
% boolean # type
% 5 # length
[ false	]
[ false	]
[ false	]
[ false	]
[ NULL	]
#SELECT
#    col3 > ALL (SELECT 1 FROM tbl_ProductSales HAVING MIN(col4) > 30)
#FROM another_T
#GROUP BY ROLLUP(col3, col4);
% .%27 # table_name
% %27 # name
% boolean # type
% 5 # length
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
#SELECT
#    col1 = ALL (SELECT 1 FROM tbl_ProductSales HAVING MIN(col2) IS NULL)
#FROM another_T
#GROUP BY CUBE(col1, col2);
% .%32 # table_name
% %32 # name
% boolean # type
% 5 # length
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
[ true	]
#SELECT
#    SUM(col1) IN (SELECT DISTINCT col2 FROM another_T GROUP BY col2)
#FROM another_T
#GROUP BY CUBE(col4);
% .%12 # table_name
% %12 # name
% boolean # type
% 5 # length
[ false	]
[ false	]
[ false	]
[ false	]
[ false	]
#SELECT
#    CASE WHEN NOT col1 NOT IN (SELECT (SELECT MAX(col7)) UNION (SELECT MIN(ColID) FROM tbl_ProductSales LEFT JOIN another_T t2 ON t2.col5 = t2.col1)) THEN 1 ELSE 2 END
#FROM another_T t1
#GROUP BY col1;
% .%61 # table_name
% %61 # name
% tinyint # type
% 1 # length
[ 1	]
[ 2	]
[ 2	]
[ 2	]
#SELECT 
#    1 IN (SELECT 1 FROM tbl_ProductSales GROUP BY CUBE(t1.col1, tbl_ProductSales.ColID))
#FROM another_T t1;
% .%13 # table_name
% %13 # name
% boolean # type
% 5 # length
[ true	]
[ true	]
[ true	]
[ true	]
#SELECT
#    t1.col1 IN (SELECT ColID FROM tbl_ProductSales GROUP BY CUBE(t1.col1, tbl_ProductSales.ColID))
#FROM another_T t1
#GROUP BY CUBE(col1, col2);
% .%13 # table_name
% %13 # name
% boolean # type
% 5 # length
[ true	]
[ true	]
[ NULL	]
[ NULL	]
[ NULL	]
[ NULL	]
[ NULL	]
[ NULL	]
[ NULL	]
[ NULL	]
[ NULL	]
[ NULL	]
[ NULL	]
#SELECT
#    NOT GROUPING(t1.col6) IN (SELECT SUM(t1.col6) FROM tbl_ProductSales tp HAVING MAX(t1.col1) > MIN(tp.colID)),
#    GROUPING(t1.col6) IN (SELECT SUM(t1.col7) HAVING GROUPING(t1.col7) < SUM(t1.col4)),
#    GROUPING(t1.col6) = ALL (SELECT 1),
#    GROUPING(t1.col6) = ALL (SELECT SUM(t1.col7)),
#    SUM(t1.col6) = ALL (SELECT GROUPING(t1.col7)),
#    GROUPING(t1.col6) = ALL (SELECT GROUPING(t1.col7)),
#    GROUPING(t1.col6) = ALL (SELECT GROUPING(t1.col7) FROM tbl_ProductSales)
#FROM another_T t1
#GROUP BY CUBE(t1.col6, t1.col7);
% .%315,	.%45,	.%317,	.%320,	.%321,	.%322,	.%323 # table_name
% %315,	%45,	%317,	%320,	%321,	%322,	%323 # name
% boolean,	boolean,	boolean,	boolean,	boolean,	boolean,	boolean # type
% 5,	5,	5,	5,	5,	5,	5 # length
[ true,	false,	false,	false,	false,	true,	true	]
[ true,	false,	false,	false,	false,	true,	true	]
[ true,	false,	false,	false,	false,	true,	true	]
[ true,	false,	true,	false,	false,	false,	false	]
[ true,	false,	true,	false,	false,	false,	false	]
[ true,	false,	true,	false,	false,	false,	false	]
[ true,	false,	false,	false,	false,	false,	false	]
[ true,	false,	false,	false,	false,	false,	false	]
[ true,	false,	false,	false,	false,	false,	false	]
[ true,	false,	true,	false,	false,	true,	true	]
[ true,	false,	false,	false,	false,	true,	true	]
[ true,	false,	true,	false,	false,	false,	false	]
[ true,	false,	false,	false,	false,	false,	false	]
#SELECT
#    DISTINCT
#    NOT GROUPING(t1.col6) IN (SELECT SUM(t1.col6) FROM tbl_ProductSales tp HAVING MAX(t1.col1) > MIN(tp.colID)),
#    GROUPING(t1.col6) IN (SELECT SUM(t1.col7) HAVING GROUPING(t1.col7) < SUM(t1.col4)),
#    GROUPING(t1.col6) = ALL (SELECT 1),
#    GROUPING(t1.col6) = ALL (SELECT SUM(t1.col7)),
#    SUM(t1.col6) = ALL (SELECT GROUPING(t1.col7)),
#    GROUPING(t1.col6) = ALL (SELECT GROUPING(t1.col7)),
#    GROUPING(t1.col6) = ALL (SELECT GROUPING(t1.col7) FROM tbl_ProductSales)
#FROM another_T t1
% .%315,	.%45,	.%317,	.%320,	.%321,	.%322,	.%323 # table_name
% %315,	%45,	%317,	%320,	%321,	%322,	%323 # name
% boolean,	boolean,	boolean,	boolean,	boolean,	boolean,	boolean # type
% 5,	5,	5,	5,	5,	5,	5 # length
[ true,	false,	false,	false,	false,	true,	true	]
[ true,	false,	true,	false,	false,	false,	false	]
[ true,	false,	false,	false,	false,	false,	false	]
[ true,	false,	true,	false,	false,	true,	true	]
#SELECT
#    NOT col1 * col5 = ALL (SELECT 1 FROM tbl_ProductSales HAVING MAX(col2) > 2),
#    NOT AVG(col2) * col1 <> ANY (SELECT 20 FROM tbl_ProductSales HAVING MAX(col1) IS NULL),
#    NOT EXISTS (SELECT ColID - 12 FROM tbl_ProductSales GROUP BY ColID HAVING MAX(col1) IS NOT NULL OR MIN(col1) < MIN(col2)),
#    CAST (NOT col1 IN (SELECT col2 FROM another_T GROUP BY col2) AS INTEGER) | CAST (col2 IN (SELECT col2 FROM another_T GROUP BY col2) AS INTEGER),
#    CAST (EXISTS (SELECT MAX(col5) * MAX(col4) FROM another_T GROUP BY col5, col4) AS INTEGER) & CAST (GROUPING(col1, col5) IN (SELECT DISTINCT col2 FROM another_T GROUP BY col2) AS INTEGER)
% .%211,	.%212,	.%213,	.%214,	.%215 # table_name
% %211,	%212,	%213,	%214,	%215 # name
% boolean,	boolean,	boolean,	int,	int # type
% 5,	5,	5,	1,	1 # length
[ true,	true,	false,	1,	0	]
[ true,	true,	false,	1,	0	]
[ true,	true,	false,	1,	0	]
[ NULL,	true,	false,	NULL,	1	]
[ NULL,	true,	false,	NULL,	1	]
[ NULL,	true,	false,	NULL,	1	]
[ true,	true,	false,	NULL,	0	]
[ true,	true,	false,	NULL,	0	]
[ true,	true,	false,	NULL,	0	]
[ NULL,	true,	false,	NULL,	1	]
[ NULL,	true,	false,	NULL,	1	]
[ NULL,	true,	false,	NULL,	1	]
[ NULL,	true,	false,	1,	0	]
[ NULL,	true,	false,	1,	0	]
[ NULL,	true,	false,	1,	0	]
[ NULL,	true,	false,	NULL,	0	]
[ NULL,	true,	false,	NULL,	0	]
[ NULL,	true,	false,	NULL,	0	]
[ NULL,	true,	false,	NULL,	0	]
[ NULL,	true,	false,	NULL,	0	]
[ NULL,	true,	false,	NULL,	0	]
[ NULL,	true,	false,	NULL,	0	]
[ false,	true,	false,	1,	0	]
[ false,	true,	false,	NULL,	1	]
[ false,	true,	false,	NULL,	0	]
[ false,	true,	false,	NULL,	1	]
[ false,	true,	false,	1,	0	]
[ false,	true,	false,	NULL,	0	]
[ false,	true,	false,	NULL,	0	]
#SELECT
#    GROUPING(col1, col2, col3, col4, col5, col6, col7, col8), AVG(col1), CAST(SUM(col2) * 3 AS BIGINT), col3 + col4,
#    CAST(MAX(col5) * MIN(col6) AS BIGINT), col7, col1 IN (SELECT ColID FROM tbl_ProductSales), col2 IN (SELECT ColID + col3 FROM tbl_ProductSales)
#FROM another_T
#GROUP BY ROLLUP(col1, col2, col3, col4, col5, col6, col7, col8) --with 8 columns, a smallint is necessary for grouping's output
#ORDER BY GROUPING(col1, col2, col3, col4, col5, col6, col7, col8);
% .%1,	.%2,	.%4,	.%13,	.%7,	.another_t,	.%14,	.%15 # table_name
% %1,	%2,	%4,	%13,	%7,	col7,	%14,	%15 # name
% smallint,	double,	bigint,	bigint,	bigint,	int,	boolean,	boolean # type
% 3,	24,	4,	4,	8,	4,	5,	5 # length
[ 0,	1,	6,	7,	30,	7,	true,	false	]
[ 0,	11,	66,	77,	3630,	77,	false,	false	]
[ 0,	111,	666,	777,	369630,	777,	false,	false	]
[ 0,	1111,	6666,	7777,	37029630,	7777,	false,	false	]
[ 1,	1,	6,	7,	30,	7,	true,	false	]
[ 1,	11,	66,	77,	3630,	77,	false,	false	]
[ 1,	111,	666,	777,	369630,	777,	false,	false	]
[ 1,	1111,	6666,	7777,	37029630,	7777,	false,	false	]
[ 3,	1,	6,	7,	30,	NULL,	true,	false	]
[ 3,	11,	66,	77,	3630,	NULL,	false,	false	]
[ 3,	111,	666,	777,	369630,	NULL,	false,	false	]
[ 3,	1111,	6666,	7777,	37029630,	NULL,	false,	false	]
[ 7,	1,	6,	7,	30,	NULL,	true,	false	]
[ 7,	11,	66,	77,	3630,	NULL,	false,	false	]
[ 7,	111,	666,	777,	369630,	NULL,	false,	false	]
[ 7,	1111,	6666,	7777,	37029630,	NULL,	false,	false	]
[ 15,	1,	6,	7,	30,	NULL,	true,	false	]
[ 15,	11,	66,	77,	3630,	NULL,	false,	false	]
[ 15,	111,	666,	777,	369630,	NULL,	false,	false	]
[ 15,	1111,	6666,	7777,	37029630,	NULL,	false,	false	]
[ 31,	1,	6,	NULL,	30,	NULL,	true,	false	]
[ 31,	11,	66,	NULL,	3630,	NULL,	false,	false	]
[ 31,	111,	666,	NULL,	369630,	NULL,	false,	false	]
[ 31,	1111,	6666,	NULL,	37029630,	NULL,	false,	false	]
[ 63,	1,	6,	NULL,	30,	NULL,	true,	NULL	]
[ 63,	11,	66,	NULL,	3630,	NULL,	false,	NULL	]
[ 63,	111,	666,	NULL,	369630,	NULL,	false,	NULL	]
[ 63,	1111,	6666,	NULL,	37029630,	NULL,	false,	NULL	]
[ 127,	1,	6,	NULL,	30,	NULL,	true,	NULL	]
[ 127,	11,	66,	NULL,	3630,	NULL,	false,	NULL	]
[ 127,	111,	666,	NULL,	369630,	NULL,	false,	NULL	]
[ 127,	1111,	6666,	NULL,	37029630,	NULL,	false,	NULL	]
[ 255,	308.5,	7404,	NULL,	33330,	NULL,	NULL,	NULL	]
#DROP TABLE tbl_ProductSales;
#DROP TABLE another_T;

# 14:18:27 >  
# 14:18:27 >  "Done."
# 14:18:27 >  

