statement ok
CREATE SCHEMA foo

statement ok
SET SCHEMA foo

statement error
/* initially, no comments visible */
\dn
\dn foo
/* comment can be set */
COMMENT ON SCHEMA foo IS 'foo foo'

statement error
\dn
\dn foo
/* comment can be changed */
COMMENT ON SCHEMA foo IS 'bar bar'

statement error
\dn
\dn foo
/* comment can be deleted by setting to null */
COMMENT ON SCHEMA foo IS NULL

statement error
\dn
\dn foo
/* comment can be restored */
COMMENT ON SCHEMA foo IS 'foo bar'

statement error
\dn
\dn foo
/* comment can also be deleted by setting to '' */
COMMENT ON SCHEMA foo IS ''

statement error
\dn
\dn foo
/* leave the comment set so we can test msqldump */
COMMENT ON SCHEMA foo IS 'one final comment'

statement ok
/* finally, awkward names work as well */
CREATE SCHEMA "space separated"

statement ok
COMMENT ON SCHEMA "space separated" IS 'space separated'

statement error
\dn
\dn "space separated"
DROP SCHEMA "space separated"

statement error
/* TABLES */
\d
/* initially, no comment */
CREATE TABLE tab(i INT, j DECIMAL(4,2))

statement error
\d
/* comments show both in the table list and the description */
COMMENT ON TABLE tab IS 'table'

statement error
\d
\d tab
/* qualified tables also work */
COMMENT ON TABLE foo.tab IS 'qualified table'

statement error
\d
\d tab
/* even when referring to another schema */
SET SCHEMA sys

statement error
COMMENT ON TABLE foo.tab IS 'table'

statement ok
SET SCHEMA foo

statement error
\d
\d tab
/* views show both in the table list and in the description */
CREATE VIEW vivi AS SELECT * FROM tab

statement error
COMMENT ON VIEW vivi IS 'phew'

statement error
\dv
\d vivi
/* comment on table does not work on views and vice versa */
COMMENT ON VIEW tab IS ''

statement error
COMMENT ON TABLE vivi IS ''

statement error
\d
/* cannot comment on temporary table */
CREATE TEMPORARY TABLE tempo(LIKE foo.tab)

statement error
COMMENT ON TABLE tempo IS 'temporary'

statement error
COMMENT ON TABLE tmp.tempo IS 'temporary'

statement error
/* commenting on columns works both with and without schema. */
/* also, column comments are listed in table order, not addition order */
COMMENT ON COLUMN tab.j IS 'jj'

statement error
COMMENT ON COLUMN foo.tab.i IS 'ii'

statement error
\d tab
COMMENT ON COLUMN vivi.j IS 'vjj'

statement error
COMMENT ON COLUMN foo.vivi.i IS 'vii'

statement error
\d vivi
/* comment on index works */
CREATE INDEX idx ON tab(j,i)

statement error
COMMENT ON INDEX idx IS 'index on j'

statement error
\d tab
/* comment on sequence works */
CREATE SEQUENCE counter AS INT

statement error
\ds
COMMENT ON SEQUENCE counter IS 'counting'

statement error
\ds
\ds counter
/* comment on schema.sequence also works */
SET SCHEMA sys

statement error
COMMENT ON SEQUENCE foo.counter IS 'still counting'

statement ok
SET SCHEMA foo

statement error
\ds
/* comment on function works */
CREATE FUNCTION f() RETURNS INT BEGIN RETURN 42; END

statement error
COMMENT ON FUNCTION f() IS '0 parms'

statement ok
CREATE FUNCTION f(i INT) RETURNS INT BEGIN RETURN 43; END

statement ok
COMMENT ON FUNCTION f(INT) IS '1 parm'

statement ok
CREATE FUNCTION f(i INT, j INT) RETURNS INT BEGIN RETURN 44; END

statement ok
COMMENT ON FUNCTION f(INTEGER, INTEGER) IS '2 parms'

statement ok
/* these two are merged in \df but shown separately in \df f */
CREATE FUNCTION f(i INT, j INT, k INT) RETURNS INT BEGIN RETURN 45; END

statement ok
CREATE FUNCTION f(i INT, j INT, k INT, l INT) RETURNS INT BEGIN RETURN 45; END

statement error
CREATE PROCEDURE g() BEGIN DELETE FROM tab WHERE FALSE; END

statement error
COMMENT ON PROCEDURE g() IS 'proc'

statement error
\df
\df f
\df g
\df foo.g
COMMENT ON PROCEDURE g IS 'proc!'

statement error
\df g
COMMENT ON FUNCTION f IS 'ambiguous'

statement error
COMMENT ON SCHEMA "abc" IS 'schema abc'

statement error
COMMENT ON TABLE "abc" IS 'table abc'

statement error
COMMENT ON VIEW "abc" IS 'view abc'

statement error
COMMENT ON COLUMN "abc".abc IS 'column abc'

statement error
COMMENT ON INDEX "abc" IS 'index abc'

statement error
COMMENT ON SEQUENCE "abc" IS 'seq abc'

statement error
COMMENT ON FUNCTION "abc" IS 'function abc'

statement error
COMMENT ON PROCEDURE "abc" IS 'procedure abc'

statement error
COMMENT ON AGGREGATE "abc" IS 'aggregate abc'

statement error
COMMENT ON FILTER FUNCTION "abc" IS 'filter function abc'

statement error
COMMENT ON LOADER "abc" IS 'loader abc'

statement error
COMMENT ON TYPE "int" IS 'signed integer number 32 bits'

statement error
COMMENT ON TRIGGER "abc" IS 'trigger abc'

statement error
COMMENT ON PRIMARY KEY "abc" IS 'primary key abc'

statement error
COMMENT ON FOREIGN KEY "abc" IS 'foreign key abc'

statement error
COMMENT ON UNIQUE KEY "abc" IS 'unique key abc'

statement error
COMMENT ON KEY "abc" IS 'key abc'

statement error
COMMENT ON FUNCTION ARGUMENT abc.i IS 'function argument abc.i'

statement error
COMMENT ON PROCEDURE ARGUMENT abc.i IS 'procedure argument abc.i'

statement error
COMMENT ON DATABASE "abc" IS 'database abc'

query T rowsort
SELECT remark FROM sys.comments order by remark
----
1 parm
2 parms
space separated

statement error
DROP FUNCTION f()

statement ok
DROP FUNCTION f(INT)

statement ok
DROP FUNCTION f(INT,INT)

statement ok
DROP FUNCTION f(INT,INT,INT)

statement ok
DROP FUNCTION f(INT,INT,INT,INT)

statement error
DROP PROCEDURE g()

statement error
DROP SEQUENCE counter

statement error
DROP VIEW vivi

statement error
DROP TABLE tab

statement ok
SET SCHEMA sys

statement ok
DROP SCHEMA foo

query T rowsort
SELECT remark FROM sys.comments order by remark
----
space separated

