stdout of test 'opt_sql_append` in directory 'monetdb5/extras/mal_optimizer_template` itself:


# 22:58:57 >  
# 22:58:57 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "gdk_dbfarm=/ufs/manegold/_/Monet/HG/default/prefix/_/var/MonetDB" "--set" "mapi_open=true" "--set" "mapi_port=36275" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbname=mTests_extras_mal_optimizer_template" "--set" "mal_listing=0"
# 22:58:57 >  

# MonetDB 5 server v11.8.0
# This is an unreleased version
# Serving database 'mTests_extras_mal_optimizer_template', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.630 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:36275/
# MonetDB/GIS module loaded
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_history.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 40_geom.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql


# 16:06:52 >  
# 16:06:52 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-25090" "--port=39713"
# 16:06:52 >  

#create table ttt (a int, b int, c int);
#select optimizer;
% .%2 # table_name
% %2 # name
% varchar # type
% 15 # length
[ "sequential_pipe"	]
#select def from optimizers() where name = optimizer;
% .%1 # table_name
% def # name
% clob # type
% 580 # length
[ "optimizer.inline();optimizer.remap();optimizer.costModel();optimizer.coercions();optimizer.aliases();optimizer.evaluate();optimizer.emptybind();optimizer.pushselect();optimizer.aliases();optimizer.mergetable();optimizer.deadcode();optimizer.aliases();optimizer.constants();optimizer.commonTerms();optimizer.projectionpath();optimizer.deadcode();optimizer.reorder();optimizer.matpack();optimizer.querylog();optimizer.multiplex();optimizer.generator();optimizer.profiler();optimizer.candidates();optimizer.deadcode();optimizer.postfix();optimizer.wlc();optimizer.garbageCollector();"	]
#explain copy into ttt from '/tmp/xyz';
% .explain # table_name
% mal # name
% clob # type
% 245 # length
function user.main():void;
    X_1:void := querylog.define("explain copy into ttt from \\'/tmp/xyz\\';":str, "sequential_pipe":str, 21:int);
    X_4:int := sql.mvc();
    (X_25:bat[:int], X_26:bat[:int], X_27:bat[:int]) := sql.copy_from(0x7fadb01d9990:ptr, "|":str, "\n":str, nil:str, "null":str, "/tmp/xyz":str, -1:lng, 0:lng, 0:int, nil:str, 0:int);
    X_28:lng := aggr.count(X_25:bat[:int]);
    X_29:lng := sql.claim(X_4:int, "sys":str, "ttt":str, X_28:lng);
    X_33:int := sql.append(X_4:int, "sys":str, "ttt":str, "averylongcolumnnametomakeitlargeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee":str, X_29:lng, X_25:bat[:int]);
    X_36:int := sql.append(X_33:int, "sys":str, "ttt":str, "b":str, X_29:lng, X_26:bat[:int]);
    X_39:int := sql.append(X_36:int, "sys":str, "ttt":str, "c":str, X_29:lng, X_27:bat[:int]);
    sql.affectedRows(X_39:int, X_28:lng);
end user.main;
#inline               actions= 0 time=0 usec 
#remap                actions= 0 time=1 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=1 usec 
#aliases              actions=11 time=4 usec 
#evaluate             actions= 0 time=3 usec 
#emptybind            actions= 0 time=0 usec 
#pushselect           actions= 0 time=6 usec 
#aliases              actions= 0 time=0 usec 
#constants            actions= 0 time=3 usec 
#commonTerms          actions= 0 time=1 usec 
#projectionpath       actions= 0 time=1 usec 
#deadcode             actions= 0 time=2 usec 
#reorder              actions= 1 time=7 usec 
#matpack              actions= 0 time=0 usec 
#multiplex            actions= 0 time=1 usec 
#profiler             actions= 1 time=1 usec 
#candidates           actions= 1 time=0 usec 
#deadcode             actions= 0 time=2 usec 
#postfix              actions= 0 time=1 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=13 usec 
#total                actions=27 time=96 usec 
#start transaction;
#create local temp table "opt_pipe_name" ("opt_pipe_name" string);
#insert into "opt_pipe_name" values ((select optimizer));
[ 1	]
#set optimizer = substring((select def from optimizers() where name = (select opt_pipe_name from "opt_pipe_name")),0,
#                length((select def from optimizers() where name = (select opt_pipe_name from "opt_pipe_name")))-length('optimizer.garbageCollector();')) || 'optimizer.sql_append();optimizer.garbageCollector();';
#select optimizer;
% .%2 # table_name
% %2 # name
% varchar # type
% 6 # length
[ "user_0"	]
#select def from optimizers() where name = optimizer;
% .%1 # table_name
% def # name
% clob # type
% 603 # length
[ "optimizer.inline();optimizer.remap();optimizer.costModel();optimizer.coercions();optimizer.aliases();optimizer.evaluate();optimizer.emptybind();optimizer.pushselect();optimizer.aliases();optimizer.mergetable();optimizer.deadcode();optimizer.aliases();optimizer.constants();optimizer.commonTerms();optimizer.projectionpath();optimizer.deadcode();optimizer.reorder();optimizer.matpack();optimizer.querylog();optimizer.multiplex();optimizer.generator();optimizer.profiler();optimizer.candidates();optimizer.deadcode();optimizer.postfix();optimizer.wlc();optimizer.sql_append();optimizer.garbageCollector();"	]
#rollback;
#explain copy into ttt from '/tmp/xyz';
% .explain # table_name
% mal # name
% clob # type
% 245 # length
function user.main():void;
    X_1:void := querylog.define("explain copy into ttt from \\'/tmp/xyz\\';":str, "user_0":str, 21:int);
    X_4:int := sql.mvc();
    (X_25:bat[:int], X_26:bat[:int], X_27:bat[:int]) := sql.copy_from(0x7fadb01d9990:ptr, "|":str, "\n":str, nil:str, "null":str, "/tmp/xyz":str, -1:lng, 0:lng, 0:int, nil:str, 0:int);
    X_28:lng := aggr.count(X_25:bat[:int]);
    X_29:lng := sql.claim(X_4:int, "sys":str, "ttt":str, X_28:lng);
    X_33:int := sql.append(X_4:int, "sys":str, "ttt":str, "averylongcolumnnametomakeitlargeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee":str, X_29:lng, X_25:bat[:int]);
    X_36:int := sql.append(X_33:int, "sys":str, "ttt":str, "b":str, X_29:lng, X_26:bat[:int]);
    X_39:int := sql.append(X_36:int, "sys":str, "ttt":str, "c":str, X_29:lng, X_27:bat[:int]);
    sql.affectedRows(X_39:int, X_28:lng);
end user.main;
#inline               actions= 0 time=0 usec 
#remap                actions= 0 time=0 usec 
#costmodel            actions= 1 time=0 usec 
#coercion             actions=11 time=2 usec 
#aliases              actions=11 time=3 usec 
#evaluate             actions= 0 time=1 usec 
#emptybind            actions= 0 time=0 usec 
#pushselect           actions= 0 time=4 usec 
#aliases              actions= 0 time=1 usec 
#mergetable           actions= 0 time=11 usec 
#deadcode             actions= 0 time=2 usec 
#aliases              actions= 0 time=0 usec 
#constants            actions= 0 time=2 usec 
#commonTerms          actions= 0 time=1 usec 
#projectionpath       actions= 0 time=1 usec 
#deadcode             actions= 0 time=2 usec 
#reorder              actions= 1 time=6 usec 
#matpack              actions= 0 time=0 usec 
#multiplex            actions= 0 time=1 usec 
#profiler             actions= 1 time=0 usec 
#candidates           actions= 1 time=0 usec 
#deadcode             actions= 0 time=2 usec 
#postfix              actions= 0 time=1 usec 
#wlc                  actions= 0 time=1 usec 
#optimizer.sql_append actions= 0 time=2 usec 
#garbagecollector     actions= 1 time=13 usec 
#total                actions=28 time=93 usec 
#drop table ttt;

# 22:58:58 >  
# 22:58:58 >  "Done."
# 22:58:58 >  

