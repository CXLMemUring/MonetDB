name: MonetDB build and test

on:
  push:
    branches: 
      - 'branches/*'
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    - cron:  '15 1 * * *'

jobs:
  test:
    strategy:
      fail-fast: false  # don't stop other jobs
      matrix:
        branch: [ master ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        c_compiler: [ gcc, clang, cl ]
        include:
          - os: windows-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: clang
          - os: macos-latest
            c_compiler: gcc-12
          - os: ubuntu-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: clang
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: macos-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: cl
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}

      - name: make MonetDB on linux
        run: |
          mkdir build
          cd build 
          cmake ..  \
            -DCMAKE_INSTALL_PREFIX=$HOME/${{ matrix.branch }} \
            -DPY3INTEGRATION=OFF \
            -DRINTEGRATION=OFF \
            -DCMAKE_BUILD_TYPE=Release \
            -DASSERT=OFF \
            -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
            -DCMAKE_SUMMARY=ON
          make install -j3
        if: runner.os == 'Linux'

      - name: brew packages
        run: brew install bison
        if: runner.os == 'macOS'

      - name: make MonetDB on macos
        run: |
          mkdir build
          cd build 
          cmake .. \
            -DCMAKE_INSTALL_PREFIX=$HOME/${{ matrix.branch }} \
            -DPY3INTEGRATION=OFF \
            -DRINTEGRATION=OFF  \
            -DCMAKE_BUILD_TYPE=Release \
            -DASSERT=OFF \
            -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
            -DBISON_EXECUTABLE=/usr/local/opt/bison/bin/bison \
            -DCMAKE_SUMMARY=ON
          make install -j3
        if: runner.os == 'macOS'

      - name: choco packages
        run: |
          choco install winflexbison3
          vcpkg install pcre getopt
        if: runner.os == 'Windows'

      - name: make MonetDB on Windows
        run: |
          mkdir build
          cd build 
          cmake ..  -DCMAKE_INSTALL_PREFIX=$HOME/${{ matrix.branch }} -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake -DPY3INTEGRATION=OFF -DRINTEGRATION=OFF  -DCMAKE_BUILD_TYPE=Release -DASSERT=OFF -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}  -DCMAKE_SUMMARY=ON
          cmake --build . --target install
        if: runner.os == 'Windows'

      - name: ctest 
        run: |
          cd build 
          cmake --build . --target test
      - name: install pymonetdb
        run: pip3 install pymonetdb
      - name: which python
        run: 
          head -n 1 $HOME/${{ matrix.branch }}/bin/Mtest.py 
      - name: mtest 
        run: |
          #cd build 
          #cmake --build . --target mtest
          PATH=$HOME/${{ matrix.branch }}/bin:$PATH $HOME/${{ matrix.branch }}/bin/Mtest.py -r --debug=0 --ci --no-html --TSTTRGBASE=.

      - name: Tar files
        run: tar -cvf mtests.tar mTests
      - name: Publish mtest results
        uses: actions/upload-artifact@v3
        with:
          name: mtest-${{ matrix.branch }}-${{ matrix.os }}-${{ matrix.c_compiler }}
          path: mtests.tar
